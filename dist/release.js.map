{
  "version": 3,
  "sources": ["../white-dwarf/node_modules/events/events.js", "../white-dwarf/node_modules/ecsy-wd/src/Utils.js", "../white-dwarf/node_modules/ecsy-wd/src/SystemManager.js", "../white-dwarf/node_modules/ecsy-wd/src/ObjectPool.js", "../white-dwarf/node_modules/ecsy-wd/src/EventDispatcher.js", "../white-dwarf/node_modules/ecsy-wd/src/Query.js", "../white-dwarf/node_modules/ecsy-wd/src/QueryManager.js", "../white-dwarf/node_modules/ecsy-wd/src/Component.js", "../white-dwarf/node_modules/ecsy-wd/src/SystemStateComponent.js", "../white-dwarf/node_modules/ecsy-wd/src/EntityManager.js", "../white-dwarf/node_modules/ecsy-wd/src/ComponentManager.js", "../white-dwarf/node_modules/ecsy-wd/src/Version.js", "../white-dwarf/node_modules/ecsy-wd/src/WrapImmutableComponent.js", "../white-dwarf/node_modules/ecsy-wd/src/Entity.js", "../white-dwarf/node_modules/ecsy-wd/src/World.js", "../white-dwarf/node_modules/ecsy-wd/src/System.js", "../white-dwarf/node_modules/ecsy-wd/src/TagComponent.js", "../white-dwarf/node_modules/ecsy-wd/src/Types.js", "../white-dwarf/node_modules/ecsy-wd/src/RemoteDevTools/utils.js", "../white-dwarf/node_modules/ecsy-wd/src/RemoteDevTools/index.js", "../white-dwarf/src/Core/ComponentRegistry.ts", "../white-dwarf/src/Core/Context/RenderContext.ts", "../white-dwarf/src/Core/CoreSetup.ts", "../white-dwarf/src/Core/index.ts", "../white-dwarf/node_modules/gl-matrix/esm/common.js", "../white-dwarf/node_modules/gl-matrix/esm/mat3.js", "../white-dwarf/node_modules/gl-matrix/esm/mat4.js", "../white-dwarf/node_modules/gl-matrix/esm/quat.js", "../white-dwarf/node_modules/gl-matrix/esm/vec3.js", "../white-dwarf/node_modules/gl-matrix/esm/vec4.js", "../white-dwarf/node_modules/gl-matrix/esm/vec2.js", "../white-dwarf/src/Mathematics/Quaternion.ts", "../white-dwarf/src/Mathematics/Vector3.ts", "../white-dwarf/src/Core/Locomotion/DataComponent/TransformData3D.ts", "../white-dwarf/src/Core/Render/DataComponent/PerspectiveCameraData3D.ts", "../white-dwarf/src/Core/Render/TagComponent/MainCameraInitTag.ts", "../white-dwarf/src/Core/Render/TagComponent/MainCameraTag.ts", "../white-dwarf/src/Core/Render/System/MainCameraInitSystem.ts", "../white-dwarf/src/Core/Render/Material.ts", "../white-dwarf/src/Core/Render/DataComponent/MeshRenderData3D.ts", "../white-dwarf/src/Core/Render/TagComponent/DirectionalLightTag.ts", "../white-dwarf/src/Core/Render/DataComponent/OrthographicCameraData3D.ts", "../white-dwarf/src/Core/Render/System/CanvasWebGLRenderer.ts", "../white-dwarf/src/Core/Render/System/BuildInRenderers/WebGL/WebGLOpaqueRenderer.ts", "../white-dwarf/src/Core/Render/System/ClearCanvasWebGLSystem.ts", "../white-dwarf/src/Core/Render/DataComponent/MeshGenerator/CubeMeshGeneratorData.ts", "../white-dwarf/src/Core/Render/Mesh.ts", "../white-dwarf/src/Core/Render/System/MeshGeneratorSystems/CubeMeshGeneratorSystem.ts", "../white-dwarf/src/Core/Render/DataComponent/MeshGenerator/IcosphereMeshGeneratorData.ts", "../white-dwarf/src/Core/Render/System/MeshGeneratorSystems/IcosphereMeshGeneratorSystem.ts", "../white-dwarf/src/Core/Render/MeshBuffer.ts", "../white-dwarf/src/Core/Render/System/WebGLMeshCompiler.ts", "../white-dwarf/src/Core/Render/WebGLRenderPipelineRegister.ts", "../white-dwarf/src/Editor/TagComponent/EditorSceneCamTag.ts", "../white-dwarf/src/Editor/TagComponent/EditorSelectedTag.ts", "../white-dwarf/src/Core/Serialization/EntitySerializer.ts", "../white-dwarf/src/Core/Serialization/WorldSerializer.ts", "../white-dwarf/src/Editor/EditorContext.ts", "../white-dwarf/src/Mathematics/Vector2.ts", "../white-dwarf/src/Utils/System/Cam3DDragSystem.ts", "../white-dwarf/src/Editor/System/EditorViewPortWebGlSystems/EditorViewPortWebGLSystem.ts", "../white-dwarf/src/Editor/System/EditorViewPortWebGlSystems/EditorViewPortWebGLRotateSystem.ts", "../white-dwarf/src/Editor/System/EditorViewPortWebGlSystems/EditorViewPortWebGLTransformSystem.ts", "../white-dwarf/src/Editor/EditorSystemWebGLRegister.ts", "../white-dwarf/src/Editor/System/EditorCamTagAppendSystem.ts", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../white-dwarf/ecsy/src/Utils.js", "../white-dwarf/ecsy/src/EventDispatcher.js", "../white-dwarf/ecsy/src/Query.js", "../white-dwarf/ecsy/src/Component.js", "../white-dwarf/ecsy/src/SystemStateComponent.js", "../white-dwarf/ecsy/src/System.js", "../white-dwarf/ecsy/src/TagComponent.js", "../white-dwarf/ecsy/src/Types.js", "../white-dwarf/ecsy/src/RemoteDevTools/utils.js", "../white-dwarf/ecsy/src/RemoteDevTools/index.js", "../src/DataComponent/SunLightSpinData.ts", "../src/Systems/SunLightSpinSystem.ts", "../src/index.ts", "../src/release.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "/**\r\n * Return the name of a component\r\n * @param {Component} Component\r\n * @private\r\n */\r\nexport function getName(Component) {\r\n  return Component.name;\r\n}\r\n\r\n/**\r\n * Return a valid property name for the Component\r\n * @param {Component} Component\r\n * @private\r\n */\r\nexport function componentPropertyName(Component) {\r\n  return getName(Component);\r\n}\r\n\r\n/**\r\n * Get a key from a list of components\r\n * @param {Array(Component)} Components Array of components to generate the key\r\n * @private\r\n */\r\nexport function queryKey(Components) {\r\n  var ids = [];\r\n  for (var n = 0; n < Components.length; n++) {\r\n    var T = Components[n];\r\n\r\n    if (!componentRegistered(T)) {\r\n      throw new Error(`Tried to create a query with an unregistered component`);\r\n    }\r\n\r\n    if (typeof T === \"object\") {\r\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\r\n      ids.push(operator + T.Component._typeId);\r\n    } else {\r\n      ids.push(T._typeId);\r\n    }\r\n  }\r\n\r\n  return ids.sort().join(\"-\");\r\n}\r\n\r\n// Detector for browser's \"window\"\r\nexport const hasWindow = typeof window !== \"undefined\";\r\n\r\n// performance.now() \"polyfill\"\r\nexport const now =\r\n  hasWindow && typeof window.performance !== \"undefined\"\r\n    ? performance.now.bind(performance)\r\n    : Date.now.bind(Date);\r\n\r\nexport function componentRegistered(T) {\r\n  return (\r\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\r\n    (T.isComponent && T._typeId !== undefined)\r\n  );\r\n}\r\n", "import { now } from \"./Utils.js\";\r\n\r\nexport class SystemManager {\r\n  constructor(world) {\r\n    this._systems = [];\r\n    this._executeSystems = []; // Systems that have `execute` method\r\n    this.world = world;\r\n    this.lastExecutedSystem = null;\r\n  }\r\n\r\n  registerSystem(SystemClass, attributes) {\r\n    if (!SystemClass.isSystem) {\r\n      throw new Error(\r\n        `System '${SystemClass.name}' does not extend 'System' class`\r\n      );\r\n    }\r\n\r\n    if (this.getSystem(SystemClass) !== undefined) {\r\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\r\n      return this;\r\n    }\r\n\r\n    var system = new SystemClass(this.world, attributes);\r\n    if (system.init) system.init(attributes);\r\n    system.order = this._systems.length;\r\n    this._systems.push(system);\r\n    if (system.execute) {\r\n      this._executeSystems.push(system);\r\n      this.sortSystems();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  unregisterSystem(SystemClass) {\r\n    let system = this.getSystem(SystemClass);\r\n    if (system === undefined) {\r\n      console.warn(\r\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\r\n      );\r\n      return this;\r\n    }\r\n\r\n    this._systems.splice(this._systems.indexOf(system), 1);\r\n\r\n    if (system.execute) {\r\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\r\n    }\r\n\r\n    // @todo Add system.unregister() call to free resources\r\n    return this;\r\n  }\r\n\r\n  sortSystems() {\r\n    this._executeSystems.sort((a, b) => {\r\n      return a.priority - b.priority || a.order - b.order;\r\n    });\r\n  }\r\n\r\n  getSystem(SystemClass) {\r\n    return this._systems.find((s) => s instanceof SystemClass);\r\n  }\r\n\r\n  getSystems() {\r\n    return this._systems;\r\n  }\r\n\r\n  removeSystem(SystemClass) {\r\n    var index = this._systems.indexOf(SystemClass);\r\n    if (!~index) return;\r\n\r\n    this._systems.splice(index, 1);\r\n  }\r\n\r\n  executeSystem(system, delta, time) {\r\n    if (system.initialized) {\r\n      if (system.canExecute()) {\r\n        let startTime = now();\r\n        system.execute(delta, time);\r\n        system.executeTime = now() - startTime;\r\n        this.lastExecutedSystem = system;\r\n        system.clearEvents();\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this._executeSystems.forEach((system) => system.stop());\r\n  }\r\n\r\n  execute(delta, time, forcePlay) {\r\n    this._executeSystems.forEach(\r\n      (system) =>\r\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\r\n    );\r\n  }\r\n\r\n  stats() {\r\n    var stats = {\r\n      numSystems: this._systems.length,\r\n      systems: {},\r\n    };\r\n\r\n    for (var i = 0; i < this._systems.length; i++) {\r\n      var system = this._systems[i];\r\n      var systemStats = (stats.systems[system.getName()] = {\r\n        queries: {},\r\n        executeTime: system.executeTime,\r\n      });\r\n      for (var name in system.ctx) {\r\n        systemStats.queries[name] = system.ctx[name].stats();\r\n      }\r\n    }\r\n\r\n    return stats;\r\n  }\r\n}\r\n", "export class ObjectPool {\r\n  // @todo Add initial size\r\n  constructor(T, initialSize) {\r\n    this.freeList = [];\r\n    this.count = 0;\r\n    this.T = T;\r\n    this.isObjectPool = true;\r\n\r\n    if (typeof initialSize !== \"undefined\") {\r\n      this.expand(initialSize);\r\n    }\r\n  }\r\n\r\n  acquire() {\r\n    // Grow the list by 20%ish if we're out\r\n    if (this.freeList.length <= 0) {\r\n      this.expand(Math.round(this.count * 0.2) + 1);\r\n    }\r\n\r\n    var item = this.freeList.pop();\r\n\r\n    return item;\r\n  }\r\n\r\n  release(item) {\r\n    item.reset();\r\n    this.freeList.push(item);\r\n  }\r\n\r\n  expand(count) {\r\n    for (var n = 0; n < count; n++) {\r\n      var clone = new this.T();\r\n      clone._pool = this;\r\n      this.freeList.push(clone);\r\n    }\r\n    this.count += count;\r\n  }\r\n\r\n  totalSize() {\r\n    return this.count;\r\n  }\r\n\r\n  totalFree() {\r\n    return this.freeList.length;\r\n  }\r\n\r\n  totalUsed() {\r\n    return this.count - this.freeList.length;\r\n  }\r\n}\r\n", "/**\r\n * @private\r\n * @class EventDispatcher\r\n */\r\nexport default class EventDispatcher {\r\n  constructor() {\r\n    this._listeners = {};\r\n    this.stats = {\r\n      fired: 0,\r\n      handled: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add an event listener\r\n   * @param {String} eventName Name of the event to listen\r\n   * @param {Function} listener Callback to trigger when the event is fired\r\n   */\r\n  addEventListener(eventName, listener) {\r\n    let listeners = this._listeners;\r\n    if (listeners[eventName] === undefined) {\r\n      listeners[eventName] = [];\r\n    }\r\n\r\n    if (listeners[eventName].indexOf(listener) === -1) {\r\n      listeners[eventName].push(listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if an event listener is already added to the list of listeners\r\n   * @param {String} eventName Name of the event to check\r\n   * @param {Function} listener Callback for the specified event\r\n   */\r\n  hasEventListener(eventName, listener) {\r\n    return (\r\n      this._listeners[eventName] !== undefined &&\r\n      this._listeners[eventName].indexOf(listener) !== -1\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener\r\n   * @param {String} eventName Name of the event to remove\r\n   * @param {Function} listener Callback for the specified event\r\n   */\r\n  removeEventListener(eventName, listener) {\r\n    var listenerArray = this._listeners[eventName];\r\n    if (listenerArray !== undefined) {\r\n      var index = listenerArray.indexOf(listener);\r\n      if (index !== -1) {\r\n        listenerArray.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatch an event\r\n   * @param {String} eventName Name of the event to dispatch\r\n   * @param {Entity} entity (Optional) Entity to emit\r\n   * @param {Component} component\r\n   */\r\n  dispatchEvent(eventName, entity, component) {\r\n    this.stats.fired++;\r\n\r\n    var listenerArray = this._listeners[eventName];\r\n    if (listenerArray !== undefined) {\r\n      var array = listenerArray.slice(0);\r\n\r\n      for (var i = 0; i < array.length; i++) {\r\n        array[i].call(this, entity, component);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset stats counters\r\n   */\r\n  resetCounters() {\r\n    this.stats.fired = this.stats.handled = 0;\r\n  }\r\n}\r\n", "import EventDispatcher from \"./EventDispatcher.js\";\r\nimport { queryKey } from \"./Utils.js\";\r\n\r\nexport default class Query {\r\n  /**\r\n   * @param {Array(Component)} Components List of types of components to query\r\n   */\r\n  constructor(Components, manager) {\r\n    this.Components = [];\r\n    this.NotComponents = [];\r\n\r\n    Components.forEach((component) => {\r\n      if (typeof component === \"object\") {\r\n        this.NotComponents.push(component.Component);\r\n      } else {\r\n        this.Components.push(component);\r\n      }\r\n    });\r\n\r\n    if (this.Components.length === 0) {\r\n      throw new Error(\"Can't create a query without components\");\r\n    }\r\n\r\n    this.entities = [];\r\n\r\n    this.eventDispatcher = new EventDispatcher();\r\n\r\n    // This query is being used by a reactive system\r\n    this.reactive = false;\r\n\r\n    this.key = queryKey(Components);\r\n\r\n    // Fill the query with the existing entities\r\n    for (var i = 0; i < manager._entities.length; i++) {\r\n      var entity = manager._entities[i];\r\n      if (this.match(entity)) {\r\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\r\n        entity.queries.push(this);\r\n        this.entities.push(entity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add entity to this query\r\n   * @param {Entity} entity\r\n   */\r\n  addEntity(entity) {\r\n    entity.queries.push(this);\r\n    this.entities.push(entity);\r\n\r\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\r\n  }\r\n\r\n  /**\r\n   * Remove entity from this query\r\n   * @param {Entity} entity\r\n   */\r\n  removeEntity(entity) {\r\n    let index = this.entities.indexOf(entity);\r\n    if (~index) {\r\n      this.entities.splice(index, 1);\r\n\r\n      index = entity.queries.indexOf(this);\r\n      entity.queries.splice(index, 1);\r\n\r\n      this.eventDispatcher.dispatchEvent(\r\n        Query.prototype.ENTITY_REMOVED,\r\n        entity\r\n      );\r\n    }\r\n  }\r\n\r\n  match(entity) {\r\n    return (\r\n      entity.hasAllComponents(this.Components) &&\r\n      !entity.hasAnyComponents(this.NotComponents)\r\n    );\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      key: this.key,\r\n      reactive: this.reactive,\r\n      components: {\r\n        included: this.Components.map((C) => C.name),\r\n        not: this.NotComponents.map((C) => C.name),\r\n      },\r\n      numEntities: this.entities.length,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return stats for this query\r\n   */\r\n  stats() {\r\n    return {\r\n      numComponents: this.Components.length,\r\n      numEntities: this.entities.length,\r\n    };\r\n  }\r\n}\r\n\r\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\r\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\r\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\r\n", "import Query from \"./Query.js\";\r\nimport { queryKey } from \"./Utils.js\";\r\n\r\n/**\r\n * @private\r\n * @class QueryManager\r\n */\r\nexport default class QueryManager {\r\n  constructor(world) {\r\n    this._world = world;\r\n\r\n    // Queries indexed by a unique identifier for the components it has\r\n    this._queries = {};\r\n  }\r\n\r\n  onEntityRemoved(entity) {\r\n    for (var queryName in this._queries) {\r\n      var query = this._queries[queryName];\r\n      if (entity.queries.indexOf(query) !== -1) {\r\n        query.removeEntity(entity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback when a component is added to an entity\r\n   * @param {Entity} entity Entity that just got the new component\r\n   * @param {Component} Component Component added to the entity\r\n   */\r\n  onEntityComponentAdded(entity, Component) {\r\n    // @todo Use bitmask for checking components?\r\n\r\n    // Check each indexed query to see if we need to add this entity to the list\r\n    for (var queryName in this._queries) {\r\n      var query = this._queries[queryName];\r\n\r\n      if (\r\n        !!~query.NotComponents.indexOf(Component) &&\r\n        ~query.entities.indexOf(entity)\r\n      ) {\r\n        query.removeEntity(entity);\r\n        continue;\r\n      }\r\n\r\n      // Add the entity only if:\r\n      // Component is in the query\r\n      // and Entity has ALL the components of the query\r\n      // and Entity is not already in the query\r\n      if (\r\n        !~query.Components.indexOf(Component) ||\r\n        !query.match(entity) ||\r\n        ~query.entities.indexOf(entity)\r\n      )\r\n        continue;\r\n\r\n      query.addEntity(entity);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback when a component is removed from an entity\r\n   * @param {Entity} entity Entity to remove the component from\r\n   * @param {Component} Component Component to remove from the entity\r\n   */\r\n  onEntityComponentRemoved(entity, Component) {\r\n    for (var queryName in this._queries) {\r\n      var query = this._queries[queryName];\r\n\r\n      if (\r\n        !!~query.NotComponents.indexOf(Component) &&\r\n        !~query.entities.indexOf(entity) &&\r\n        query.match(entity)\r\n      ) {\r\n        query.addEntity(entity);\r\n        continue;\r\n      }\r\n\r\n      if (\r\n        !!~query.Components.indexOf(Component) &&\r\n        !!~query.entities.indexOf(entity) &&\r\n        !query.match(entity)\r\n      ) {\r\n        query.removeEntity(entity);\r\n        continue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a query for the specified components\r\n   * @param {Component} Components Components that the query should have\r\n   */\r\n  getQuery(Components) {\r\n    var key = queryKey(Components);\r\n    var query = this._queries[key];\r\n    if (!query) {\r\n      this._queries[key] = query = new Query(Components, this._world);\r\n    }\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Return some stats from this class\r\n   */\r\n  stats() {\r\n    var stats = {};\r\n    for (var queryName in this._queries) {\r\n      stats[queryName] = this._queries[queryName].stats();\r\n    }\r\n    return stats;\r\n  }\r\n}\r\n", "import EventEmitter from \"events\";\r\n\r\nexport class Component {\r\n  constructor(props) {\r\n    if (props !== false) {\r\n      const schema = this.constructor.schema;\r\n\r\n      for (const key in schema) {\r\n        if (props && props.hasOwnProperty(key)) {\r\n          this[key] = props[key];\r\n        } else {\r\n          const schemaProp = schema[key];\r\n          if (schemaProp.hasOwnProperty(\"default\")) {\r\n            this[key] = schemaProp.type.clone(schemaProp.default);\r\n          } else {\r\n            const type = schemaProp.type;\r\n            this[key] = type.clone(type.default);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\r\n        this.checkUndefinedAttributes(props);\r\n      }\r\n    }\r\n\r\n    this.eventEmitter = new EventEmitter();\r\n\r\n    this._pool = null;\r\n\r\n    this.onInspector = null;\r\n    this.useDefaultInspector = true;\r\n  }\r\n\r\n  copy(source) {\r\n    const schema = this.constructor.schema;\r\n\r\n    for (const key in schema) {\r\n      const prop = schema[key];\r\n\r\n      if (source.hasOwnProperty(key)) {\r\n        this[key] = prop.type.copy(source[key], this[key]);\r\n      }\r\n    }\r\n\r\n    // @DEBUG\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      this.checkUndefinedAttributes(source);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new this.constructor().copy(this);\r\n  }\r\n\r\n  reset() {\r\n    const schema = this.constructor.schema;\r\n\r\n    for (const key in schema) {\r\n      const schemaProp = schema[key];\r\n\r\n      if (schemaProp.hasOwnProperty(\"default\")) {\r\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\r\n      } else {\r\n        const type = schemaProp.type;\r\n        this[key] = type.copy(type.default, this[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    if (this._pool) {\r\n      this._pool.release(this);\r\n    }\r\n  }\r\n\r\n  getName() {\r\n    return this.constructor.getName();\r\n  }\r\n\r\n  checkUndefinedAttributes(src) {\r\n    const schema = this.constructor.schema;\r\n\r\n    // Check that the attributes defined in source are also defined in the schema\r\n    Object.keys(src).forEach((srcKey) => {\r\n      if (!schema.hasOwnProperty(srcKey)) {\r\n        console.warn(\r\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nComponent.schema = {};\r\nComponent.isComponent = true;\r\nComponent.getName = function () {\r\n  return this.displayName || this.name;\r\n};\r\n\r\nexport const COMPONENT_CHANGE_EVENT = \"COMPONENT_CHANGE_EVENT\";\r\n", "import { Component } from \"./Component.js\";\r\n\r\nexport class SystemStateComponent extends Component {}\r\n\r\nSystemStateComponent.isSystemStateComponent = true;\r\n", "import { ObjectPool } from \"./ObjectPool.js\";\r\nimport QueryManager from \"./QueryManager.js\";\r\nimport EventDispatcher from \"./EventDispatcher.js\";\r\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\r\n\r\nclass EntityPool extends ObjectPool {\r\n  constructor(entityManager, entityClass, initialSize) {\r\n    super(entityClass, undefined);\r\n    this.entityManager = entityManager;\r\n\r\n    if (typeof initialSize !== \"undefined\") {\r\n      this.expand(initialSize);\r\n    }\r\n  }\r\n\r\n  expand(count) {\r\n    for (var n = 0; n < count; n++) {\r\n      var clone = new this.T(this.entityManager);\r\n      clone._pool = this;\r\n      this.freeList.push(clone);\r\n    }\r\n    this.count += count;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @class EntityManager\r\n */\r\nexport class EntityManager {\r\n  constructor(world) {\r\n    this.world = world;\r\n    this.componentsManager = world.componentsManager;\r\n\r\n    // All the entities in this instance\r\n    this._entities = [];\r\n    this._nextEntityId = 0;\r\n\r\n    this._entitiesByNames = {};\r\n    this._entitiesById = {};\r\n\r\n    this._queryManager = new QueryManager(this);\r\n    this.eventDispatcher = new EventDispatcher();\r\n    this._entityPool = new EntityPool(\r\n      this,\r\n      this.world.options.entityClass,\r\n      this.world.options.entityPoolSize\r\n    );\r\n\r\n    // Deferred deletion\r\n    this.entitiesWithComponentsToRemove = [];\r\n    this.entitiesToRemove = [];\r\n    this.deferredRemovalEnabled = true;\r\n  }\r\n\r\n  getEntityByName(name) {\r\n    return this._entitiesByNames[name];\r\n  }\r\n\r\n  getEntityById(id) {\r\n    return this._entitiesById[id];\r\n  }\r\n\r\n  getAllEntities() {\r\n    return this._entities;\r\n  }\r\n\r\n  idExists(id) {\r\n    return this._entitiesById[id] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Create a new entity\r\n   */\r\n  createEntity(name, id) {\r\n    var entity = this._entityPool.acquire();\r\n    entity.alive = true;\r\n    entity.name = name || \"\";\r\n    if (name) {\r\n      if (this._entitiesByNames[name]) {\r\n        console.warn(`Entity name '${name}' already exist`);\r\n      } else {\r\n        this._entitiesByNames[name] = entity;\r\n      }\r\n    }\r\n    // If the id is specified, use it.\r\n    if (id) {\r\n      entity.id = id;\r\n      // Remove all the duplicated in the pool free list.\r\n      this._entityPool.freeList = this._entityPool.freeList.filter(\r\n        e => e.id !== id\r\n      )\r\n    }\r\n    this._entitiesById[entity.id] = entity;\r\n\r\n    this._entities.push(entity);\r\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\r\n    this.world.onEntityChanged.forEach(callback => {\r\n      callback(this._entities);\r\n    });\r\n    return entity;\r\n  }\r\n\r\n  // COMPONENTS\r\n\r\n  /**\r\n   * Add a component to an entity\r\n   * @param {Entity} entity Entity where the component will be added\r\n   * @param {Component} Component Component to be added to the entity\r\n   * @param {Object} values Optional values to replace the default attributes\r\n   */\r\n  entityAddComponent(entity, Component, values) {\r\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\r\n    if (\r\n      typeof Component._typeId === \"undefined\" &&\r\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\r\n    ) {\r\n      throw new Error(\r\n        `Attempted to add unregistered component \"${Component.getName()}\"`\r\n      );\r\n    }\r\n\r\n    if (~entity._ComponentTypes.indexOf(Component)) {\r\n      if (process.env.NODE_ENV !== \"production\") {\r\n        console.warn(\r\n          \"Component type already exists on entity.\",\r\n          entity,\r\n          Component.getName()\r\n        );\r\n      }\r\n      return;\r\n    }\r\n\r\n    entity._ComponentTypes.push(Component);\r\n\r\n    if (Component.__proto__ === SystemStateComponent) {\r\n      entity.numStateComponents++;\r\n    }\r\n\r\n    var componentPool = this.world.componentsManager.getComponentsPool(\r\n      Component\r\n    );\r\n\r\n    var component = componentPool\r\n      ? componentPool.acquire()\r\n      : new Component(values);\r\n\r\n    if (componentPool && values) {\r\n      component.copy(values);\r\n    }\r\n\r\n    entity._components[Component._typeId] = component;\r\n\r\n    this._queryManager.onEntityComponentAdded(entity, Component);\r\n    this.world.componentsManager.componentAddedToEntity(Component);\r\n\r\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\r\n  }\r\n\r\n  /**\r\n   * Remove a component from an entity\r\n   * @param {Entity} entity Entity which will get removed the component\r\n   * @param {*} Component Component to remove from the entity\r\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\r\n   */\r\n  entityRemoveComponent(entity, Component, immediately) {\r\n    var index = entity._ComponentTypes.indexOf(Component);\r\n    if (!~index) return;\r\n\r\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\r\n\r\n    if (immediately) {\r\n      this._entityRemoveComponentSync(entity, Component, index);\r\n    } else {\r\n      if (entity._ComponentTypesToRemove.length === 0)\r\n        this.entitiesWithComponentsToRemove.push(entity);\r\n\r\n      entity._ComponentTypes.splice(index, 1);\r\n      entity._ComponentTypesToRemove.push(Component);\r\n\r\n      entity._componentsToRemove[Component._typeId] =\r\n        entity._components[Component._typeId];\r\n      delete entity._components[Component._typeId];\r\n    }\r\n\r\n    // Check each indexed query to see if we need to remove it\r\n    this._queryManager.onEntityComponentRemoved(entity, Component);\r\n\r\n    if (Component.__proto__ === SystemStateComponent) {\r\n      entity.numStateComponents--;\r\n\r\n      // Check if the entity was a ghost waiting for the last system state component to be removed\r\n      if (entity.numStateComponents === 0 && !entity.alive) {\r\n        entity.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  _entityRemoveComponentSync(entity, Component, index) {\r\n    // Remove T listing on entity and property ref, then free the component.\r\n    entity._ComponentTypes.splice(index, 1);\r\n    var component = entity._components[Component._typeId];\r\n    delete entity._components[Component._typeId];\r\n    component.dispose();\r\n    this.world.componentsManager.componentRemovedFromEntity(Component);\r\n  }\r\n\r\n  /**\r\n   * Remove all the components from an entity\r\n   * @param {Entity} entity Entity from which the components will be removed\r\n   */\r\n  entityRemoveAllComponents(entity, immediately) {\r\n    let Components = entity._ComponentTypes;\r\n\r\n    for (let j = Components.length - 1; j >= 0; j--) {\r\n      if (Components[j].__proto__ !== SystemStateComponent)\r\n        this.entityRemoveComponent(entity, Components[j], immediately);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the entity from this manager. It will clear also its components\r\n   * @param {Entity} entity Entity to remove from the manager\r\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\r\n   */\r\n  removeEntity(entity, immediately) {\r\n    var index = this._entities.indexOf(entity);\r\n\r\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\r\n\r\n    entity.alive = false;\r\n    this.entityRemoveAllComponents(entity, immediately);\r\n\r\n    if (entity.numStateComponents === 0) {\r\n      // Remove from entity list\r\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\r\n      this._queryManager.onEntityRemoved(entity);\r\n      if (immediately === true) {\r\n        this._releaseEntity(entity, index);\r\n      } else {\r\n        this.entitiesToRemove.push(entity);\r\n      }\r\n    }\r\n  }\r\n\r\n  _releaseEntity(entity, index) {\r\n    this._entities.splice(index, 1);\r\n\r\n    if (this._entitiesByNames[entity.name]) {\r\n      delete this._entitiesByNames[entity.name];\r\n    }\r\n    if (this._entitiesById[entity.id]) {\r\n      delete this._entitiesById[entity.id];\r\n    }\r\n\r\n    entity._pool.release(entity);\r\n    this.world.onEntityChanged.forEach(callback => {\r\n      callback(this._entities);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove all entities from this manager\r\n   */\r\n  removeAllEntities() {\r\n    for (var i = this._entities.length - 1; i >= 0; i--) {\r\n      this.removeEntity(this._entities[i]);\r\n    }\r\n  }\r\n\r\n  processDeferredRemoval() {\r\n    if (!this.deferredRemovalEnabled) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\r\n      let entity = this.entitiesToRemove[i];\r\n      let index = this._entities.indexOf(entity);\r\n      this._releaseEntity(entity, index);\r\n    }\r\n    this.entitiesToRemove.length = 0;\r\n\r\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\r\n      let entity = this.entitiesWithComponentsToRemove[i];\r\n      while (entity._ComponentTypesToRemove.length > 0) {\r\n        let Component = entity._ComponentTypesToRemove.pop();\r\n\r\n        var component = entity._componentsToRemove[Component._typeId];\r\n        delete entity._componentsToRemove[Component._typeId];\r\n        component.dispose();\r\n        this.world.componentsManager.componentRemovedFromEntity(Component);\r\n\r\n        //this._entityRemoveComponentSync(entity, Component, index);\r\n      }\r\n    }\r\n\r\n    this.entitiesWithComponentsToRemove.length = 0;\r\n  }\r\n\r\n  /**\r\n   * Get a query based on a list of components\r\n   * @param {Array(Component)} Components List of components that will form the query\r\n   */\r\n  queryComponents(Components) {\r\n    return this._queryManager.getQuery(Components);\r\n  }\r\n\r\n  // EXTRAS\r\n\r\n  /**\r\n   * Return number of entities\r\n   */\r\n  count() {\r\n    return this._entities.length;\r\n  }\r\n\r\n  /**\r\n   * Return some stats\r\n   */\r\n  stats() {\r\n    var stats = {\r\n      numEntities: this._entities.length,\r\n      numQueries: Object.keys(this._queryManager._queries).length,\r\n      queries: this._queryManager.stats(),\r\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\r\n        .length,\r\n      componentPool: {},\r\n      eventDispatcher: this.eventDispatcher.stats,\r\n    };\r\n\r\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\r\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\r\n      stats.componentPool[pool.T.getName()] = {\r\n        used: pool.totalUsed(),\r\n        size: pool.count,\r\n      };\r\n    }\r\n\r\n    return stats;\r\n  }\r\n}\r\n\r\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\r\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\r\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\r\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\r\n", "import { ObjectPool } from \"./ObjectPool.js\";\r\n\r\nexport class ComponentManager {\r\n  constructor() {\r\n    this.Components = [];\r\n    this._ComponentsMap = {};\r\n\r\n    this._componentPool = {};\r\n    this.numComponents = {};\r\n    this.nextComponentId = 0;\r\n  }\r\n\r\n  hasComponent(Component) {\r\n    return this.Components.indexOf(Component) !== -1;\r\n  }\r\n\r\n  registerComponent(Component, objectPool) {\r\n    if (this.Components.indexOf(Component) !== -1) {\r\n      console.warn(\r\n        `Component type: '${Component.getName()}' already registered.`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const schema = Component.schema;\r\n\r\n    if (!schema) {\r\n      throw new Error(\r\n        `Component \"${Component.getName()}\" has no schema property.`\r\n      );\r\n    }\r\n\r\n    for (const propName in schema) {\r\n      const prop = schema[propName];\r\n\r\n      if (!prop.type) {\r\n        throw new Error(\r\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\r\n        );\r\n      }\r\n    }\r\n\r\n    Component._typeId = this.nextComponentId++;\r\n    this.Components.push(Component);\r\n    this._ComponentsMap[Component._typeId] = Component;\r\n    this.numComponents[Component._typeId] = 0;\r\n\r\n    if (objectPool === undefined) {\r\n      objectPool = new ObjectPool(Component);\r\n    } else if (objectPool === false) {\r\n      objectPool = undefined;\r\n    }\r\n\r\n    this._componentPool[Component._typeId] = objectPool;\r\n  }\r\n\r\n  componentAddedToEntity(Component) {\r\n    this.numComponents[Component._typeId]++;\r\n  }\r\n\r\n  componentRemovedFromEntity(Component) {\r\n    this.numComponents[Component._typeId]--;\r\n  }\r\n\r\n  getComponentsPool(Component) {\r\n    return this._componentPool[Component._typeId];\r\n  }\r\n}\r\n", "export const Version = \"0.3.1\";\r\n", "const proxyMap = new WeakMap();\r\n\r\nconst proxyHandler = {\r\n  set(target, prop) {\r\n    throw new Error(\r\n      `Tried to write to \"${target.constructor.getName()}#${String(\r\n        prop\r\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\r\n    );\r\n  },\r\n};\r\n\r\nexport default function wrapImmutableComponent(T, component) {\r\n  if (component === undefined) {\r\n    return undefined;\r\n  }\r\n\r\n  let wrappedComponent = proxyMap.get(component);\r\n\r\n  if (!wrappedComponent) {\r\n    wrappedComponent = new Proxy(component, proxyHandler);\r\n    proxyMap.set(component, wrappedComponent);\r\n  }\r\n\r\n  return wrappedComponent;\r\n}\r\n", "import Query from \"./Query.js\";\r\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\r\nimport { COMPONENT_CHANGE_EVENT } from \"./Component.js\";\r\n\r\nexport class Entity {\r\n  constructor(entityManager) {\r\n    this._entityManager = entityManager || null;\r\n\r\n    // Unique ID for this entity\r\n    do {\r\n      this.id = entityManager._nextEntityId++;\r\n    } while (entityManager.idExists(this.id));\r\n    this.name = \"\";\r\n\r\n    // List of components types the entity has\r\n    this._ComponentTypes = [];\r\n\r\n    // Instance of the components\r\n    this._components = {};\r\n\r\n    this._componentsToRemove = {};\r\n\r\n    // Queries where the entity is added\r\n    this.queries = [];\r\n\r\n    // Used for deferred removal\r\n    this._ComponentTypesToRemove = [];\r\n\r\n    this.alive = false;\r\n\r\n    //if there are state components on a entity, it can't be removed completely\r\n    this.numStateComponents = 0;\r\n  }\r\n\r\n  // COMPONENTS\r\n\r\n  getComponent(Component, includeRemoved) {\r\n    var component = this._components[Component._typeId];\r\n\r\n    if (!component && includeRemoved === true) {\r\n      component = this._componentsToRemove[Component._typeId];\r\n    }\r\n\r\n    return process.env.NODE_ENV !== \"production\"\r\n      ? wrapImmutableComponent(Component, component)\r\n      : component;\r\n  }\r\n\r\n  getRemovedComponent(Component) {\r\n    const component = this._componentsToRemove[Component._typeId];\r\n\r\n    return process.env.NODE_ENV !== \"production\"\r\n      ? wrapImmutableComponent(Component, component)\r\n      : component;\r\n  }\r\n\r\n  getComponents() {\r\n    return this._components;\r\n  }\r\n\r\n  getComponentsToRemove() {\r\n    return this._componentsToRemove;\r\n  }\r\n\r\n  getComponentTypes() {\r\n    return this._ComponentTypes;\r\n  }\r\n\r\n  getMutableComponent(Component) {\r\n    var component = this._components[Component._typeId];\r\n\r\n    if (!component) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < this.queries.length; i++) {\r\n      var query = this.queries[i];\r\n      // @todo accelerate this check. Maybe having query._Components as an object\r\n      // @todo add Not components\r\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\r\n        query.eventDispatcher.dispatchEvent(\r\n          Query.prototype.COMPONENT_CHANGED,\r\n          this,\r\n          component\r\n        );\r\n      }\r\n    }\r\n\r\n    // Call component changed callback.\r\n    component.eventEmitter.emit(COMPONENT_CHANGE_EVENT, component);\r\n\r\n    return component;\r\n  }\r\n\r\n  addComponent(Component, values) {\r\n    this._entityManager.entityAddComponent(this, Component, values);\r\n    return this;\r\n  }\r\n\r\n  removeComponent(Component, forceImmediate) {\r\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\r\n    return this;\r\n  }\r\n\r\n  hasComponent(Component, includeRemoved) {\r\n    return (\r\n      !!~this._ComponentTypes.indexOf(Component) ||\r\n      (includeRemoved === true && this.hasRemovedComponent(Component))\r\n    );\r\n  }\r\n\r\n  hasRemovedComponent(Component) {\r\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\r\n  }\r\n\r\n  hasAllComponents(Components) {\r\n    for (var i = 0; i < Components.length; i++) {\r\n      if (!this.hasComponent(Components[i])) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  hasAnyComponents(Components) {\r\n    for (var i = 0; i < Components.length; i++) {\r\n      if (this.hasComponent(Components[i])) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  removeAllComponents(forceImmediate) {\r\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\r\n  }\r\n\r\n  copy(src) {\r\n    // TODO: This can definitely be optimized\r\n    for (var ecsyComponentId in src._components) {\r\n      var srcComponent = src._components[ecsyComponentId];\r\n      this.addComponent(srcComponent.constructor);\r\n      var component = this.getComponent(srcComponent.constructor);\r\n      component.copy(srcComponent);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new Entity(this._entityManager).copy(this);\r\n  }\r\n\r\n  reset() {\r\n    this.id = this._entityManager._nextEntityId++;\r\n    this._ComponentTypes.length = 0;\r\n    this.queries.length = 0;\r\n\r\n    for (var ecsyComponentId in this._components) {\r\n      delete this._components[ecsyComponentId];\r\n    }\r\n  }\r\n\r\n  remove(forceImmediate) {\r\n    return this._entityManager.removeEntity(this, forceImmediate);\r\n  }\r\n}\r\n", "import { SystemManager } from \"./SystemManager.js\";\r\nimport { EntityManager } from \"./EntityManager.js\";\r\nimport { ComponentManager } from \"./ComponentManager.js\";\r\nimport { Version } from \"./Version.js\";\r\nimport { hasWindow, now } from \"./Utils.js\";\r\nimport { Entity } from \"./Entity.js\";\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  entityPoolSize: 0,\r\n  entityClass: Entity,\r\n};\r\n\r\nexport class World {\r\n  constructor(options = {}) {\r\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\r\n\r\n    this.componentsManager = new ComponentManager(this);\r\n    this.entityManager = new EntityManager(this);\r\n    this.systemManager = new SystemManager(this);\r\n\r\n    // Entity change callbacks.\r\n    this.onEntityChanged = [];\r\n\r\n    this.enabled = true;\r\n\r\n    this.eventQueues = {};\r\n\r\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\r\n      var event = new CustomEvent(\"ecsy-world-created\", {\r\n        detail: { world: this, version: Version },\r\n      });\r\n      window.dispatchEvent(event);\r\n    }\r\n\r\n    this.lastTime = now() / 1000;\r\n  }\r\n\r\n  registerComponent(Component, objectPool) {\r\n    this.componentsManager.registerComponent(Component, objectPool);\r\n    return this;\r\n  }\r\n\r\n  registerSystem(System, attributes) {\r\n    this.systemManager.registerSystem(System, attributes);\r\n    return this;\r\n  }\r\n\r\n  hasRegisteredComponent(Component) {\r\n    return this.componentsManager.hasComponent(Component);\r\n  }\r\n\r\n  unregisterSystem(System) {\r\n    this.systemManager.unregisterSystem(System);\r\n    return this;\r\n  }\r\n\r\n  getSystem(SystemClass) {\r\n    return this.systemManager.getSystem(SystemClass);\r\n  }\r\n\r\n  getSystems() {\r\n    return this.systemManager.getSystems();\r\n  }\r\n\r\n  execute(delta, time) {\r\n    if (!delta) {\r\n      time = now() / 1000;\r\n      delta = time - this.lastTime;\r\n      this.lastTime = time;\r\n    }\r\n\r\n    if (this.enabled) {\r\n      this.systemManager.execute(delta, time);\r\n      this.entityManager.processDeferredRemoval();\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.enabled = false;\r\n  }\r\n\r\n  play() {\r\n    this.enabled = true;\r\n  }\r\n\r\n  createEntity(name, id) {\r\n    return this.entityManager.createEntity(name, id);\r\n  }\r\n\r\n  getAllEntities() {\r\n    return this.entityManager.getAllEntities();\r\n  }\r\n\r\n  getEntityByName(name) {\r\n    return this.entityManager.getEntityByName(name);\r\n  }\r\n\r\n  getEntityById(id) {\r\n    return this.entityManager.getEntityById(id);\r\n  }\r\n\r\n  stats() {\r\n    var stats = {\r\n      entities: this.entityManager.stats(),\r\n      system: this.systemManager.stats(),\r\n    };\r\n\r\n    return stats;\r\n  }\r\n}\r\n", "import Query from \"./Query.js\";\r\nimport { componentRegistered } from \"./Utils.js\";\r\n\r\nexport class System {\r\n  canExecute() {\r\n    if (this._mandatoryQueries.length === 0) return true;\r\n\r\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\r\n      var query = this._mandatoryQueries[i];\r\n      if (query.entities.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getName() {\r\n    return this.constructor.getName();\r\n  }\r\n\r\n  constructor(world, attributes) {\r\n    this.world = world;\r\n    this.enabled = true;\r\n\r\n    // @todo Better naming :)\r\n    this._queries = {};\r\n    this.queries = {};\r\n\r\n    this.priority = 0;\r\n\r\n    // Used for stats\r\n    this.executeTime = 0;\r\n\r\n    if (attributes && attributes.priority) {\r\n      this.priority = attributes.priority;\r\n    }\r\n\r\n    this._mandatoryQueries = [];\r\n\r\n    this.initialized = true;\r\n\r\n    if (this.constructor.queries) {\r\n      for (var queryName in this.constructor.queries) {\r\n        var queryConfig = this.constructor.queries[queryName];\r\n        var Components = queryConfig.components;\r\n        if (!Components || Components.length === 0) {\r\n          throw new Error(\"'components' attribute can't be empty in a query\");\r\n        }\r\n\r\n        // Detect if the components have already been registered\r\n        let unregisteredComponents = Components.filter(\r\n          (Component) => !componentRegistered(Component)\r\n        );\r\n\r\n        if (unregisteredComponents.length > 0) {\r\n          throw new Error(\r\n            `Tried to create a query '${\r\n              this.constructor.name\r\n            }.${queryName}' with unregistered components: [${unregisteredComponents\r\n              .map((c) => c.getName())\r\n              .join(\", \")}]`\r\n          );\r\n        }\r\n\r\n        var query = this.world.entityManager.queryComponents(Components);\r\n\r\n        this._queries[queryName] = query;\r\n        if (queryConfig.mandatory === true) {\r\n          this._mandatoryQueries.push(query);\r\n        }\r\n        this.queries[queryName] = {\r\n          results: query.entities,\r\n        };\r\n\r\n        // Reactive configuration added/removed/changed\r\n        var validEvents = [\"added\", \"removed\", \"changed\"];\r\n\r\n        const eventMapping = {\r\n          added: Query.prototype.ENTITY_ADDED,\r\n          removed: Query.prototype.ENTITY_REMOVED,\r\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\r\n        };\r\n\r\n        if (queryConfig.listen) {\r\n          validEvents.forEach((eventName) => {\r\n            if (!this.execute) {\r\n              console.warn(\r\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\r\n                  \", \"\r\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\r\n              );\r\n            }\r\n\r\n            // Is the event enabled on this system's query?\r\n            if (queryConfig.listen[eventName]) {\r\n              let event = queryConfig.listen[eventName];\r\n\r\n              if (eventName === \"changed\") {\r\n                query.reactive = true;\r\n                if (event === true) {\r\n                  // Any change on the entity from the components in the query\r\n                  let eventList = (this.queries[queryName][eventName] = []);\r\n                  query.eventDispatcher.addEventListener(\r\n                    Query.prototype.COMPONENT_CHANGED,\r\n                    (entity) => {\r\n                      // Avoid duplicates\r\n                      if (eventList.indexOf(entity) === -1) {\r\n                        eventList.push(entity);\r\n                      }\r\n                    }\r\n                  );\r\n                } else if (Array.isArray(event)) {\r\n                  let eventList = (this.queries[queryName][eventName] = []);\r\n                  query.eventDispatcher.addEventListener(\r\n                    Query.prototype.COMPONENT_CHANGED,\r\n                    (entity, changedComponent) => {\r\n                      // Avoid duplicates\r\n                      if (\r\n                        event.indexOf(changedComponent.constructor) !== -1 &&\r\n                        eventList.indexOf(entity) === -1\r\n                      ) {\r\n                        eventList.push(entity);\r\n                      }\r\n                    }\r\n                  );\r\n                } else {\r\n                  /*\r\n                  // Checking just specific components\r\n                  let changedList = (this.queries[queryName][eventName] = {});\r\n                  event.forEach(component => {\r\n                    let eventList = (changedList[\r\n                      componentPropertyName(component)\r\n                    ] = []);\r\n                    query.eventDispatcher.addEventListener(\r\n                      Query.prototype.COMPONENT_CHANGED,\r\n                      (entity, changedComponent) => {\r\n                        if (\r\n                          changedComponent.constructor === component &&\r\n                          eventList.indexOf(entity) === -1\r\n                        ) {\r\n                          eventList.push(entity);\r\n                        }\r\n                      }\r\n                    );\r\n                  });\r\n                  */\r\n                }\r\n              } else {\r\n                let eventList = (this.queries[queryName][eventName] = []);\r\n\r\n                query.eventDispatcher.addEventListener(\r\n                  eventMapping[eventName],\r\n                  (entity) => {\r\n                    // @fixme overhead?\r\n                    if (eventList.indexOf(entity) === -1)\r\n                      eventList.push(entity);\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.executeTime = 0;\r\n    this.enabled = false;\r\n  }\r\n\r\n  play() {\r\n    this.enabled = true;\r\n  }\r\n\r\n  // @question rename to clear queues?\r\n  clearEvents() {\r\n    for (let queryName in this.queries) {\r\n      var query = this.queries[queryName];\r\n      if (query.added) {\r\n        query.added.length = 0;\r\n      }\r\n      if (query.removed) {\r\n        query.removed.length = 0;\r\n      }\r\n      if (query.changed) {\r\n        if (Array.isArray(query.changed)) {\r\n          query.changed.length = 0;\r\n        } else {\r\n          for (let name in query.changed) {\r\n            query.changed[name].length = 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    var json = {\r\n      name: this.getName(),\r\n      enabled: this.enabled,\r\n      executeTime: this.executeTime,\r\n      priority: this.priority,\r\n      queries: {},\r\n    };\r\n\r\n    if (this.constructor.queries) {\r\n      var queries = this.constructor.queries;\r\n      for (let queryName in queries) {\r\n        let query = this.queries[queryName];\r\n        let queryDefinition = queries[queryName];\r\n        let jsonQuery = (json.queries[queryName] = {\r\n          key: this._queries[queryName].key,\r\n        });\r\n\r\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\r\n        jsonQuery.reactive =\r\n          queryDefinition.listen &&\r\n          (queryDefinition.listen.added === true ||\r\n            queryDefinition.listen.removed === true ||\r\n            queryDefinition.listen.changed === true ||\r\n            Array.isArray(queryDefinition.listen.changed));\r\n\r\n        if (jsonQuery.reactive) {\r\n          jsonQuery.listen = {};\r\n\r\n          const methods = [\"added\", \"removed\", \"changed\"];\r\n          methods.forEach((method) => {\r\n            if (query[method]) {\r\n              jsonQuery.listen[method] = {\r\n                entities: query[method].length,\r\n              };\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return json;\r\n  }\r\n}\r\n\r\nSystem.isSystem = true;\r\nSystem.getName = function () {\r\n  return this.displayName || this.name;\r\n};\r\n\r\nexport function Not(Component) {\r\n  return {\r\n    operator: \"not\",\r\n    Component: Component,\r\n  };\r\n}\r\n", "import { Component } from \"./Component.js\";\r\n\r\nexport class TagComponent extends Component {\r\n  constructor() {\r\n    super(false);\r\n  }\r\n}\r\n\r\nTagComponent.isTagComponent = true;\r\n", "export const copyValue = (src) => src;\r\n\r\nexport const cloneValue = (src) => src;\r\n\r\nexport const copyArray = (src, dest) => {\r\n  if (!src) {\r\n    return src;\r\n  }\r\n\r\n  if (!dest) {\r\n    return src.slice();\r\n  }\r\n\r\n  dest.length = 0;\r\n\r\n  for (let i = 0; i < src.length; i++) {\r\n    dest.push(src[i]);\r\n  }\r\n\r\n  return dest;\r\n};\r\n\r\nexport const cloneArray = (src) => src && src.slice();\r\n\r\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\r\n\r\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\r\n\r\nexport const copyCopyable = (src, dest) => {\r\n  if (!src) {\r\n    return src;\r\n  }\r\n\r\n  if (!dest) {\r\n    return src.clone();\r\n  }\r\n\r\n  return dest.copy(src);\r\n};\r\n\r\nexport const cloneClonable = (src) => src && src.clone();\r\n\r\nexport function createType(typeDefinition) {\r\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\r\n\r\n  var undefinedProperties = mandatoryProperties.filter((p) => {\r\n    return !typeDefinition.hasOwnProperty(p);\r\n  });\r\n\r\n  if (undefinedProperties.length > 0) {\r\n    throw new Error(\r\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\r\n        \", \"\r\n      )}`\r\n    );\r\n  }\r\n\r\n  typeDefinition.isType = true;\r\n\r\n  return typeDefinition;\r\n}\r\n\r\n/**\r\n * Standard types\r\n */\r\nexport const Types = {\r\n  Number: createType({\r\n    name: \"Number\",\r\n    default: 0,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  Boolean: createType({\r\n    name: \"Boolean\",\r\n    default: false,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  String: createType({\r\n    name: \"String\",\r\n    default: \"\",\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  Array: createType({\r\n    name: \"Array\",\r\n    default: [],\r\n    copy: copyArray,\r\n    clone: cloneArray,\r\n  }),\r\n\r\n  Ref: createType({\r\n    name: \"Ref\",\r\n    default: undefined,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  JSON: createType({\r\n    name: \"JSON\",\r\n    default: null,\r\n    copy: copyJSON,\r\n    clone: cloneJSON,\r\n  }),\r\n};\r\n", "export function generateId(length) {\r\n  var result = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function injectScript(src, onLoad) {\r\n  var script = document.createElement(\"script\");\r\n  // @todo Use link to the ecsy-devtools repo?\r\n  script.src = src;\r\n  script.onload = onLoad;\r\n  (document.head || document.documentElement).appendChild(script);\r\n}\r\n", "/* global Peer */\r\nimport { injectScript, generateId } from \"./utils.js\";\r\nimport { hasWindow } from \"../Utils.js\";\r\n\r\nfunction hookConsoleAndErrors(connection) {\r\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\r\n  wrapFunctions.forEach((key) => {\r\n    if (typeof console[key] === \"function\") {\r\n      var fn = console[key].bind(console);\r\n      console[key] = (...args) => {\r\n        connection.send({\r\n          method: \"console\",\r\n          type: key,\r\n          args: JSON.stringify(args),\r\n        });\r\n        return fn.apply(null, args);\r\n      };\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"error\", (error) => {\r\n    connection.send({\r\n      method: \"error\",\r\n      error: JSON.stringify({\r\n        message: error.error.message,\r\n        stack: error.error.stack,\r\n      }),\r\n    });\r\n  });\r\n}\r\n\r\nfunction includeRemoteIdHTML(remoteId) {\r\n  let infoDiv = document.createElement(\"div\");\r\n  infoDiv.style.cssText = `\r\n    align-items: center;\r\n    background-color: #333;\r\n    color: #aaa;\r\n    display:flex;\r\n    font-family: Arial;\r\n    font-size: 1.1em;\r\n    height: 40px;\r\n    justify-content: center;\r\n    left: 0;\r\n    opacity: 0.9;\r\n    position: absolute;\r\n    right: 0;\r\n    text-align: center;\r\n    top: 0;\r\n  `;\r\n\r\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\r\n  document.body.appendChild(infoDiv);\r\n\r\n  return infoDiv;\r\n}\r\n\r\nexport function enableRemoteDevtools(remoteId) {\r\n  if (!hasWindow) {\r\n    console.warn(\"Remote devtools not available outside the browser\");\r\n    return;\r\n  }\r\n\r\n  window.generateNewCode = () => {\r\n    window.localStorage.clear();\r\n    remoteId = generateId(6);\r\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\r\n  if (!remoteId) {\r\n    remoteId = generateId(6);\r\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\r\n  }\r\n\r\n  let infoDiv = includeRemoteIdHTML(remoteId);\r\n\r\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\r\n  window.__ECSY_REMOTE_DEVTOOLS = {};\r\n\r\n  let Version = \"\";\r\n\r\n  // This is used to collect the worlds created before the communication is being established\r\n  let worldsBeforeLoading = [];\r\n  let onWorldCreated = (e) => {\r\n    var world = e.detail.world;\r\n    Version = e.detail.version;\r\n    worldsBeforeLoading.push(world);\r\n  };\r\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\r\n\r\n  let onLoaded = () => {\r\n    // var peer = new Peer(remoteId);\r\n    var peer = new Peer(remoteId, {\r\n      host: \"peerjs.ecsy.io\",\r\n      secure: true,\r\n      port: 443,\r\n      config: {\r\n        iceServers: [\r\n          { url: \"stun:stun.l.google.com:19302\" },\r\n          { url: \"stun:stun1.l.google.com:19302\" },\r\n          { url: \"stun:stun2.l.google.com:19302\" },\r\n          { url: \"stun:stun3.l.google.com:19302\" },\r\n          { url: \"stun:stun4.l.google.com:19302\" },\r\n        ],\r\n      },\r\n      debug: 3,\r\n    });\r\n\r\n    peer.on(\"open\", (/* id */) => {\r\n      peer.on(\"connection\", (connection) => {\r\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\r\n        connection.on(\"open\", function () {\r\n          // infoDiv.style.visibility = \"hidden\";\r\n          infoDiv.innerHTML = \"Connected\";\r\n\r\n          // Receive messages\r\n          connection.on(\"data\", function (data) {\r\n            if (data.type === \"init\") {\r\n              var script = document.createElement(\"script\");\r\n              script.setAttribute(\"type\", \"text/javascript\");\r\n              script.onload = () => {\r\n                script.parentNode.removeChild(script);\r\n\r\n                // Once the script is injected we don't need to listen\r\n                window.removeEventListener(\r\n                  \"ecsy-world-created\",\r\n                  onWorldCreated\r\n                );\r\n                worldsBeforeLoading.forEach((world) => {\r\n                  var event = new CustomEvent(\"ecsy-world-created\", {\r\n                    detail: { world: world, version: Version },\r\n                  });\r\n                  window.dispatchEvent(event);\r\n                });\r\n              };\r\n              script.innerHTML = data.script;\r\n              (document.head || document.documentElement).appendChild(script);\r\n              script.onload();\r\n\r\n              hookConsoleAndErrors(connection);\r\n            } else if (data.type === \"executeScript\") {\r\n              let value = eval(data.script);\r\n              if (data.returnEval) {\r\n                connection.send({\r\n                  method: \"evalReturn\",\r\n                  value: value,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  // Inject PeerJS script\r\n  injectScript(\r\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\r\n    onLoaded\r\n  );\r\n}\r\n\r\nif (hasWindow) {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n\r\n  // @todo Provide a way to disable it if needed\r\n  if (urlParams.has(\"enable-remote-devtools\")) {\r\n    enableRemoteDevtools();\r\n  }\r\n}\r\n", "import { Component, ComponentConstructor } from \"ecsy-wd\";\r\n\r\nexport interface IComponent extends Component<IComponent> {}\r\n\r\n// Registry of all components\r\nexport namespace IComponent {\r\n  const implementations: ComponentConstructor<IComponent>[] = [];\r\n\r\n  export function getImplementations(): ComponentConstructor<IComponent>[] {\r\n    return implementations;\r\n  }\r\n\r\n  export function register<T extends ComponentConstructor<IComponent>>(\r\n    ctor: T\r\n  ) {\r\n    implementations.push(ctor);\r\n    return ctor;\r\n  }\r\n}\r\n", "import { Entity } from \"ecsy-wd\";\r\n\r\nexport interface IEditorRenderContext {\r\n  mainCanvas: HTMLCanvasElement | null;\r\n  mainCamera: Entity | null;\r\n}\r\n\r\nexport const coreRenderContext: IEditorRenderContext = {\r\n  mainCanvas: null,\r\n  mainCamera: null,\r\n};\r\n", "import { mainWorld } from \".\";\r\n\r\nimport { IComponent } from \"./ComponentRegistry\";\r\nimport { coreRenderContext } from \"./Context/RenderContext\";\r\nimport { ISystemContext } from \"./Context/SystemContext\";\r\n\r\nexport const coreSetup = () => {\r\n  if (!coreRenderContext.mainCanvas) {\r\n    throw new Error(\"Main canvas is not ready.\");\r\n  }\r\n\r\n  // Register all components.\r\n  let componentConstructors = IComponent.getImplementations();\r\n  for (let i = 0; i < componentConstructors.length; i++) {\r\n    mainWorld.registerComponent(componentConstructors[i]);\r\n  }\r\n\r\n  // Call core setup callback.\r\n  systemContext.coreSetup();\r\n};\r\n\r\nexport const systemContext: ISystemContext = {\r\n  coreSetup: () => {},\r\n  coreStart: async () => {},\r\n  editorStart: () => {},\r\n};\r\n", "import { World } from \"ecsy-wd\";\r\nimport { ITimeContext } from \"./Context/TimeContext\";\r\nimport { coreSetup, systemContext } from \"./CoreSetup\";\r\n\r\n// Main world to hold all game entities.\r\nexport let mainWorld = new World();\r\n// Physics world to hold all physics entities.\r\nexport let physicsWorld = new World();\r\n\r\n// Time context.\r\nexport const timeContext: ITimeContext = {\r\n  startTime: 0,\r\n  currentTime: 0,\r\n  deltaTime: 0,\r\n  timeScale: 1,\r\n  fixedTimeStep: 1 / 120,\r\n};\r\n\r\n// Frame update.\r\nconst mainUpdate = () => {\r\n  // Update time context.\r\n  let currentTime = Date.now() / 1000;\r\n  timeContext.deltaTime =\r\n    (currentTime - timeContext.currentTime) * timeContext.timeScale;\r\n  timeContext.currentTime = currentTime;\r\n\r\n  mainWorld.execute(timeContext.deltaTime);\r\n  requestAnimationFrame(mainUpdate);\r\n};\r\n\r\n// Physics update.\r\nconst physicsUpdate = async () => {\r\n  while (true) {\r\n    physicsWorld.execute(timeContext.fixedTimeStep);\r\n\r\n    // Wait for fixed time step.\r\n    await new Promise((resolve) =>\r\n      setTimeout(resolve, timeContext.fixedTimeStep * 1000)\r\n    );\r\n  }\r\n};\r\n\r\nexport const releaseInit = async () => {\r\n  // Setup core.\r\n  coreSetup();\r\n\r\n  await systemContext.coreStart({});\r\n\r\n  // Start white dwarf.\r\n  mainInit();\r\n};\r\n\r\nexport const mainInit = () => {\r\n  // Initialize time context.\r\n  timeContext.startTime = Date.now() / 1000;\r\n  timeContext.currentTime = timeContext.startTime;\r\n  timeContext.deltaTime = 0;\r\n\r\n  // Request animation frame.\r\n  requestAnimationFrame(mainUpdate);\r\n\r\n  // Start async physics update.\r\n  physicsUpdate();\r\n};\r\n\r\nexport const resetWorld = () => {\r\n  mainWorld = new World();\r\n  physicsWorld = new World();\r\n};\r\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import { createType, copyCopyable, cloneClonable } from \"ecsy-wd\";\r\nimport { quat, vec4 } from \"gl-matrix\";\r\n\r\nexport class Quaternion {\r\n  value: quat;\r\n\r\n  constructor(x: number, y: number, z: number, w: number) {\r\n    this.value = quat.fromValues(x, y, z, w);\r\n  }\r\n\r\n  set(x: number, y: number, z: number, w: number) {\r\n    quat.set(this.value, x, y, z, w);\r\n  }\r\n\r\n  copy(q: Quaternion): Quaternion {\r\n    this.value = quat.copy(this.value, q.value);\r\n    return this;\r\n  }\r\n\r\n  clone(): Quaternion {\r\n    return new Quaternion(\r\n      this.value[0],\r\n      this.value[1],\r\n      this.value[2],\r\n      this.value[3]\r\n    );\r\n  }\r\n}\r\n\r\nexport const QuaternionType = createType({\r\n  name: \"Quaternion\",\r\n  default: new Quaternion(0, 0, 0, 1),\r\n  copy: copyCopyable<Quaternion>,\r\n  clone: cloneClonable<Quaternion>,\r\n});\r\n\r\nexport const QuaternionCustomEditor = (\r\n  value: Quaternion,\r\n  onChange: (value: Quaternion) => void\r\n): [HTMLDivElement, (v: Quaternion) => void] => {\r\n  const quaternionDiv = document.createElement(\"div\");\r\n  quaternionDiv.style.display = \"flex\";\r\n  quaternionDiv.style.flexDirection = \"row\";\r\n\r\n  const xLabel = document.createElement(\"label\");\r\n  xLabel.innerText = \"X\";\r\n  quaternionDiv.appendChild(xLabel);\r\n  const xInput = document.createElement(\"input\");\r\n  xInput.type = \"number\";\r\n  xInput.style.minWidth = \"0px\";\r\n  xInput.style.flexGrow = \"1\";\r\n  xInput.value = value.value[0].toString();\r\n  quaternionDiv.appendChild(xInput);\r\n\r\n  const yLabel = document.createElement(\"label\");\r\n  yLabel.innerText = \"Y\";\r\n  quaternionDiv.appendChild(yLabel);\r\n  const yInput = document.createElement(\"input\");\r\n  yInput.type = \"number\";\r\n  yInput.style.minWidth = \"0px\";\r\n  yInput.style.flexGrow = \"1\";\r\n  yInput.value = value.value[1].toString();\r\n  quaternionDiv.appendChild(yInput);\r\n\r\n  const zLabel = document.createElement(\"label\");\r\n  zLabel.innerText = \"Z\";\r\n  quaternionDiv.appendChild(zLabel);\r\n  const zInput = document.createElement(\"input\");\r\n  zInput.type = \"number\";\r\n  zInput.style.minWidth = \"0px\";\r\n  zInput.style.flexGrow = \"1\";\r\n  zInput.value = value.value[2].toString();\r\n  quaternionDiv.appendChild(zInput);\r\n\r\n  const wLabel = document.createElement(\"label\");\r\n  wLabel.innerText = \"W\";\r\n  quaternionDiv.appendChild(wLabel);\r\n  const wInput = document.createElement(\"input\");\r\n  wInput.type = \"number\";\r\n  wInput.style.minWidth = \"0px\";\r\n  wInput.style.flexGrow = \"1\";\r\n  wInput.value = value.value[3].toString();\r\n  quaternionDiv.appendChild(wInput);\r\n\r\n  const update = () => {\r\n    onChange(\r\n      new Quaternion(\r\n        parseFloat(xInput.value),\r\n        parseFloat(yInput.value),\r\n        parseFloat(zInput.value),\r\n        parseFloat(wInput.value)\r\n      )\r\n    );\r\n  };\r\n\r\n  const setQuaternion = (q: Quaternion) => {\r\n    if (\r\n      document.activeElement === xInput ||\r\n      document.activeElement === yInput ||\r\n      document.activeElement === zInput ||\r\n      document.activeElement === wInput\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    xInput.value = q.value[0].toString();\r\n    yInput.value = q.value[1].toString();\r\n    zInput.value = q.value[2].toString();\r\n    wInput.value = q.value[3].toString();\r\n  };\r\n\r\n  xInput.addEventListener(\"change\", update);\r\n  yInput.addEventListener(\"change\", update);\r\n  zInput.addEventListener(\"change\", update);\r\n  wInput.addEventListener(\"change\", update);\r\n\r\n  return [quaternionDiv, setQuaternion];\r\n};\r\n", "import { createType, copyCopyable, cloneClonable } from \"ecsy-wd\";\r\nimport { vec3 } from \"gl-matrix\";\r\n\r\nexport class Vector3 {\r\n  value: vec3;\r\n\r\n  constructor(x: number, y: number, z: number) {\r\n    this.value = vec3.fromValues(x, y, z);\r\n  }\r\n\r\n  set(x: number, y: number, z: number) {\r\n    vec3.set(this.value, x, y, z);\r\n  }\r\n\r\n  copy(v: Vector3): Vector3 {\r\n    this.value = vec3.copy(this.value, v.value);\r\n    return this;\r\n  }\r\n\r\n  clone(): Vector3 {\r\n    return new Vector3(this.value[0], this.value[1], this.value[2]);\r\n  }\r\n}\r\n\r\nexport const Vector3Type = createType({\r\n  name: \"Vector3\",\r\n  default: new Vector3(0, 0, 0),\r\n  copy: copyCopyable<Vector3>,\r\n  clone: cloneClonable<Vector3>,\r\n});\r\n\r\nexport const Vector3CustomEditor = (\r\n  value: Vector3,\r\n  onChange: (value: Vector3) => void\r\n): [HTMLDivElement, (v: Vector3) => void] => {\r\n  const vector3Div = document.createElement(\"div\");\r\n  vector3Div.style.display = \"flex\";\r\n  vector3Div.style.flexDirection = \"row\";\r\n\r\n  const xLabel = document.createElement(\"label\");\r\n  xLabel.innerText = \"X\";\r\n  vector3Div.appendChild(xLabel);\r\n  const xInput = document.createElement(\"input\");\r\n  xInput.type = \"number\";\r\n  xInput.style.minWidth = \"0px\";\r\n  xInput.style.flexGrow = \"1\";\r\n  xInput.value = value.value[0].toString();\r\n  vector3Div.appendChild(xInput);\r\n\r\n  const yLabel = document.createElement(\"label\");\r\n  yLabel.innerText = \"Y\";\r\n  vector3Div.appendChild(yLabel);\r\n  const yInput = document.createElement(\"input\");\r\n  yInput.type = \"number\";\r\n  yInput.style.minWidth = \"0px\";\r\n  yInput.style.flexGrow = \"1\";\r\n  yInput.value = value.value[1].toString();\r\n  vector3Div.appendChild(yInput);\r\n\r\n  const zLabel = document.createElement(\"label\");\r\n  zLabel.innerText = \"Z\";\r\n  vector3Div.appendChild(zLabel);\r\n  const zInput = document.createElement(\"input\");\r\n  zInput.type = \"number\";\r\n  zInput.style.minWidth = \"0px\";\r\n  zInput.style.flexGrow = \"1\";\r\n  zInput.value = value.value[2].toString();\r\n  vector3Div.appendChild(zInput);\r\n\r\n  const update = () => {\r\n    onChange(\r\n      new Vector3(\r\n        parseFloat(xInput.value),\r\n        parseFloat(yInput.value),\r\n        parseFloat(zInput.value)\r\n      )\r\n    );\r\n  };\r\n\r\n  const setVector3 = (v: Vector3) => {\r\n    if (\r\n      document.activeElement === xInput ||\r\n      document.activeElement === yInput ||\r\n      document.activeElement === zInput\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    xInput.value = v.value[0].toString();\r\n    yInput.value = v.value[1].toString();\r\n    zInput.value = v.value[2].toString();\r\n  };\r\n\r\n  xInput.addEventListener(\"change\", update);\r\n  yInput.addEventListener(\"change\", update);\r\n  zInput.addEventListener(\"change\", update);\r\n\r\n  return [vector3Div, setVector3];\r\n};\r\n", "import { Component, ComponentSchema, COMPONENT_CHANGE_EVENT } from \"ecsy-wd\";\r\nimport {\r\n  Quaternion,\r\n  QuaternionCustomEditor,\r\n  QuaternionType,\r\n} from \"../../../Mathematics/Quaternion\";\r\nimport {\r\n  Vector3,\r\n  Vector3CustomEditor,\r\n  Vector3Type,\r\n} from \"../../../Mathematics/Vector3\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class TransformData3D extends Component<TransformData3D> {\r\n  static schema: ComponentSchema = {\r\n    position: {\r\n      type: Vector3Type,\r\n      default: new Vector3(0, 0, 0),\r\n    },\r\n    rotation: {\r\n      type: QuaternionType,\r\n      default: new Quaternion(0, 0, 0, 1),\r\n    },\r\n    scale: {\r\n      type: Vector3Type,\r\n      default: new Vector3(1, 1, 1),\r\n    },\r\n  };\r\n\r\n  position!: Vector3;\r\n  rotation!: Quaternion;\r\n  scale!: Vector3;\r\n\r\n  public useDefaultInspector: boolean = false;\r\n  public onInspector: (componentDiv: HTMLDivElement) => void | null = (\r\n    componentDiv: HTMLDivElement\r\n  ) => {\r\n    const transformDiv = document.createElement(\"div\");\r\n\r\n    // Position editor.\r\n    const positionDiv = document.createElement(\"div\");\r\n    // Position title.\r\n    positionDiv.appendChild(document.createTextNode(\"Position\"));\r\n    // Position Vector3 editor.\r\n    const [positionVector3Div, setPosition] = Vector3CustomEditor(\r\n      this.position,\r\n      (newValue) => {\r\n        this.position = newValue;\r\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n      }\r\n    );\r\n    positionDiv.appendChild(positionVector3Div);\r\n\r\n    // Rotation editor.\r\n    const rotationDiv = document.createElement(\"div\");\r\n    // Rotation title.\r\n    rotationDiv.appendChild(document.createTextNode(\"Rotation\"));\r\n    // Rotation Quaternion editor.\r\n    const [rotationQuaternionDiv, setRotation] = QuaternionCustomEditor(\r\n      this.rotation,\r\n      (newValue) => {\r\n        this.rotation = newValue;\r\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n      }\r\n    );\r\n    rotationDiv.appendChild(rotationQuaternionDiv);\r\n\r\n    // Scale editor.\r\n    const scaleDiv = document.createElement(\"div\");\r\n    // Scale title.\r\n    scaleDiv.appendChild(document.createTextNode(\"Scale\"));\r\n    // Scale Vector3 editor.\r\n    const [scaleVector3Div, setScale] = Vector3CustomEditor(\r\n      this.scale,\r\n      (newValue) => {\r\n        this.scale = newValue;\r\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n      }\r\n    );\r\n    scaleDiv.appendChild(scaleVector3Div);\r\n\r\n    // Append all editors to the transform editor.\r\n    transformDiv.appendChild(positionDiv);\r\n    transformDiv.appendChild(rotationDiv);\r\n    transformDiv.appendChild(scaleDiv);\r\n\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      setPosition(this.position);\r\n      setRotation(this.rotation);\r\n      setScale(this.scale);\r\n    });\r\n\r\n    // Append the transform editor to the component editor.\r\n    componentDiv.appendChild(transformDiv);\r\n  };\r\n}\r\n", "import { Component, ComponentSchema, COMPONENT_CHANGE_EVENT } from \"ecsy-wd\";\r\nimport { Types } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class PerspectiveCameraData3D extends Component<PerspectiveCameraData3D> {\r\n  static schema: ComponentSchema = {\r\n    fov: {\r\n      type: Types.Number,\r\n      default: Math.PI / 4,\r\n    },\r\n    aspect: {\r\n      type: Types.Number,\r\n      default: 1,\r\n    },\r\n    near: {\r\n      type: Types.Number,\r\n      default: 0.1,\r\n    },\r\n    far: {\r\n      type: Types.Number,\r\n      default: 1000,\r\n    },\r\n  };\r\n\r\n  // y field of view in radians.\r\n  fov!: number;\r\n  // Camera aspect ratio.\r\n  aspect!: number;\r\n  // Camera near plane distance.\r\n  near!: number;\r\n  // Camera far plane distance.\r\n  far!: number;\r\n\r\n  public useDefaultInspector: boolean = false;\r\n  public onInspector: (componentDiv: HTMLDivElement) => void | null = (\r\n    componentDiv: HTMLDivElement\r\n  ) => {\r\n    const fovDiv = document.createElement(\"div\");\r\n    fovDiv.style.display = \"flex\";\r\n    fovDiv.style.flexDirection = \"row\";\r\n\r\n    fovDiv.appendChild(document.createTextNode(\"fov: \"));\r\n    // FOV Slider.\r\n    const fovSlider = document.createElement(\"input\");\r\n    fovSlider.type = \"range\";\r\n    fovSlider.min = \"0\";\r\n    fovSlider.max = \"3.14\";\r\n    fovSlider.step = \"0.01\";\r\n    fovSlider.value = this.fov.toString();\r\n    fovSlider.style.flex = \"1\";\r\n    fovSlider.addEventListener(\"change\", (event) => {\r\n      this.fov = parseFloat(fovSlider.value);\r\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n    });\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      // If the input is focused, don't update it.\r\n      if (document.activeElement !== fovSlider) {\r\n        fovSlider.value = this.fov.toString();\r\n      }\r\n    });\r\n    fovDiv.appendChild(fovSlider);\r\n\r\n    const aspectDiv = document.createElement(\"div\");\r\n    aspectDiv.style.display = \"flex\";\r\n    aspectDiv.style.flexDirection = \"row\";\r\n\r\n    aspectDiv.appendChild(document.createTextNode(\"aspect: \"));\r\n    const aspectInput = document.createElement(\"input\");\r\n    aspectInput.type = \"number\";\r\n    aspectInput.value = this.aspect.toString();\r\n    aspectInput.style.minWidth = \"0px\";\r\n    aspectInput.style.flex = \"1\";\r\n    aspectInput.addEventListener(\"change\", (event) => {\r\n      this.aspect = parseFloat(aspectInput.value);\r\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n    });\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      // If the input is focused, don't update it.\r\n      if (document.activeElement !== aspectInput) {\r\n        aspectInput.value = this.aspect.toString();\r\n      }\r\n    });\r\n    aspectDiv.appendChild(aspectInput);\r\n\r\n    const nearDiv = document.createElement(\"div\");\r\n    nearDiv.style.display = \"flex\";\r\n    nearDiv.style.flexDirection = \"row\";\r\n\r\n    nearDiv.appendChild(document.createTextNode(\"near: \"));\r\n    const nearInput = document.createElement(\"input\");\r\n    nearInput.type = \"number\";\r\n    nearInput.value = this.near.toString();\r\n    nearInput.style.minWidth = \"0px\";\r\n    nearInput.style.flex = \"1\";\r\n    nearInput.addEventListener(\"change\", (event) => {\r\n      this.near = parseFloat(nearInput.value);\r\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n    });\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      // If the input is focused, don't update it.\r\n      if (document.activeElement !== nearInput) {\r\n        nearInput.value = this.near.toString();\r\n      }\r\n    });\r\n    nearDiv.appendChild(nearInput);\r\n\r\n    const farDiv = document.createElement(\"div\");\r\n    farDiv.style.display = \"flex\";\r\n    farDiv.style.flexDirection = \"row\";\r\n\r\n    farDiv.appendChild(document.createTextNode(\"far: \"));\r\n    const farInput = document.createElement(\"input\");\r\n    farInput.type = \"number\";\r\n    farInput.value = this.far.toString();\r\n    farInput.style.minWidth = \"0px\";\r\n    farInput.style.flex = \"1\";\r\n    farInput.addEventListener(\"change\", (event) => {\r\n      this.far = parseFloat(farInput.value);\r\n      this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n    });\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      // If the input is focused, don't update it.\r\n      if (document.activeElement !== farInput) {\r\n        farInput.value = this.far.toString();\r\n      }\r\n    });\r\n    farDiv.appendChild(farInput);\r\n\r\n    componentDiv.appendChild(fovDiv);\r\n    componentDiv.appendChild(aspectDiv);\r\n    componentDiv.appendChild(nearDiv);\r\n    componentDiv.appendChild(farDiv);\r\n  };\r\n}\r\n", "import { TagComponent } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class MainCameraInitTag extends TagComponent {}\r\n", "import { TagComponent } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class MainCameraTag extends TagComponent {}\r\n", "import { Attributes, System, SystemQueries } from \"ecsy-wd\";\r\nimport { MainCameraInitTag } from \"../TagComponent/MainCameraInitTag\";\r\nimport { MainCameraTag } from \"../TagComponent/MainCameraTag\";\r\n\r\n/**\r\n * This system replace all MainCameraInitTag to MainCameraTag.\r\n */\r\nexport class MainCameraInitSystem extends System {\r\n  static queries: SystemQueries = {\r\n    mainCameraInitEntities: {\r\n      components: [MainCameraInitTag],\r\n      listen: {\r\n        added: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  execute(delta: number, time: number): void {\r\n    this.queries.mainCameraInitEntities.results.forEach((entity) => {\r\n      entity.removeComponent(MainCameraInitTag);\r\n      entity.addComponent(MainCameraTag);\r\n    });\r\n  }\r\n}\r\n", "import { cloneClonable, copyCopyable, createType } from \"ecsy-wd\";\r\nimport default_vert from \"./Shader/DefaultShader/default_vert.glsl\";\r\nimport default_frag from \"./Shader/DefaultShader/default_frag.glsl\";\r\n\r\ninterface BasicShaderAttribute {\r\n  vPosition?: number;\r\n  vNormal?: number;\r\n  vColor?: number;\r\n  vTexCoord?: number;\r\n}\r\n\r\ninterface BasicShaderUniform {\r\n  uM?: WebGLUniformLocation;\r\n  uV?: WebGLUniformLocation;\r\n  uP?: WebGLUniformLocation;\r\n  uMV?: WebGLUniformLocation;\r\n  uMVn?: WebGLUniformLocation;\r\n  uMVP?: WebGLUniformLocation;\r\n\r\n  uDirLight?: WebGLUniformLocation;\r\n}\r\n\r\nexport class Material {\r\n  glContext: WebGLRenderingContext;\r\n\r\n  vertexSource: string;\r\n  fragmentSource: string;\r\n  attributes: string[] = [];\r\n  uniforms: string[] = [];\r\n  textureSamplers: string[] = [];\r\n\r\n  vertexShader: WebGLShader | null = null;\r\n  fragmentShader: WebGLShader | null = null;\r\n\r\n  shaderProgram: WebGLProgram | null = null;\r\n\r\n  // Attributes.\r\n  attributeLocations: BasicShaderAttribute = {};\r\n  // Uniforms.\r\n  uniformLocations: BasicShaderUniform = {};\r\n  // Texture samplers.\r\n  samplerLocations: { [key: string]: WebGLUniformLocation } = {};\r\n\r\n  // Texture buffers.\r\n  textureBuffers: { [key: string]: WebGLTexture } = {};\r\n\r\n  constructor(\r\n    glContext: WebGLRenderingContext,\r\n    vertexShaderSource: string,\r\n    fragmentShaderSource: string,\r\n    attributes: string[] = [],\r\n    uniforms: string[] = [],\r\n    textureSamplers: string[] = []\r\n  ) {\r\n    this.glContext = glContext;\r\n    this.vertexSource = vertexShaderSource;\r\n    this.fragmentSource = fragmentShaderSource;\r\n    if (attributes.length) {\r\n      this.attributes = attributes;\r\n    }\r\n    if (uniforms.length) {\r\n      this.uniforms = uniforms;\r\n    }\r\n    if (textureSamplers.length) {\r\n      this.textureSamplers = textureSamplers;\r\n    }\r\n\r\n    if (!this.glContext) {\r\n      return;\r\n    }\r\n\r\n    this.compile(\r\n      glContext,\r\n      vertexShaderSource,\r\n      fragmentShaderSource,\r\n      this.attributes,\r\n      this.uniforms,\r\n      this.textureSamplers\r\n    );\r\n  }\r\n\r\n  compile(\r\n    glContext: WebGLRenderingContext,\r\n    vertexShaderSource: string,\r\n    fragmentShaderSource: string,\r\n    attributes: string[],\r\n    uniforms: string[],\r\n    textureSamplers: string[]\r\n  ) {\r\n    // Compile vertex shader.\r\n    this.vertexShader = glContext.createShader(\r\n      glContext.VERTEX_SHADER\r\n    ) as WebGLShader;\r\n    if (!this.vertexShader) {\r\n      throw new Error(\"Failed to create vertex shader\");\r\n    }\r\n    glContext.shaderSource(this.vertexShader, vertexShaderSource);\r\n    glContext.compileShader(this.vertexShader);\r\n    if (\r\n      !glContext.getShaderParameter(this.vertexShader, glContext.COMPILE_STATUS)\r\n    ) {\r\n      throw new Error(glContext.getShaderInfoLog(this.vertexShader) as string);\r\n    }\r\n\r\n    // Compile fragment shader.\r\n    this.fragmentShader = glContext.createShader(\r\n      glContext.FRAGMENT_SHADER\r\n    ) as WebGLShader;\r\n    if (!this.fragmentShader) {\r\n      throw new Error(\"Failed to create fragment shader\");\r\n    }\r\n    glContext.shaderSource(this.fragmentShader, fragmentShaderSource);\r\n    glContext.compileShader(this.fragmentShader);\r\n    if (\r\n      !glContext.getShaderParameter(\r\n        this.fragmentShader,\r\n        glContext.COMPILE_STATUS\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        glContext.getShaderInfoLog(this.fragmentShader) as string\r\n      );\r\n    }\r\n\r\n    // Create shader program.\r\n    this.shaderProgram = glContext.createProgram();\r\n    if (!this.shaderProgram) {\r\n      throw new Error(\"Failed to create shader program\");\r\n    }\r\n    glContext.attachShader(this.shaderProgram, this.vertexShader);\r\n    glContext.attachShader(this.shaderProgram, this.fragmentShader);\r\n    glContext.linkProgram(this.shaderProgram);\r\n    if (\r\n      !glContext.getProgramParameter(this.shaderProgram, glContext.LINK_STATUS)\r\n    ) {\r\n      throw new Error(\"Failed to link shader program\");\r\n    }\r\n\r\n    glContext.useProgram(this.shaderProgram);\r\n\r\n    // Get attribute locations.\r\n    for (const attribute of attributes) {\r\n      const location = glContext.getAttribLocation(\r\n        this.shaderProgram,\r\n        attribute\r\n      );\r\n\r\n      this.attributeLocations[\r\n        attribute as keyof typeof this.attributeLocations\r\n      ] = location;\r\n\r\n      glContext.enableVertexAttribArray(location);\r\n    }\r\n\r\n    // Get uniform locations.\r\n    for (const uniform of uniforms) {\r\n      this.uniformLocations[uniform as keyof typeof this.uniformLocations] =\r\n        glContext.getUniformLocation(\r\n          this.shaderProgram,\r\n          uniform\r\n        ) as WebGLUniformLocation;\r\n    }\r\n\r\n    // Get texture sampler locations.\r\n    for (let i = 0; i < textureSamplers.length; i++) {\r\n      const element = textureSamplers[i];\r\n      this.samplerLocations[element] = glContext.getUniformLocation(\r\n        this.shaderProgram,\r\n        element\r\n      ) as WebGLUniformLocation;\r\n      glContext.uniform1i(this.samplerLocations[element], i);\r\n    }\r\n\r\n    // Create texture buffers.\r\n    for (let i = 0; i < textureSamplers.length; i++) {\r\n      const element = textureSamplers[i];\r\n      this.textureBuffers[element] = glContext.createTexture() as WebGLTexture;\r\n      this.glContext.activeTexture(this.glContext.TEXTURE0 + i);\r\n      this.glContext.bindTexture(\r\n        this.glContext.TEXTURE_2D,\r\n        this.textureBuffers[element]\r\n      );\r\n      this.glContext.texImage2D(\r\n        this.glContext.TEXTURE_2D,\r\n        0,\r\n        this.glContext.RGBA,\r\n        1,\r\n        1,\r\n        0,\r\n        this.glContext.RGBA,\r\n        this.glContext.UNSIGNED_BYTE,\r\n        null\r\n      );\r\n    }\r\n  }\r\n\r\n  use(glContext: WebGLRenderingContext) {\r\n    glContext.useProgram(this.shaderProgram);\r\n  }\r\n\r\n  loadTexture(texture: string, src: string) {\r\n    // Create a texture image.\r\n    const image = new Image();\r\n    image.src = src;\r\n    image.onload = () => {\r\n      this.glContext.bindTexture(\r\n        this.glContext.TEXTURE_2D,\r\n        this.textureBuffers[texture]\r\n      );\r\n      this.glContext.texImage2D(\r\n        this.glContext.TEXTURE_2D,\r\n        0,\r\n        this.glContext.RGBA,\r\n        this.glContext.RGBA,\r\n        this.glContext.UNSIGNED_BYTE,\r\n        image\r\n      );\r\n\r\n      // Use mipmap for texture.\r\n      this.glContext.generateMipmap(this.glContext.TEXTURE_2D);\r\n\r\n      // Set interpolation parameters for texture.\r\n      this.glContext.texParameteri(\r\n        this.glContext.TEXTURE_2D,\r\n        this.glContext.TEXTURE_MIN_FILTER,\r\n        this.glContext.LINEAR_MIPMAP_LINEAR\r\n      );\r\n\r\n      // Set the texture wrapping parameters.\r\n      this.glContext.texParameteri(\r\n        this.glContext.TEXTURE_2D,\r\n        this.glContext.TEXTURE_WRAP_S,\r\n        this.glContext.REPEAT\r\n      );\r\n      this.glContext.texParameteri(\r\n        this.glContext.TEXTURE_2D,\r\n        this.glContext.TEXTURE_WRAP_T,\r\n        this.glContext.REPEAT\r\n      );\r\n    };\r\n  }\r\n}\r\n\r\nexport class MaterialDescriptor {\r\n  fetchShader: boolean = false;\r\n  vertexSource!: string;\r\n  fragmentSource!: string;\r\n  attributes: string[] = [\"vPosition\", \"vNormal\", \"vColor\", \"vTexCoord\"];\r\n  uniforms: string[] = [\"uM\", \"uV\", \"uP\", \"uMV\", \"uMVn\", \"uMVP\", \"uDirLight\"];\r\n  textureSamplers: { [key: string]: string } = {};\r\n\r\n  constructor(\r\n    textureSamplers: { [key: string]: string } = {},\r\n    vertexSource: string = \"\",\r\n    fragmentSource: string = \"\"\r\n  ) {\r\n    this.vertexSource = vertexSource;\r\n    this.fragmentSource = fragmentSource;\r\n    this.textureSamplers = textureSamplers;\r\n  }\r\n\r\n  copy(m: MaterialDescriptor): MaterialDescriptor {\r\n    this.fetchShader = m.fetchShader;\r\n    this.vertexSource = m.vertexSource;\r\n    this.fragmentSource = m.fragmentSource;\r\n    this.attributes = m.attributes;\r\n    this.uniforms = m.uniforms;\r\n    this.textureSamplers = m.textureSamplers;\r\n    return this;\r\n  }\r\n\r\n  clone(): MaterialDescriptor {\r\n    return new MaterialDescriptor().copy(this);\r\n  }\r\n}\r\n\r\nexport const MaterialDescriptorType = createType({\r\n  name: \"MaterialDescriptor\",\r\n  default: new MaterialDescriptor(),\r\n  copy: copyCopyable<MaterialDescriptor>,\r\n  clone: cloneClonable<MaterialDescriptor>,\r\n});\r\n", "import { Component, ComponentSchema, Types } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\nimport {\r\n  Material,\r\n  MaterialDescriptor,\r\n  MaterialDescriptorType,\r\n} from \"../Material\";\r\nimport { Mesh, MeshType } from \"../Mesh\";\r\nimport { MeshBuffer } from \"../MeshBuffer\";\r\n\r\n@IComponent.register\r\nexport class MeshRenderData3D extends Component<MeshRenderData3D> {\r\n  static schema: ComponentSchema = {\r\n    mesh: {\r\n      type: Types.Ref,\r\n    },\r\n    meshBuffer: {\r\n      type: Types.Ref,\r\n    },\r\n\r\n    materialDesc: {\r\n      type: MaterialDescriptorType,\r\n    },\r\n    material: {\r\n      type: Types.Ref,\r\n    },\r\n  };\r\n\r\n  mesh!: Mesh;\r\n  meshBuffer!: MeshBuffer;\r\n\r\n  materialDesc!: MaterialDescriptor;\r\n  material!: Material;\r\n}\r\n", "import { Component } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class DirectionalLightTag extends Component<DirectionalLightTag> {}\r\n", "import { Component, ComponentSchema } from \"ecsy-wd\";\r\nimport { Types } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class OrthographicCameraData3D extends Component<OrthographicCameraData3D> {\r\n  static schema: ComponentSchema = {\r\n    left: {\r\n      type: Types.Number,\r\n      default: -1,\r\n    },\r\n    right: {\r\n      type: Types.Number,\r\n      default: 1,\r\n    },\r\n    top: {\r\n      type: Types.Number,\r\n      default: 1,\r\n    },\r\n    bottom: {\r\n      type: Types.Number,\r\n      default: -1,\r\n    },\r\n    near: {\r\n      type: Types.Number,\r\n      default: 0.1,\r\n    },\r\n    far: {\r\n      type: Types.Number,\r\n      default: 1000,\r\n    },\r\n  };\r\n\r\n  // Camera left plane distance.\r\n  left!: number;\r\n  // Camera right plane distance.\r\n  right!: number;\r\n  // Camera top plane distance.\r\n  top!: number;\r\n  // Camera bottom plane distance.\r\n  bottom!: number;\r\n  // Camera near plane distance.\r\n  near!: number;\r\n  // Camera far plane distance.\r\n  far!: number;\r\n}\r\n", "import { Attributes, System, SystemQueries } from \"ecsy-wd\";\r\nimport { mat4, vec2, vec3 } from \"gl-matrix\";\r\nimport { TransformData3D } from \"../../Locomotion/DataComponent/TransformData3D\";\r\nimport { OrthographicCameraData3D } from \"../DataComponent/OrthographicCameraData3D\";\r\nimport { PerspectiveCameraData3D } from \"../DataComponent/PerspectiveCameraData3D\";\r\nimport { MainCameraTag } from \"../TagComponent/MainCameraTag\";\r\n\r\nexport class CanvasWebGLRenderer extends System {\r\n  static queries: SystemQueries = {\r\n    perspectiveMainCamera: {\r\n      components: [MainCameraTag, PerspectiveCameraData3D, TransformData3D],\r\n    },\r\n    orthographicMainCamera: {\r\n      components: [MainCameraTag, OrthographicCameraData3D, TransformData3D],\r\n    },\r\n  };\r\n\r\n  mainCanvas!: HTMLCanvasElement;\r\n  glContext!: WebGLRenderingContext;\r\n\r\n  cameraTransform!: TransformData3D;\r\n  cameraPerspective: PerspectiveCameraData3D | null = null;\r\n  cameraOrthographic: OrthographicCameraData3D | null = null;\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.glContext = this.mainCanvas.getContext(\r\n      \"webgl\"\r\n    ) as WebGLRenderingContext;\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    // Check if main camera exists.\r\n    if (\r\n      this.queries.perspectiveMainCamera.results.length +\r\n        this.queries.orthographicMainCamera.results.length ===\r\n      0\r\n    ) {\r\n      throw new Error(\"Main camera not found.\");\r\n    }\r\n    // Check if there's more than one main camera.\r\n    else if (\r\n      this.queries.perspectiveMainCamera.results.length +\r\n        this.queries.orthographicMainCamera.results.length >\r\n      1\r\n    ) {\r\n      throw new Error(\"More than one main camera found.\");\r\n    }\r\n\r\n    // Get the canvas size.\r\n    const canvasSize = vec2.fromValues(\r\n      this.mainCanvas.width,\r\n      this.mainCanvas.height\r\n    );\r\n\r\n    // Set webgl render buffer size.\r\n    this.glContext.viewport(0, 0, canvasSize[0], canvasSize[1]);\r\n\r\n    if (this.queries.perspectiveMainCamera.results.length > 0) {\r\n      // Perspective camera.\r\n      const camera = this.queries.perspectiveMainCamera.results[0];\r\n      this.cameraTransform = camera.getComponent(\r\n        TransformData3D\r\n      ) as TransformData3D;\r\n      this.cameraPerspective = camera.getMutableComponent(\r\n        PerspectiveCameraData3D\r\n      ) as PerspectiveCameraData3D;\r\n\r\n      // Change the aspect ratio.\r\n      this.cameraPerspective.aspect = canvasSize[0] / canvasSize[1];\r\n    } else {\r\n      // Orthographic camera.\r\n      const camera = this.queries.orthographicMainCamera.results[0];\r\n      this.cameraTransform = camera.getComponent(\r\n        TransformData3D\r\n      ) as TransformData3D;\r\n      this.cameraOrthographic = camera.getMutableComponent(\r\n        OrthographicCameraData3D\r\n      ) as OrthographicCameraData3D;\r\n\r\n      // Change the view port size.\r\n      // TODO: Change the zoom factor using scroll wheel.\r\n      this.cameraOrthographic.left =\r\n        (-canvasSize[0] * 10) / (2 * canvasSize[1]);\r\n      this.cameraOrthographic.right =\r\n        (canvasSize[0] * 10) / (2 * canvasSize[1]);\r\n      this.cameraOrthographic.bottom = -10 / 2;\r\n      this.cameraOrthographic.top = 10 / 2;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct a transform matrix from model space to world space.\r\n   * @param transform the transform of the model.\r\n   * @returns the model matrix.\r\n   */\r\n  getModelMatrix(transform: TransformData3D, dropScale: boolean = false): mat4 {\r\n    const objectToWorld = mat4.create();\r\n    if (dropScale) {\r\n      mat4.fromRotationTranslation(\r\n        objectToWorld,\r\n        transform.rotation.value,\r\n        transform.position.value\r\n      );\r\n    } else {\r\n      mat4.fromRotationTranslationScale(\r\n        objectToWorld,\r\n        transform.rotation.value,\r\n        transform.position.value,\r\n        transform.scale.value\r\n      );\r\n    }\r\n    return objectToWorld;\r\n  }\r\n\r\n  /**\r\n   * Construct a transform matrix from world space to camera space.\r\n   * @param camTransform the transform of the camera.\r\n   * @returns the view matrix.\r\n   */\r\n  getViewMatrix(camTransform: TransformData3D): mat4 {\r\n    // Construct world to camera matrix.\r\n    const worldToCamera = mat4.create();\r\n    const cameraToWorld = mat4.create();\r\n    mat4.fromRotationTranslationScale(\r\n      cameraToWorld,\r\n      camTransform.rotation.value,\r\n      camTransform.position.value,\r\n      vec3.fromValues(-1, 1, -1)\r\n    );\r\n    mat4.invert(worldToCamera, cameraToWorld);\r\n    return worldToCamera;\r\n  }\r\n\r\n  /**\r\n   * Construct a transform matrix from world space to model space.\r\n   * @param camData the camera data.\r\n   * @returns the world to model matrix.\r\n   */\r\n  getOrthographicProjectionMatrix(camData: OrthographicCameraData3D): mat4 {\r\n    const orthographic = mat4.create();\r\n    mat4.ortho(\r\n      orthographic,\r\n      camData.left,\r\n      camData.right,\r\n      camData.bottom,\r\n      camData.top,\r\n      camData.near,\r\n      camData.far\r\n    );\r\n    return orthographic;\r\n  }\r\n\r\n  /**\r\n   * Construct a transform matrix from world space to camera space.\r\n   * @param camData the camera data.\r\n   * @returns the world to camera matrix.\r\n   */\r\n  getPerspectiveProjectionMatrix(camData: PerspectiveCameraData3D): mat4 {\r\n    const perspective = mat4.create();\r\n    mat4.perspective(\r\n      perspective,\r\n      camData.fov,\r\n      camData.aspect,\r\n      camData.near,\r\n      camData.far\r\n    );\r\n    return perspective;\r\n  }\r\n\r\n  getNDCToViewportMatrix(): mat4 {\r\n    const ndcToViewport = mat4.create();\r\n    mat4.fromTranslation(ndcToViewport, [\r\n      this.mainCanvas.width / 2,\r\n      this.mainCanvas.height / 2,\r\n      0,\r\n    ]);\r\n\r\n    mat4.scale(ndcToViewport, ndcToViewport, [\r\n      this.mainCanvas.width / 2,\r\n      -this.mainCanvas.height / 2,\r\n      1,\r\n    ]);\r\n\r\n    return ndcToViewport;\r\n  }\r\n}\r\n", "import { SystemQueries } from \"ecsy-wd\";\r\nimport { mat3, mat4, quat, vec2, vec3 } from \"gl-matrix\";\r\nimport { TransformData3D } from \"../../../../Locomotion/DataComponent/TransformData3D\";\r\nimport { MeshRenderData3D } from \"../../../DataComponent/MeshRenderData3D\";\r\nimport { PerspectiveCameraData3D } from \"../../../DataComponent/PerspectiveCameraData3D\";\r\nimport { DirectionalLightTag } from \"../../../TagComponent/DirectionalLightTag\";\r\nimport { CanvasWebGLRenderer } from \"../../CanvasWebGLRenderer\";\r\n\r\nexport class WebGLOpaqueRenderer extends CanvasWebGLRenderer {\r\n  static queries: SystemQueries = {\r\n    ...this.queries,\r\n    meshEntities: {\r\n      components: [TransformData3D, MeshRenderData3D],\r\n    },\r\n    directionalLights: {\r\n      components: [TransformData3D, DirectionalLightTag],\r\n    },\r\n  };\r\n\r\n  public execute(delta: number, time: number): void {\r\n    try {\r\n      super.execute(delta, time);\r\n    } catch (error) {\r\n      console.warn(error);\r\n      return;\r\n    }\r\n\r\n    // View matrix.\r\n    const tView = this.getViewMatrix(this.cameraTransform);\r\n    // Projection matrix.\r\n    let tProjection: mat4;\r\n    if (this.cameraPerspective) {\r\n      tProjection = this.getPerspectiveProjectionMatrix(this.cameraPerspective);\r\n    } else if (this.cameraOrthographic) {\r\n      tProjection = this.getOrthographicProjectionMatrix(\r\n        this.cameraOrthographic\r\n      );\r\n    } else {\r\n      throw new Error(\"No camera found.\");\r\n    }\r\n\r\n    // Get the directional light.\r\n    let lightDir = vec3.fromValues(0, 1, 0);\r\n    if (this.queries.directionalLights.results.length > 0) {\r\n      const lightTransform =\r\n        this.queries.directionalLights.results[0].getComponent(\r\n          TransformData3D\r\n        ) as TransformData3D;\r\n      vec3.transformQuat(\r\n        lightDir,\r\n        vec3.fromValues(0, 0, -1),\r\n        lightTransform.rotation.value\r\n      );\r\n    }\r\n\r\n    // Render all objects.\r\n    this.queries.meshEntities.results.forEach((entity) => {\r\n      const transform = entity.getComponent(TransformData3D) as TransformData3D;\r\n      const meshRenderData = entity.getComponent(\r\n        MeshRenderData3D\r\n      ) as MeshRenderData3D;\r\n\r\n      // Get material and buffer.\r\n      const material = meshRenderData.material;\r\n      const meshBuffer = meshRenderData.meshBuffer;\r\n\r\n      // If the material is not ready, skip this object.\r\n      if (!material || !meshBuffer) {\r\n        return;\r\n      }\r\n\r\n      // Model matrix.\r\n      const tModel = this.getModelMatrix(transform);\r\n\r\n      // MV matrix.\r\n      const tMV = mat4.create();\r\n      mat4.multiply(tMV, tView, tModel);\r\n\r\n      // MVn matrix.\r\n      const tMVn = mat3.create();\r\n      mat3.normalFromMat4(tMVn, tMV);\r\n\r\n      // MVP matrix.\r\n      const tMVP = mat4.create();\r\n      mat4.multiply(tMVP, tProjection, tMV);\r\n\r\n      // Enable the shader program.\r\n      material.use(this.glContext);\r\n\r\n      // Bind element array buffer.\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ELEMENT_ARRAY_BUFFER,\r\n        meshBuffer.triangleIndicesBuffer\r\n      );\r\n\r\n      // Set the shader uniforms.\r\n      this.glContext.uniformMatrix4fv(\r\n        material.uniformLocations.uM as WebGLUniformLocation,\r\n        false,\r\n        tModel\r\n      );\r\n      this.glContext.uniformMatrix4fv(\r\n        material.uniformLocations.uV as WebGLUniformLocation,\r\n        false,\r\n        tView\r\n      );\r\n      this.glContext.uniformMatrix4fv(\r\n        material.uniformLocations.uP as WebGLUniformLocation,\r\n        false,\r\n        tProjection\r\n      );\r\n      this.glContext.uniformMatrix4fv(\r\n        material.uniformLocations.uMV as WebGLUniformLocation,\r\n        false,\r\n        tMV\r\n      );\r\n      this.glContext.uniformMatrix3fv(\r\n        material.uniformLocations.uMVn as WebGLUniformLocation,\r\n        false,\r\n        tMVn\r\n      );\r\n      this.glContext.uniformMatrix4fv(\r\n        material.uniformLocations.uMVP as WebGLUniformLocation,\r\n        false,\r\n        tMVP\r\n      );\r\n      // TODO: Set the directional light uniforms from light entity.\r\n      this.glContext.uniform3fv(\r\n        material.uniformLocations.uDirLight as WebGLUniformLocation,\r\n        lightDir\r\n      );\r\n\r\n      // Set the shader attributes.\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        meshBuffer.vertexPositionsBuffer\r\n      );\r\n      this.glContext.vertexAttribPointer(\r\n        material.attributeLocations.vPosition as number,\r\n        meshBuffer.bufferInfos.vertexPositions!.itemSize,\r\n        this.glContext.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        meshBuffer.vertexNormalsBuffer\r\n      );\r\n      this.glContext.vertexAttribPointer(\r\n        material.attributeLocations.vNormal as number,\r\n        meshBuffer.bufferInfos.vertexNormals!.itemSize,\r\n        this.glContext.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        meshBuffer.vertexColorsBuffer\r\n      );\r\n      this.glContext.vertexAttribPointer(\r\n        material.attributeLocations.vColor as number,\r\n        meshBuffer.bufferInfos.vertexColors!.itemSize,\r\n        this.glContext.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        meshBuffer.vertexTexCoordsBuffer\r\n      );\r\n      this.glContext.vertexAttribPointer(\r\n        material.attributeLocations.vTexCoord as number,\r\n        meshBuffer.bufferInfos.vertexTexCoords!.itemSize,\r\n        this.glContext.FLOAT,\r\n        false,\r\n        0,\r\n        0\r\n      );\r\n\r\n      // Bind textures.\r\n      let index = 0;\r\n      const keys = Object.keys(material.textureBuffers);\r\n      for (const key of keys) {\r\n        const texture = material.textureBuffers[key];\r\n        this.glContext.activeTexture(this.glContext.TEXTURE0 + index);\r\n        this.glContext.bindTexture(this.glContext.TEXTURE_2D, texture);\r\n\r\n        index++;\r\n      }\r\n\r\n      // Draw the object.\r\n      this.glContext.drawElements(\r\n        this.glContext.TRIANGLES,\r\n        meshBuffer.bufferInfos.triangleIndices!.numItems,\r\n        this.glContext.UNSIGNED_SHORT,\r\n        0\r\n      );\r\n    });\r\n  }\r\n}\r\n", "import { Attributes, System } from \"ecsy-wd\";\r\n\r\nexport class ClearCanvasWebGLSystem extends System {\r\n  mainCanvas!: HTMLCanvasElement;\r\n  glContext!: WebGLRenderingContext;\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.glContext = this.mainCanvas.getContext(\r\n      \"webgl\"\r\n    ) as WebGLRenderingContext;\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    this.glContext.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    this.glContext.enable(this.glContext.DEPTH_TEST);\r\n    this.glContext.clear(\r\n      this.glContext.COLOR_BUFFER_BIT | this.glContext.DEPTH_BUFFER_BIT\r\n    );\r\n  }\r\n}\r\n", "import {\r\n  Component,\r\n  ComponentSchema,\r\n  COMPONENT_CHANGE_EVENT,\r\n  Types,\r\n} from \"ecsy-wd\";\r\nimport {\r\n  Vector3,\r\n  Vector3CustomEditor,\r\n  Vector3Type,\r\n} from \"../../../../Mathematics/Vector3\";\r\nimport { IComponent } from \"../../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class CubeMeshGeneratorData extends Component<CubeMeshGeneratorData> {\r\n  static schema: ComponentSchema = {\r\n    size: {\r\n      type: Vector3Type,\r\n      default: new Vector3(1, 1, 1),\r\n    },\r\n  };\r\n\r\n  size: Vector3 = new Vector3(1, 1, 1);\r\n\r\n  public useDefaultInspector: boolean = false;\r\n  public onInspector: (componentDiv: HTMLDivElement) => void | null = (\r\n    componentDiv: HTMLDivElement\r\n  ) => {\r\n    // Size editor.\r\n    const sizeDiv = document.createElement(\"div\");\r\n    // Size title.\r\n    sizeDiv.appendChild(document.createTextNode(\"Size\"));\r\n    // Position Vector3 editor.\r\n    const [sizeVector3Div, setSize] = Vector3CustomEditor(\r\n      this.size,\r\n      (newValue) => {\r\n        this.size = newValue;\r\n        this.eventEmitter.emit(COMPONENT_CHANGE_EVENT, this);\r\n      }\r\n    );\r\n    sizeDiv.appendChild(sizeVector3Div);\r\n\r\n    this.eventEmitter.on(COMPONENT_CHANGE_EVENT, () => {\r\n      setSize(this.size);\r\n    });\r\n\r\n    // Append the size editor to the component div.\r\n    componentDiv.appendChild(sizeDiv);\r\n  };\r\n}\r\n", "import { cloneClonable, copyCopyable, createType } from \"ecsy-wd\";\r\nimport { vec2, vec3, vec4 } from \"gl-matrix\";\r\n\r\nexport class Mesh {\r\n  vertexPositions!: Float32Array;\r\n  vertexNormals!: Float32Array;\r\n  vertexColors!: Float32Array;\r\n  vertexTexCoords!: Float32Array;\r\n  triangleIndices!: Uint16Array;\r\n\r\n  vertexPositionBuffer: Array<number> = [];\r\n  vertexNormalBuffer: Array<number> = [];\r\n  vertexColorBuffer: Array<number> = [];\r\n  vertexTexCoordsBuffer: Array<number> = [];\r\n  triangleIndexBuffer: Array<number> = [];\r\n\r\n  public compileBufferToArrays() {\r\n    this.vertexPositions = new Float32Array(this.vertexPositionBuffer);\r\n    this.vertexNormals = new Float32Array(this.vertexNormalBuffer);\r\n    this.vertexColors = new Float32Array(this.vertexColorBuffer);\r\n    this.vertexTexCoords = new Float32Array(this.vertexTexCoordsBuffer);\r\n    this.triangleIndices = new Uint16Array(this.triangleIndexBuffer);\r\n\r\n    this.clearBuffers();\r\n  }\r\n\r\n  public clearBuffers() {\r\n    this.vertexPositionBuffer = [];\r\n    this.vertexNormalBuffer = [];\r\n    this.vertexColorBuffer = [];\r\n    this.vertexTexCoordsBuffer = [];\r\n    this.triangleIndexBuffer = [];\r\n  }\r\n\r\n  public addVertexPosition(vertex: vec3) {\r\n    this.vertexPositionBuffer.push(vertex[0], vertex[1], vertex[2]);\r\n  }\r\n\r\n  public addVertexNormal(normal: vec3) {\r\n    this.vertexNormalBuffer.push(normal[0], normal[1], normal[2]);\r\n  }\r\n\r\n  public addVertexColor(color: vec4) {\r\n    this.vertexColorBuffer.push(color[0], color[1], color[2], color[3]);\r\n  }\r\n\r\n  public addVertexTexCoords(texCoords: vec2) {\r\n    this.vertexTexCoordsBuffer.push(texCoords[0], texCoords[1]);\r\n  }\r\n\r\n  public registerTriangle(t1: number, t2: number, t3: number) {\r\n    this.triangleIndexBuffer.push(t1, t2, t3);\r\n  }\r\n\r\n  copy(m: Mesh): Mesh {\r\n    this.vertexPositions = new Float32Array(m.vertexPositions);\r\n    this.vertexNormals = new Float32Array(m.vertexNormals);\r\n    this.vertexColors = new Float32Array(m.vertexColors);\r\n    this.vertexTexCoords = new Float32Array(m.vertexTexCoords);\r\n    this.triangleIndices = new Uint16Array(m.triangleIndices);\r\n    return this;\r\n  }\r\n\r\n  clone(): Mesh {\r\n    return new Mesh().copy(this);\r\n  }\r\n}\r\n\r\nexport const MeshType = createType({\r\n  name: \"Mesh\",\r\n  default: new Mesh(),\r\n  copy: copyCopyable<Mesh>,\r\n  clone: cloneClonable<Mesh>,\r\n});\r\n", "import { Attributes, Entity, System, SystemQueries } from \"ecsy-wd\";\r\nimport { CubeMesh } from \"../../../../Utils/DefaultMeshes/CubeMesh\";\r\nimport { CubeMeshGeneratorData } from \"../../DataComponent/MeshGenerator/CubeMeshGeneratorData\";\r\nimport { MeshRenderData3D } from \"../../DataComponent/MeshRenderData3D\";\r\nimport { Mesh } from \"../../Mesh\";\r\n\r\nexport class CubeMeshGeneratorSystem extends System {\r\n  static queries: SystemQueries = {\r\n    meshEntities: {\r\n      components: [CubeMeshGeneratorData, MeshRenderData3D],\r\n      listen: {\r\n        added: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  mainCanvas!: HTMLCanvasElement;\r\n  canvasContext!: WebGLRenderingContext;\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.canvasContext = this.mainCanvas.getContext(\r\n      \"webgl\"\r\n    ) as WebGLRenderingContext;\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    // Generate all mesh.\r\n    this.queries.meshEntities.added?.forEach((entity) => {\r\n      this.generateCubeMesh(entity);\r\n    });\r\n    this.queries.meshEntities.changed?.forEach((entity) => {\r\n      this.generateCubeMesh(entity);\r\n    });\r\n  }\r\n\r\n  private generateCubeMesh(entity: Entity) {\r\n    const meshGeneratorData = entity.getComponent(\r\n      CubeMeshGeneratorData\r\n    ) as CubeMeshGeneratorData;\r\n    const meshRenderData = entity.getMutableComponent(\r\n      MeshRenderData3D\r\n    ) as MeshRenderData3D;\r\n\r\n    if (!meshGeneratorData) {\r\n      return;\r\n    }\r\n\r\n    meshRenderData.mesh = new Mesh();\r\n\r\n    meshRenderData.mesh.clearBuffers();\r\n\r\n    const x = meshGeneratorData.size.value[0];\r\n    const y = meshGeneratorData.size.value[1];\r\n    const z = meshGeneratorData.size.value[2];\r\n\r\n    // Front face.\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, z]);\r\n    meshRenderData.mesh.addVertexPosition([x, -y, z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, y, z]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, 1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, 1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, 1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.registerTriangle(0, 1, 2);\r\n    meshRenderData.mesh.registerTriangle(0, 2, 3);\r\n\r\n    // Back face.\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, -y, -z]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, -1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, -1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, -1]);\r\n    meshRenderData.mesh.addVertexNormal([0, 0, -1]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.registerTriangle(4, 5, 6);\r\n    meshRenderData.mesh.registerTriangle(4, 6, 7);\r\n\r\n    // Top face.\r\n    meshRenderData.mesh.addVertexPosition([-x, y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, y, z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, -z]);\r\n    meshRenderData.mesh.addVertexNormal([0, 1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, 1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, 1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, 1, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.registerTriangle(8, 9, 10);\r\n    meshRenderData.mesh.registerTriangle(8, 10, 11);\r\n\r\n    // Bottom face.\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, -y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, -y, z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, z]);\r\n    meshRenderData.mesh.addVertexNormal([0, -1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, -1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, -1, 0]);\r\n    meshRenderData.mesh.addVertexNormal([0, -1, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.registerTriangle(12, 13, 14);\r\n    meshRenderData.mesh.registerTriangle(12, 14, 15);\r\n\r\n    // Right face.\r\n    meshRenderData.mesh.addVertexPosition([x, -y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([x, y, z]);\r\n    meshRenderData.mesh.addVertexPosition([x, -y, z]);\r\n    meshRenderData.mesh.addVertexNormal([1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([1, 0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.registerTriangle(16, 17, 18);\r\n    meshRenderData.mesh.registerTriangle(16, 18, 19);\r\n\r\n    // Left face.\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, -z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, -y, z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, y, z]);\r\n    meshRenderData.mesh.addVertexPosition([-x, y, -z]);\r\n    meshRenderData.mesh.addVertexNormal([-1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([-1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([-1, 0, 0]);\r\n    meshRenderData.mesh.addVertexNormal([-1, 0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 0]);\r\n    meshRenderData.mesh.addVertexTexCoords([1, 1]);\r\n    meshRenderData.mesh.addVertexTexCoords([0, 1]);\r\n    meshRenderData.mesh.registerTriangle(20, 21, 22);\r\n    meshRenderData.mesh.registerTriangle(20, 22, 23);\r\n\r\n    // Add 24 white vertex colors.\r\n    for (var i = 0; i < 24; i++) {\r\n      meshRenderData.mesh.addVertexColor([1, 1, 1, 1]);\r\n    }\r\n\r\n    // Compile the mesh.\r\n    meshRenderData.mesh.compileBufferToArrays();\r\n  }\r\n}\r\n", "import { Component, Types } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../../ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class IcosphereMeshGeneratorData extends Component<IcosphereMeshGeneratorData> {\r\n  static schema = {\r\n    radius: {\r\n      type: Types.Number,\r\n      default: 1,\r\n    },\r\n    subdivisions: {\r\n      type: Types.Number,\r\n      default: 0,\r\n    },\r\n    flatNormal: {\r\n      type: Types.Boolean,\r\n      default: false,\r\n    },\r\n  };\r\n\r\n  radius: number = 1;\r\n  subdivisions: number = 0;\r\n\r\n  flatNormal: boolean = false;\r\n}\r\n", "import { Attributes, Entity, System, SystemQueries } from \"ecsy-wd\";\r\nimport { vec2, vec3 } from \"gl-matrix\";\r\nimport { IcosphereMeshGeneratorData } from \"../../DataComponent/MeshGenerator/IcosphereMeshGeneratorData\";\r\nimport { MeshRenderData3D } from \"../../DataComponent/MeshRenderData3D\";\r\nimport { Mesh } from \"../../Mesh\";\r\n\r\nexport class IcosphereMeshGeneratorSystem extends System {\r\n  static queries: SystemQueries = {\r\n    meshEntities: {\r\n      components: [IcosphereMeshGeneratorData],\r\n      listen: {\r\n        added: true,\r\n        changed: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  mainCanvas!: HTMLCanvasElement;\r\n  canvasContext!: WebGLRenderingContext;\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.canvasContext = this.mainCanvas.getContext(\r\n      \"webgl\"\r\n    ) as WebGLRenderingContext;\r\n  }\r\n  execute(delta: number, time: number): void {\r\n    // Generate all mesh.\r\n    this.queries.meshEntities.added?.forEach((entity) => {\r\n      this.generateIcosphereMesh(entity);\r\n    });\r\n    this.queries.meshEntities.changed?.forEach((entity) => {\r\n      this.generateIcosphereMesh(entity);\r\n    });\r\n  }\r\n\r\n  generateIcosphereMesh(entity: Entity) {\r\n    const generatorData = entity.getComponent(\r\n      IcosphereMeshGeneratorData\r\n    ) as IcosphereMeshGeneratorData;\r\n    const meshRenderData = entity.getMutableComponent(\r\n      MeshRenderData3D\r\n    ) as MeshRenderData3D;\r\n\r\n    if (!meshRenderData) {\r\n      return;\r\n    }\r\n\r\n    // Generate Mesh.\r\n    meshRenderData.mesh = new Mesh();\r\n\r\n    // Top vertices layer.\r\n    let vertices = this.generateIcosahedron(generatorData);\r\n\r\n    // Subdivide.\r\n    for (let i = 0; i < generatorData.subdivisions; i++) {\r\n      vertices = this.subdivide(vertices);\r\n    }\r\n\r\n    // Generate the mesh.\r\n    let index = 0;\r\n\r\n    for (let i = 0; i < vertices.length; i += 3) {\r\n      // Get vertices.\r\n      const v1 = vertices[i];\r\n      const v2 = vertices[i + 1];\r\n      const v3 = vertices[i + 2];\r\n\r\n      // Normalized vertices.\r\n\r\n      // Normalize.\r\n      vec3.normalize(v1, v1);\r\n      vec3.normalize(v2, v2);\r\n      vec3.normalize(v3, v3);\r\n\r\n      // Scale.\r\n      vec3.scale(v1, v1, generatorData.radius);\r\n      vec3.scale(v2, v2, generatorData.radius);\r\n      vec3.scale(v3, v3, generatorData.radius);\r\n\r\n      // Calculate normal.\r\n      const normal = this.calcNormal(v1, v2, v3);\r\n\r\n      // Push vertices.\r\n      meshRenderData.mesh.addVertexPosition(v1);\r\n      meshRenderData.mesh.addVertexPosition(v2);\r\n      meshRenderData.mesh.addVertexPosition(v3);\r\n\r\n      // Push vertex colors.\r\n      for (let j = 0; j < 3; j++) {\r\n        meshRenderData.mesh.addVertexColor([1, 1, 1, 1]);\r\n      }\r\n\r\n      // Push normals.\r\n      if (generatorData.flatNormal) {\r\n        meshRenderData.mesh.addVertexNormal(normal);\r\n        meshRenderData.mesh.addVertexNormal(normal);\r\n        meshRenderData.mesh.addVertexNormal(normal);\r\n      } else {\r\n        meshRenderData.mesh.addVertexNormal(vec3.normalize(vec3.create(), v1));\r\n        meshRenderData.mesh.addVertexNormal(vec3.normalize(vec3.create(), v2));\r\n        meshRenderData.mesh.addVertexNormal(vec3.normalize(vec3.create(), v3));\r\n      }\r\n\r\n      // Push vertex coordinates.\r\n\r\n      let texCoord1 = this.calculateUV(v1);\r\n      let texCoord2 = this.calculateUV(v2);\r\n      let texCoord3 = this.calculateUV(v3);\r\n      // Check if one of the x coordinates distance is greater than 0.5.\r\n      if (texCoord1[0] - texCoord2[0] > 0.5) {\r\n        texCoord1[0] -= 1;\r\n      }\r\n      if (texCoord2[0] - texCoord1[0] > 0.5) {\r\n        texCoord2[0] -= 1;\r\n      }\r\n      if (texCoord1[0] - texCoord3[0] > 0.5) {\r\n        texCoord1[0] -= 1;\r\n      }\r\n      if (texCoord3[0] - texCoord1[0] > 0.5) {\r\n        texCoord3[0] -= 1;\r\n      }\r\n      if (texCoord2[0] - texCoord3[0] > 0.5) {\r\n        texCoord2[0] -= 1;\r\n      }\r\n      if (texCoord3[0] - texCoord2[0] > 0.5) {\r\n        texCoord3[0] -= 1;\r\n      }\r\n\r\n      meshRenderData.mesh.addVertexTexCoords(texCoord1);\r\n      meshRenderData.mesh.addVertexTexCoords(texCoord2);\r\n      meshRenderData.mesh.addVertexTexCoords(texCoord3);\r\n\r\n      // Push indices.\r\n      meshRenderData.mesh.registerTriangle(index, index + 1, index + 2);\r\n      index += 3;\r\n    }\r\n\r\n    // Compile mesh.\r\n    meshRenderData.mesh.compileBufferToArrays();\r\n  }\r\n\r\n  /**\r\n   * Calulate the latitude and longitude of a vertex.\r\n   */\r\n  private calculateUV(pos: vec3): vec2 {\r\n    // Normalize the vertex.\r\n    vec3.normalize(pos, pos);\r\n\r\n    // Calculate the longitude and latitude.\r\n    const longitude = Math.atan2(pos[0], pos[2]);\r\n    const latitude = -Math.asin(pos[1]);\r\n    // Normalize latitude and longitude to [0, 1].\r\n    const u = (longitude + Math.PI) / (2 * Math.PI);\r\n    const v = (latitude + Math.PI / 2) / Math.PI;\r\n\r\n    return vec2.fromValues(u, v);\r\n  }\r\n\r\n  /**\r\n   * One subdivision step.\r\n   * @param meshRenderData\r\n   * @param generatorData\r\n   */\r\n  private subdivide(vertices: Array<vec3>) {\r\n    const newVertices: Array<vec3> = [];\r\n\r\n    // Generate the mesh.\r\n    for (let i = 0; i < vertices.length; i += 3) {\r\n      // Get vertices.\r\n      const v1 = vertices[i];\r\n      const v2 = vertices[i + 1];\r\n      const v3 = vertices[i + 2];\r\n\r\n      // Subdivide.\r\n      const a = vec3.lerp(vec3.create(), v1, v2, 0.5);\r\n      const b = vec3.lerp(vec3.create(), v2, v3, 0.5);\r\n      const c = vec3.lerp(vec3.create(), v3, v1, 0.5);\r\n\r\n      // Push vertices.\r\n      newVertices.push(v1, a, c);\r\n      newVertices.push(v2, b, a);\r\n      newVertices.push(v3, c, b);\r\n      newVertices.push(c, a, b);\r\n    }\r\n\r\n    return newVertices;\r\n  }\r\n\r\n  /**\r\n   * Generate a icosahedron.\r\n   * @param generatorData\r\n   * @param meshRenderData\r\n   */\r\n  private generateIcosahedron(\r\n    generatorData: IcosphereMeshGeneratorData\r\n  ): Array<vec3> {\r\n    const layerRadius = (generatorData.radius * 2) / Math.sqrt(5);\r\n    const layerHeight = generatorData.radius / Math.sqrt(5);\r\n    // Top vertex.\r\n    const topVertex = vec3.fromValues(0, generatorData.radius, 0);\r\n    // Top vertices.\r\n    const topVertices: Array<vec3> = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const angle = (i * 2 * Math.PI) / 5;\r\n      const z = layerRadius * Math.cos(angle);\r\n      const x = -layerRadius * Math.sin(angle);\r\n      topVertices.push(vec3.fromValues(x, layerHeight, z));\r\n    }\r\n    // Bottom vertices.\r\n    const bottomVertices: Array<vec3> = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const angle = (i * 2 * Math.PI) / 5;\r\n      const z = layerRadius * Math.cos(angle + Math.PI);\r\n      const x = -layerRadius * Math.sin(angle + Math.PI);\r\n      bottomVertices.push(vec3.fromValues(x, -layerHeight, z));\r\n    }\r\n    // Bottom vertex.\r\n    const bottomVertex = vec3.fromValues(0, -generatorData.radius, 0);\r\n\r\n    const vertices: Array<vec3> = [];\r\n\r\n    // Generate top vertices.\r\n    for (let i = 0; i < 5; i++) {\r\n      vertices.push(topVertex);\r\n      vertices.push(topVertices[i]);\r\n      vertices.push(topVertices[(i + 1) % 5]);\r\n    }\r\n\r\n    // Generate middle vertices.\r\n    for (let i = 0; i < 5; i++) {\r\n      vertices.push(topVertices[i]);\r\n      vertices.push(bottomVertices[(i + 2) % 5]);\r\n      vertices.push(bottomVertices[(i + 3) % 5]);\r\n\r\n      vertices.push(bottomVertices[(i + 3) % 5]);\r\n      vertices.push(topVertices[(i + 1) % 5]);\r\n      vertices.push(topVertices[i]);\r\n    }\r\n\r\n    // Generate bottom vertices.\r\n    for (let i = 0; i < 5; i++) {\r\n      vertices.push(bottomVertex);\r\n      vertices.push(bottomVertices[(i + 1) % 5]);\r\n      vertices.push(bottomVertices[i]);\r\n    }\r\n\r\n    return vertices;\r\n  }\r\n\r\n  /**\r\n   * Calculate the normal of a triangle.\r\n   * @param v1 center vertex.\r\n   * @param v2 from vertex.\r\n   * @param v3 to vertex.\r\n   * @returns (v3 - v1) cross (v2 - v1).\r\n   */\r\n  calcNormal(v1: vec3, v2: vec3, v3: vec3): vec3 {\r\n    const normal = vec3.create();\r\n    vec3.cross(\r\n      normal,\r\n      vec3.sub(vec3.create(), v3, v1),\r\n      vec3.sub(vec3.create(), v2, v1)\r\n    );\r\n    vec3.normalize(normal, normal);\r\n    return normal;\r\n  }\r\n}\r\n", "import { Mesh } from \"./Mesh\";\r\n\r\ninterface BufferInfo {\r\n  itemSize: number;\r\n  numItems: number;\r\n}\r\n\r\ninterface BufferInfos {\r\n  vertexPositions: BufferInfo | null;\r\n  vertexNormals: BufferInfo | null;\r\n  vertexColors: BufferInfo | null;\r\n  vertexTexCoords: BufferInfo | null;\r\n  triangleIndices: BufferInfo | null;\r\n}\r\n\r\nexport class MeshBuffer {\r\n  vertexPositionsBuffer!: WebGLBuffer;\r\n  vertexNormalsBuffer!: WebGLBuffer;\r\n  vertexColorsBuffer!: WebGLBuffer;\r\n  vertexTexCoordsBuffer!: WebGLBuffer;\r\n  triangleIndicesBuffer!: WebGLBuffer;\r\n\r\n  bufferInfos: BufferInfos = {\r\n    vertexPositions: null,\r\n    vertexNormals: null,\r\n    vertexColors: null,\r\n    vertexTexCoords: null,\r\n    triangleIndices: null,\r\n  };\r\n\r\n  constructor(glContext: WebGLRenderingContext, mesh: Mesh) {\r\n    // Vertex position buffer.\r\n    this.vertexPositionsBuffer = glContext.createBuffer()!;\r\n    glContext.bindBuffer(glContext.ARRAY_BUFFER, this.vertexPositionsBuffer);\r\n    glContext.bufferData(\r\n      glContext.ARRAY_BUFFER,\r\n      new Float32Array(mesh.vertexPositions),\r\n      glContext.STATIC_DRAW\r\n    );\r\n    this.bufferInfos.vertexPositions = {\r\n      itemSize: 3,\r\n      numItems: mesh.vertexPositions.length / 3,\r\n    };\r\n\r\n    // Vertex normal buffer.\r\n    this.vertexNormalsBuffer = glContext.createBuffer()!;\r\n    glContext.bindBuffer(glContext.ARRAY_BUFFER, this.vertexNormalsBuffer);\r\n    glContext.bufferData(\r\n      glContext.ARRAY_BUFFER,\r\n      new Float32Array(mesh.vertexNormals),\r\n      glContext.STATIC_DRAW\r\n    );\r\n    this.bufferInfos.vertexNormals = {\r\n      itemSize: 3,\r\n      numItems: mesh.vertexNormals.length / 3,\r\n    };\r\n\r\n    // Vertex color buffer.\r\n    this.vertexColorsBuffer = glContext.createBuffer()!;\r\n    glContext.bindBuffer(glContext.ARRAY_BUFFER, this.vertexColorsBuffer);\r\n    glContext.bufferData(\r\n      glContext.ARRAY_BUFFER,\r\n      new Float32Array(mesh.vertexColors),\r\n      glContext.STATIC_DRAW\r\n    );\r\n    this.bufferInfos.vertexColors = {\r\n      itemSize: 4,\r\n      numItems: mesh.vertexColors.length / 4,\r\n    };\r\n\r\n    // Vertex texture coordinate buffer.\r\n    this.vertexTexCoordsBuffer = glContext.createBuffer()!;\r\n    glContext.bindBuffer(glContext.ARRAY_BUFFER, this.vertexTexCoordsBuffer);\r\n    glContext.bufferData(\r\n      glContext.ARRAY_BUFFER,\r\n      new Float32Array(mesh.vertexTexCoords),\r\n      glContext.STATIC_DRAW\r\n    );\r\n    this.bufferInfos.vertexTexCoords = {\r\n      itemSize: 2,\r\n      numItems: mesh.vertexTexCoords.length / 2,\r\n    };\r\n\r\n    // Triangle index buffer.\r\n    this.triangleIndicesBuffer = glContext.createBuffer()!;\r\n    glContext.bindBuffer(\r\n      glContext.ELEMENT_ARRAY_BUFFER,\r\n      this.triangleIndicesBuffer\r\n    );\r\n    glContext.bufferData(\r\n      glContext.ELEMENT_ARRAY_BUFFER,\r\n      new Uint16Array(mesh.triangleIndices),\r\n      glContext.STATIC_DRAW\r\n    );\r\n    this.bufferInfos.triangleIndices = {\r\n      itemSize: 1,\r\n      numItems: mesh.triangleIndices.length,\r\n    };\r\n  }\r\n}\r\n", "import { Attributes, Entity, System, SystemQueries } from \"ecsy-wd\";\r\nimport { MeshRenderData3D } from \"../DataComponent/MeshRenderData3D\";\r\nimport { Material } from \"../Material\";\r\nimport { MeshBuffer } from \"../MeshBuffer\";\r\nimport default_vert from \"../Shader/DefaultShader/default_vert.glsl\";\r\nimport error_frag from \"../Shader/ErrorShader/error_frag.glsl\";\r\n\r\nexport class WebGLMeshCompiler extends System {\r\n  static queries: SystemQueries = {\r\n    meshEntities: {\r\n      components: [MeshRenderData3D],\r\n      listen: {\r\n        added: true,\r\n        changed: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  mainCanvas!: HTMLCanvasElement;\r\n  canvasContext!: WebGLRenderingContext;\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.canvasContext = this.mainCanvas.getContext(\r\n      \"webgl\"\r\n    ) as WebGLRenderingContext;\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    // Compile all mesh.\r\n    this.queries.meshEntities.added?.forEach((entity) => {\r\n      this.compileMesh(entity);\r\n      this.compileMaterial(entity);\r\n    });\r\n    this.queries.meshEntities.changed?.forEach((entity) => {\r\n      this.compileMesh(entity);\r\n      this.compileMaterial(entity);\r\n    });\r\n  }\r\n\r\n  compileMesh(entity: Entity) {\r\n    const meshRenderData = entity.getMutableComponent(\r\n      MeshRenderData3D\r\n    ) as MeshRenderData3D;\r\n\r\n    if (!meshRenderData.mesh) {\r\n      return;\r\n    }\r\n\r\n    meshRenderData.meshBuffer = new MeshBuffer(\r\n      this.canvasContext,\r\n      meshRenderData.mesh\r\n    );\r\n  }\r\n\r\n  private async compileMaterial(entity: Entity) {\r\n    const meshRenderData = entity.getMutableComponent(\r\n      MeshRenderData3D\r\n    ) as MeshRenderData3D;\r\n\r\n    if (!meshRenderData.mesh) {\r\n      return;\r\n    }\r\n\r\n    let vert: string;\r\n    let frag: string;\r\n    if (meshRenderData.materialDesc.fetchShader) {\r\n      const [v, f] = await Promise.all([\r\n        fetch(meshRenderData.materialDesc.vertexSource),\r\n        fetch(meshRenderData.materialDesc.fragmentSource),\r\n      ]);\r\n\r\n      if (!v.ok || !f.ok) {\r\n        console.log(\"Error fetching shader.\");\r\n        vert = default_vert;\r\n        frag = error_frag;\r\n      } else {\r\n        vert = await v.text();\r\n        frag = await f.text();\r\n      }\r\n    } else {\r\n      vert = meshRenderData.materialDesc.vertexSource;\r\n      frag = meshRenderData.materialDesc.fragmentSource;\r\n    }\r\n\r\n    // Compile material.\r\n    try {\r\n      meshRenderData.material = new Material(\r\n        this.canvasContext,\r\n        vert,\r\n        frag,\r\n        meshRenderData.materialDesc.attributes,\r\n        meshRenderData.materialDesc.uniforms,\r\n        Object.keys(meshRenderData.materialDesc.textureSamplers)\r\n      );\r\n    } catch (e) {\r\n      meshRenderData.material = new Material(\r\n        this.canvasContext,\r\n        default_vert,\r\n        error_frag,\r\n        meshRenderData.materialDesc.attributes,\r\n        meshRenderData.materialDesc.uniforms,\r\n        Object.keys(meshRenderData.materialDesc.textureSamplers)\r\n      );\r\n      console.error(e);\r\n    }\r\n\r\n    // Load textures.\r\n    for (const [name, src] of Object.entries(\r\n      meshRenderData.materialDesc.textureSamplers\r\n    )) {\r\n      meshRenderData.material.loadTexture(name, src);\r\n    }\r\n  }\r\n}\r\n", "import { World } from \"ecsy-wd\";\r\nimport { IWorldRegister } from \"../../Utils/IWorldRegister\";\r\nimport { Canvas3DConstraintRenderer } from \"./System/BuildInRenderers/Canvas3DConstraintRenderer\";\r\nimport { Canvas3DLineFrameRenderer } from \"./System/BuildInRenderers/Canvas3DLineFrameRenderer\";\r\nimport { WebGLOpaqueRenderer } from \"./System/BuildInRenderers/WebGL/WebGLOpaqueRenderer\";\r\nimport { ClearCanvasWebGLSystem } from \"./System/ClearCanvasWebGLSystem\";\r\nimport { CubeMeshGeneratorSystem } from \"./System/MeshGeneratorSystems/CubeMeshGeneratorSystem\";\r\nimport { IcosphereMeshGeneratorSystem } from \"./System/MeshGeneratorSystems/IcosphereMeshGeneratorSystem\";\r\nimport { WebGLMeshCompiler } from \"./System/WebGLMeshCompiler\";\r\n\r\nexport class WebGLRenderPipelineRegister {\r\n  mainCanvas: HTMLCanvasElement;\r\n\r\n  constructor(mainCanvas: HTMLCanvasElement) {\r\n    this.mainCanvas = mainCanvas;\r\n  }\r\n\r\n  register: IWorldRegister = (world: World) => {\r\n    // Mesh initialization.\r\n\r\n    // Mesh generation & compilation.\r\n    world\r\n      .registerSystem(CubeMeshGeneratorSystem, {\r\n        mainCanvas: this.mainCanvas,\r\n      })\r\n      .registerSystem(IcosphereMeshGeneratorSystem, {\r\n        mainCanvas: this.mainCanvas,\r\n      })\r\n      .registerSystem(WebGLMeshCompiler, {\r\n        mainCanvas: this.mainCanvas,\r\n      });\r\n\r\n    // Render pipeline.\r\n    world\r\n      .registerSystem(ClearCanvasWebGLSystem, {\r\n        mainCanvas: this.mainCanvas,\r\n        priority: -100,\r\n      })\r\n      .registerSystem(WebGLOpaqueRenderer, {\r\n        mainCanvas: this.mainCanvas,\r\n      });\r\n  };\r\n}\r\n", "import { TagComponent } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../Core/ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class EditorSceneCamTag extends TagComponent {}\r\n", "import { TagComponent } from \"ecsy-wd\";\r\nimport { IComponent } from \"../../Core/ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class EditorSelectedTag extends TagComponent {}\r\n", "import { Component, ComponentSchema } from \"ecsy-wd\";\r\nimport { Entity } from \"ecsy-wd\";\r\nimport { Types } from \"ecsy-wd\";\r\nimport { World } from \"ecsy-wd\";\r\nimport { EditorSelectedTag } from \"../../Editor/TagComponent/EditorSelectedTag\";\r\nimport { IComponent } from \"../ComponentRegistry\";\r\n\r\nexport interface IEntityObject {\r\n  name: string;\r\n  id: number;\r\n  components: { [key: string]: any };\r\n}\r\n\r\nexport interface IComponentObject {\r\n  type: string;\r\n  data: any;\r\n}\r\n\r\n/**\r\n * This is a helper class for serializing and deserializing entities.\r\n */\r\nexport class EntitySerializer {\r\n  // The current deserialized entity data.\r\n  public entityData: IEntityObject | null = null;\r\n\r\n  /**\r\n   * Serialize an entity to a JSON object.\r\n   *\r\n   * @param component The component to serialize.\r\n   * @returns json object representation of the component.\r\n   */\r\n  public static serializeComponent(\r\n    component: Component<any>\r\n  ): IComponentObject {\r\n    const componentObject: IComponentObject = {\r\n      type: component.constructor.name,\r\n      data: {},\r\n    };\r\n\r\n    const componentSchema = Object.getPrototypeOf(component).constructor\r\n      .schema as ComponentSchema;\r\n\r\n    const componentDataContent: { [key: string]: any } = {};\r\n    Object.keys(component).forEach((key) => {\r\n      if (\r\n        Object.keys(componentSchema).includes(key) &&\r\n        componentSchema[key].type !== Types.Ref\r\n      ) {\r\n        componentDataContent[key] = component[key as keyof typeof component];\r\n      }\r\n    });\r\n\r\n    componentObject.data = componentDataContent;\r\n\r\n    return componentObject;\r\n  }\r\n\r\n  /**\r\n   * Serialize an entity to a JSON object.\r\n   *\r\n   * @param entity The entity to serialize.\r\n   * @returns json object representation of the entity.\r\n   */\r\n  public static serializeEntity(entity: Entity): IEntityObject {\r\n    const entityObject: IEntityObject = {\r\n      name: entity.name,\r\n      id: entity.id,\r\n      components: {},\r\n    };\r\n\r\n    // Get all components of entity.\r\n    const components = entity.getComponents();\r\n    const componentIndices = Object.keys(components);\r\n\r\n    // Add components data.\r\n    for (let j = 0; j < componentIndices.length; j++) {\r\n      const componentIndex = componentIndices[j];\r\n      const component = components[componentIndex];\r\n\r\n      // Skip EditorSelectedTag.\r\n      if (component.constructor.name === EditorSelectedTag.name) {\r\n        continue;\r\n      }\r\n\r\n      const componentObject = EntitySerializer.serializeComponent(component);\r\n\r\n      entityObject.components[componentObject.type] = componentObject.data;\r\n    }\r\n\r\n    return entityObject;\r\n  }\r\n  /**\r\n   * Add new entity to world from entity data.\r\n   *\r\n   * @param entityData The entity data to add.\r\n   * @param reserveId Whether to reserve the id of the entity, defaults to false.\r\n   */\r\n  public static deserializeEntity(\r\n    world: World,\r\n    entityData: IEntityObject,\r\n    reserveId: boolean = false\r\n  ): Entity | null {\r\n    // Check if entity already exists.\r\n    const entity = world.getEntityById(entityData.id);\r\n    if (reserveId && entity && entity.alive) {\r\n      console.warn(\r\n        `Entity with id ${entityData.id} already exists. Skipping deserialization.`\r\n      );\r\n      return null;\r\n    }\r\n\r\n    // Create new entity.\r\n    let newEntity;\r\n    if (reserveId) {\r\n      newEntity = world.createEntity(entityData.name, entityData.id);\r\n    } else {\r\n      newEntity = world.createEntity(entityData.name);\r\n    }\r\n\r\n    // Add components.\r\n    for (const componentName in entityData.components) {\r\n      const componentData = entityData.components[componentName];\r\n      // Add component.\r\n      const componentList = IComponent.getImplementations();\r\n      // Get the component with the name.\r\n      let component = componentList.find(\r\n        (component) => component.name === componentName\r\n      );\r\n      if (component) {\r\n        // Add component to entity.\r\n        newEntity.addComponent(component, componentData);\r\n      } else {\r\n        console.error(\"Component not found.\");\r\n      }\r\n    }\r\n\r\n    return entity;\r\n  }\r\n}\r\n", "import { World } from \"ecsy-wd\";\r\nimport { EditorSceneCamTag } from \"../../Editor/TagComponent/EditorSceneCamTag\";\r\nimport { EntitySerializer, IEntityObject } from \"./EntitySerializer\";\r\n\r\n// TODO: Add system serialization here.\r\nexport interface IWorldObject {\r\n  entities: IEntityObject[];\r\n}\r\n\r\n/**\r\n * This is a helper class for serializing and deserializing worlds.\r\n */\r\nexport class WorldSerializer {\r\n  /**\r\n   * Serialize a world to a JSON object.\r\n   *\r\n   * @param world The world to serialize.\r\n   * @returns IWorldObject containing all the serialized entities.\r\n   */\r\n  public static serializeWorld(world: World): IWorldObject {\r\n    const worldObject: IWorldObject = {\r\n      entities: [],\r\n    };\r\n\r\n    world.getAllEntities().forEach((entity) => {\r\n      // Filter out editor camera.\r\n      if (entity.hasComponent(EditorSceneCamTag)) {\r\n        return;\r\n      }\r\n\r\n      worldObject.entities.push(EntitySerializer.serializeEntity(entity));\r\n    });\r\n\r\n    return worldObject;\r\n  }\r\n\r\n  public static deserializeWorld(world: World, worldObject: IWorldObject) {\r\n    worldObject.entities.forEach((entityObject) => {\r\n      EntitySerializer.deserializeEntity(world, entityObject);\r\n    });\r\n  }\r\n}\r\n", "import { Entity } from \"ecsy-wd\";\r\nimport EventEmitter from \"events\";\r\n\r\nexport enum EditorControl {\r\n  View,\r\n  Move,\r\n  Rotate,\r\n}\r\n\r\nexport interface IEditorUIContext {\r\n  entityLists: HTMLCollectionOf<HTMLDivElement> | null;\r\n  entityInspector: HTMLCollectionOf<HTMLDivElement> | null;\r\n\r\n  playButton: HTMLButtonElement | null;\r\n\r\n  entityNameInput: HTMLInputElement | null;\r\n  createEntityButton: HTMLButtonElement | null;\r\n  deserializeEntityButton: HTMLInputElement | null;\r\n\r\n  saveWorldButton: HTMLButtonElement | null;\r\n  loadWorldButton: HTMLButtonElement | null;\r\n\r\n  editorModeDropdown: HTMLSelectElement | null;\r\n}\r\n\r\nexport interface IEditorEventContext {\r\n  onEntitySelected: Array<(entity: Entity) => void>;\r\n}\r\n\r\nexport interface IEditorControlContext {\r\n  ee: EventEmitter;\r\n  controlMode: EditorControl;\r\n\r\n  setControlMode(mode: EditorControl): void;\r\n}\r\n\r\nexport const editorUIContext: IEditorUIContext = {\r\n  entityLists: null,\r\n  entityInspector: null,\r\n  playButton: null,\r\n  entityNameInput: null,\r\n  createEntityButton: null,\r\n  deserializeEntityButton: null,\r\n  saveWorldButton: null,\r\n  loadWorldButton: null,\r\n\r\n  editorModeDropdown: null,\r\n};\r\n\r\nexport const editorEventContext: IEditorEventContext = {\r\n  onEntitySelected: [],\r\n};\r\n\r\nexport const editorControlContext: IEditorControlContext = {\r\n  ee: new EventEmitter(),\r\n  controlMode: EditorControl.Move,\r\n\r\n  setControlMode: function (mode: EditorControl): void {\r\n    this.controlMode = mode;\r\n    this.ee.emit(\"controlModeChanged\", mode);\r\n  },\r\n};\r\n", "import { cloneClonable, copyCopyable, createType } from \"ecsy-wd\";\r\nimport { vec2 } from \"gl-matrix\";\r\n\r\n/**\r\n * Wrapper for glmatrix vec2.\r\n *\r\n * @export\r\n * @class Vector2\r\n */\r\nexport class Vector2 {\r\n  value: vec2;\r\n\r\n  /**\r\n   * Creates an instance of Vector2.\r\n   * @param {number} x the x component of the vector.\r\n   * @param {number} y the y component of the vector.\r\n   * @memberof Vector2\r\n   */\r\n  constructor(x: number, y: number) {\r\n    this.value = vec2.fromValues(x, y);\r\n  }\r\n\r\n  set(x: number, y: number) {\r\n    vec2.set(this.value, x, y);\r\n  }\r\n\r\n  copy(v: Vector2): Vector2 {\r\n    this.value = vec2.copy(this.value, v.value);\r\n    return this;\r\n  }\r\n\r\n  clone(): Vector2 {\r\n    return new Vector2(this.value[0], this.value[1]);\r\n  }\r\n}\r\n\r\nexport const Vector2Type = createType({\r\n  name: \"Vector2\",\r\n  default: new Vector2(0, 0),\r\n  copy: copyCopyable<Vector2>,\r\n  clone: cloneClonable<Vector2>,\r\n});\r\n\r\nexport const Vector2CustomEditor = (\r\n  value: Vector2,\r\n  onChange: (value: Vector2) => void\r\n): [HTMLDivElement, (v: Vector2) => void] => {\r\n  const vector2Div = document.createElement(\"div\");\r\n  vector2Div.style.display = \"flex\";\r\n  vector2Div.style.flexDirection = \"row\";\r\n\r\n  const xLabel = document.createElement(\"label\");\r\n  xLabel.innerText = \"X\";\r\n  vector2Div.appendChild(xLabel);\r\n  const xInput = document.createElement(\"input\");\r\n  xInput.type = \"number\";\r\n  xInput.style.minWidth = \"0px\";\r\n  xInput.style.flexGrow = \"1\";\r\n  xInput.value = value.value[0].toString();\r\n  vector2Div.appendChild(xInput);\r\n\r\n  const yLabel = document.createElement(\"label\");\r\n  yLabel.innerText = \"Y\";\r\n  vector2Div.appendChild(yLabel);\r\n  const yInput = document.createElement(\"input\");\r\n  yInput.type = \"number\";\r\n  yInput.style.minWidth = \"0px\";\r\n  yInput.style.flexGrow = \"1\";\r\n  yInput.value = value.value[1].toString();\r\n  vector2Div.appendChild(yInput);\r\n\r\n  const update = () => {\r\n    onChange(new Vector2(parseFloat(xInput.value), parseFloat(yInput.value)));\r\n  };\r\n\r\n  const setVector2 = (v: Vector2) => {\r\n    // If the value is focused, don't update it.\r\n    if (\r\n      document.activeElement === xInput ||\r\n      document.activeElement === yInput\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    xInput.value = v.value[0].toString();\r\n    yInput.value = v.value[1].toString();\r\n  };\r\n\r\n  xInput.onchange = update;\r\n  yInput.onchange = update;\r\n\r\n  return [vector2Div, setVector2];\r\n};\r\n", "import { Attributes, System, SystemQueries } from \"ecsy-wd\";\r\nimport { quat, vec2, vec3 } from \"gl-matrix\";\r\nimport { TransformData3D } from \"../../Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { OrthographicCameraData3D } from \"../../Core/Render/DataComponent/OrthographicCameraData3D\";\r\nimport { PerspectiveCameraData3D } from \"../../Core/Render/DataComponent/PerspectiveCameraData3D\";\r\nimport { MainCameraTag } from \"../../Core/Render/TagComponent/MainCameraTag\";\r\nimport {\r\n  EditorControl,\r\n  editorControlContext,\r\n} from \"../../Editor/EditorContext\";\r\nimport { Vector2 } from \"../../Mathematics/Vector2\";\r\nimport { Vector3 } from \"../../Mathematics/Vector3\";\r\n\r\nconst rotateSensitive = 0.1;\r\nconst moveSensitive = 7;\r\nconst zoomSensitive = 0.5;\r\n\r\nexport class Cam3DDragSystem extends System {\r\n  static queries: SystemQueries = {\r\n    perspectiveMainCamera: {\r\n      components: [MainCameraTag, PerspectiveCameraData3D, TransformData3D],\r\n    },\r\n    orthographicMainCamera: {\r\n      components: [MainCameraTag, OrthographicCameraData3D, TransformData3D],\r\n    },\r\n  };\r\n\r\n  mainCanvas!: HTMLCanvasElement;\r\n  canvasContext!: CanvasRenderingContext2D;\r\n\r\n  deltaRot: Vector2 = new Vector2(0, 0);\r\n  deltaPos: Vector3 = new Vector3(0, 0, 0);\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    this.mainCanvas = attributes?.mainCanvas;\r\n    this.canvasContext = this.mainCanvas.getContext(\r\n      \"2d\"\r\n    ) as CanvasRenderingContext2D;\r\n\r\n    // Listen to mouse rotate event.\r\n    this.mainCanvas.addEventListener(\"mousemove\", (event) => {\r\n      // Check if the right mouse button is pressed.\r\n      if (event.buttons === 2) {\r\n        // Calculate the delta position.\r\n        vec2.add(\r\n          this.deltaRot.value,\r\n          this.deltaRot.value,\r\n          vec2.fromValues(\r\n            -event.movementX * rotateSensitive,\r\n            event.movementY * rotateSensitive\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n    // Listen to mouse move event.\r\n    this.mainCanvas.addEventListener(\"mousemove\", (event) => {\r\n      // Check if the middle mouse button is pressed.\r\n      if (\r\n        event.buttons === 4 ||\r\n        (editorControlContext.controlMode === EditorControl.View &&\r\n          event.buttons === 1)\r\n      ) {\r\n        // Calculate the delta position.\r\n        vec3.add(\r\n          this.deltaPos.value,\r\n          this.deltaPos.value,\r\n          vec3.fromValues(\r\n            event.movementX * rotateSensitive * moveSensitive,\r\n            event.movementY * rotateSensitive * moveSensitive,\r\n            0\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n    // Listen to mouse wheel zoom event.\r\n    this.mainCanvas.addEventListener(\"wheel\", (event) => {\r\n      vec3.add(\r\n        this.deltaPos.value,\r\n        this.deltaPos.value,\r\n        vec3.fromValues(0, 0, event.deltaY * zoomSensitive)\r\n      );\r\n    });\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    // Check if main camera exists.\r\n    if (\r\n      this.queries.perspectiveMainCamera.results.length +\r\n        this.queries.orthographicMainCamera.results.length ===\r\n      0\r\n    ) {\r\n      return;\r\n    }\r\n    // Check if there's more than one main camera.\r\n    else if (\r\n      this.queries.perspectiveMainCamera.results.length +\r\n        this.queries.orthographicMainCamera.results.length >\r\n      1\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Get the main camera transform.\r\n    let mainCameraEntity;\r\n    if (this.queries.perspectiveMainCamera.results.length === 1) {\r\n      mainCameraEntity = this.queries.perspectiveMainCamera.results[0];\r\n    } else {\r\n      mainCameraEntity = this.queries.orthographicMainCamera.results[0];\r\n    }\r\n\r\n    const mainCameraTransform = mainCameraEntity.getMutableComponent(\r\n      TransformData3D\r\n    ) as TransformData3D;\r\n\r\n    // Get the camera front vector front its transform rotation.\r\n    const front = vec3.fromValues(0, 0, -1);\r\n    vec3.transformQuat(front, front, mainCameraTransform.rotation.value);\r\n    // Get the camera right vector from its transform rotation.\r\n    const right = vec3.fromValues(1, 0, 0);\r\n    vec3.transformQuat(right, right, mainCameraTransform.rotation.value);\r\n    // Get the camera up vector from its transform rotation.\r\n    const up = vec3.fromValues(0, 1, 0);\r\n    vec3.transformQuat(up, up, mainCameraTransform.rotation.value);\r\n\r\n    // Rotate the camera around the y-axis.\r\n    const rotX = quat.create();\r\n    quat.rotateY(rotX, rotX, this.deltaRot.value[0] * delta);\r\n    // Rotate the camera around the camera's right vector.\r\n    const rotY = quat.create();\r\n    quat.setAxisAngle(rotY, right, this.deltaRot.value[1] * delta);\r\n    // Combine the two rotations.\r\n    const rot = quat.create();\r\n    quat.multiply(rot, rotX, rotY);\r\n    // Apply the rotation to the camera's rotation.\r\n    quat.multiply(\r\n      mainCameraTransform.rotation.value,\r\n      rot,\r\n      mainCameraTransform.rotation.value\r\n    );\r\n\r\n    // Move the camera position.\r\n    vec3.add(\r\n      mainCameraTransform.position.value,\r\n      mainCameraTransform.position.value,\r\n      vec3.scale(vec3.create(), front, this.deltaPos.value[2] * delta)\r\n    );\r\n    vec3.add(\r\n      mainCameraTransform.position.value,\r\n      mainCameraTransform.position.value,\r\n      vec3.scale(vec3.create(), right, this.deltaPos.value[0] * delta)\r\n    );\r\n    vec3.add(\r\n      mainCameraTransform.position.value,\r\n      mainCameraTransform.position.value,\r\n      vec3.scale(vec3.create(), up, this.deltaPos.value[1] * delta)\r\n    );\r\n\r\n    // Reset the delta rotation.\r\n    vec2.set(this.deltaRot.value, 0, 0);\r\n    // Reset the delta position.\r\n    vec3.set(this.deltaPos.value, 0, 0, 0);\r\n  }\r\n}\r\n", "import { Entity, Attributes } from \"ecsy-wd\";\r\nimport { mat3, mat4, vec2 } from \"gl-matrix\";\r\nimport { TransformData3D } from \"../../../Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { CanvasWebGLRenderer } from \"../../../Core/Render/System/CanvasWebGLRenderer\";\r\nimport { EditorSceneCamTag } from \"../../TagComponent/EditorSceneCamTag\";\r\n\r\nimport point_vert from \"../../../Core/Render/Shader/EditorShader/point_vert.glsl\";\r\nimport point_frag from \"../../../Core/Render/Shader/EditorShader/point_frag.glsl\";\r\nimport line_vert from \"../../../Core/Render/Shader/EditorShader/line_vert.glsl\";\r\nimport line_frag from \"../../../Core/Render/Shader/EditorShader/line_frag.glsl\";\r\n\r\nexport class EditorViewPortWebGLSystem extends CanvasWebGLRenderer {\r\n  static inspectEntity: Entity | null = null;\r\n  static inspectTransform: TransformData3D | null = null;\r\n\r\n  mousePosition: vec2 = vec2.create();\r\n  mouseDelta: vec2 = vec2.create();\r\n  mouseInCanvas: boolean = true;\r\n\r\n  highlightAxis: string | null = null;\r\n  movingAxis: string | null = null;\r\n\r\n  // WebGL shaders.\r\n  pointAttributes: { [key: string]: number } = {\r\n    vPosition: -1,\r\n    vSize: -1,\r\n    vColor: -1,\r\n  };\r\n  pointUniforms: { [key: string]: WebGLUniformLocation | null } = {\r\n    uMV: null,\r\n    uP: null,\r\n    uMVn: null,\r\n    uMVP: null,\r\n  };\r\n  pointShader: WebGLProgram | null = null;\r\n\r\n  axisAttributes: { [key: string]: number } = {\r\n    vPosition: -1,\r\n    vColor: -1,\r\n  };\r\n  axisUniforms: { [key: string]: WebGLUniformLocation | null } = {\r\n    uMV: null,\r\n    uP: null,\r\n    uMVn: null,\r\n    uMVP: null,\r\n  };\r\n  axisShader: WebGLProgram | null = null;\r\n\r\n  // WebGL buffers.\r\n  vertexPositionBufferItemSize = 3;\r\n  vertexSizeBufferItemSize = 1;\r\n  vertexColorBufferItemSize = 4;\r\n\r\n  pointVertexPositionBuffer: WebGLBuffer | null = null;\r\n  pointVertexSizeBuffer: WebGLBuffer | null = null;\r\n  pointVertexColorBuffer: WebGLBuffer | null = null;\r\n  axisVertexPositionBuffer: WebGLBuffer | null = null;\r\n  axisVertexColorBuffer: WebGLBuffer | null = null;\r\n  axisTipVertexPositionBuffer: WebGLBuffer | null = null;\r\n  axisTipVertexSizeBuffer: WebGLBuffer | null = null;\r\n  axisTipVertexColorBuffer: WebGLBuffer | null = null;\r\n\r\n  // Settings.\r\n  pointColor = [1.0, 1.0, 1.0, 1.0];\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    super.init(attributes);\r\n\r\n    // Update mouse position.\r\n    this.mainCanvas.addEventListener(\"mousemove\", (event) => {\r\n      this.mousePosition = this.getMousePos(event);\r\n      vec2.add(\r\n        this.mouseDelta,\r\n        this.mouseDelta,\r\n        vec2.fromValues(event.movementX, event.movementY)\r\n      );\r\n    });\r\n\r\n    // Update mouse in canvas.\r\n    this.mainCanvas.addEventListener(\"mouseenter\", () => {\r\n      this.mouseInCanvas = true;\r\n    });\r\n    this.mainCanvas.addEventListener(\"mouseleave\", () => {\r\n      this.mouseInCanvas = false;\r\n    });\r\n\r\n    // Update mouse left click.\r\n    this.mainCanvas.addEventListener(\"mousedown\", (event) => {\r\n      if (event.button == 0) {\r\n        if (this.highlightAxis) {\r\n          this.movingAxis = this.highlightAxis;\r\n        }\r\n      }\r\n    });\r\n    this.mainCanvas.addEventListener(\"mouseup\", (event) => {\r\n      if (event.button == 0) {\r\n        this.movingAxis = null;\r\n      }\r\n    });\r\n\r\n    // Initialize WebGL buffers.\r\n    const pointVertices = new Float32Array([0, 0, 0]);\r\n    this.pointVertexPositionBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexPositionBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      pointVertices,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const pointSizes = new Float32Array([10]);\r\n    this.pointVertexSizeBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexSizeBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      pointSizes,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const pointColors = new Float32Array(this.pointColor);\r\n    this.pointVertexColorBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexColorBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      pointColors,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const axisVertices = new Float32Array(\r\n      [\r\n        [0, 0, 0],\r\n        [1, 0, 0],\r\n        [0, 0, 0],\r\n        [0, 1, 0],\r\n        [0, 0, 0],\r\n        [0, 0, 1],\r\n      ].flat()\r\n    );\r\n    this.axisVertexPositionBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisVertexPositionBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      axisVertices,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const axisColors = new Float32Array(\r\n      [\r\n        [1, 0, 0, 1],\r\n        [1, 0, 0, 1],\r\n        [0, 0, 1, 1],\r\n        [0, 0, 1, 1],\r\n        [0, 1, 0, 1],\r\n        [0, 1, 0, 1],\r\n      ].flat()\r\n    );\r\n    this.axisVertexColorBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisVertexColorBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      axisColors,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const axisTipVertices = new Float32Array(\r\n      [\r\n        [1, 0, 0],\r\n        [0, 1, 0],\r\n        [0, 0, 1],\r\n      ].flat()\r\n    );\r\n    this.axisTipVertexPositionBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexPositionBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      axisTipVertices,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const axisTipSizes = new Float32Array([10, 10, 10]);\r\n    this.axisTipVertexSizeBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexSizeBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      axisTipSizes,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    const axisTipColors = new Float32Array(\r\n      [\r\n        [1, 0, 0, 1],\r\n        [0, 0, 1, 1],\r\n        [0, 1, 0, 1],\r\n      ].flat()\r\n    );\r\n    this.axisTipVertexColorBuffer = this.glContext.createBuffer();\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexColorBuffer\r\n    );\r\n    this.glContext.bufferData(\r\n      this.glContext.ARRAY_BUFFER,\r\n      axisTipColors,\r\n      this.glContext.STATIC_DRAW\r\n    );\r\n\r\n    // Compile and link the shader program.\r\n    this.pointShader = this.compileShader(\r\n      point_vert,\r\n      point_frag,\r\n      this.pointAttributes,\r\n      this.pointUniforms\r\n    );\r\n\r\n    this.axisShader = this.compileShader(\r\n      line_vert,\r\n      line_frag,\r\n      this.axisAttributes,\r\n      this.axisUniforms\r\n    );\r\n  }\r\n\r\n  public execute(delta: number, time: number): void {\r\n    try {\r\n      super.execute(delta, time);\r\n    } catch (error) {\r\n      console.warn(error);\r\n      return;\r\n    }\r\n\r\n    // View matrix.\r\n    const tView = this.getViewMatrix(this.cameraTransform);\r\n    // Projection matrix.\r\n    let tProjection: mat4;\r\n    if (this.cameraPerspective) {\r\n      tProjection = this.getPerspectiveProjectionMatrix(this.cameraPerspective);\r\n    } else if (this.cameraOrthographic) {\r\n      tProjection = this.getOrthographicProjectionMatrix(\r\n        this.cameraOrthographic\r\n      );\r\n    } else {\r\n      throw new Error(\"No camera found.\");\r\n    }\r\n\r\n    // Draw selected entity.\r\n    if (\r\n      EditorViewPortWebGLSystem.inspectTransform &&\r\n      !EditorViewPortWebGLSystem.inspectEntity?.hasComponent(EditorSceneCamTag)\r\n    ) {\r\n      this.drawInspectEntity(\r\n        EditorViewPortWebGLSystem.inspectEntity as Entity,\r\n        EditorViewPortWebGLSystem.inspectTransform as TransformData3D,\r\n        tView,\r\n        tProjection\r\n      );\r\n    }\r\n\r\n    // Reset mouse delta.\r\n    vec2.set(this.mouseDelta, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Get the mouse position in screen space.\r\n   *\r\n   * @param event canvas mouse event.\r\n   * @returns mouse position in screen space.\r\n   */\r\n  getMousePos(event: MouseEvent): vec2 {\r\n    const rect = this.mainCanvas.getBoundingClientRect();\r\n    return vec2.fromValues(event.clientX - rect.left, event.clientY - rect.top);\r\n  }\r\n\r\n  /**\r\n   * Draw the inspect entity.\r\n   */\r\n  drawInspectEntity(\r\n    entity: Entity,\r\n    transform: TransformData3D,\r\n    tView: mat4,\r\n    tProjection: mat4\r\n  ): void {}\r\n\r\n  /**\r\n   * Draw the gizmo point.\r\n   * @param tMV\r\n   * @param tProjection\r\n   * @param tMVn\r\n   * @param tMVP\r\n   */\r\n  protected drawPoint(tMV: mat4, tProjection: mat4, tMVn: mat3, tMVP: mat4) {\r\n    // Disable z testing.\r\n    this.glContext.disable(this.glContext.DEPTH_TEST);\r\n\r\n    this.glContext.useProgram(this.pointShader);\r\n\r\n    // Set the shader uniforms.\r\n    this.setUniforms(this.pointUniforms, tMV, tProjection, tMVn, tMVP);\r\n\r\n    // Set the shader attributes.\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexPositionBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vPosition as number,\r\n      this.vertexPositionBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexSizeBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vSize as number,\r\n      this.vertexSizeBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.pointVertexColorBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vColor as number,\r\n      this.vertexColorBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    this.glContext.drawArrays(this.glContext.POINTS, 0, 1);\r\n\r\n    // Enable z testing.\r\n    this.glContext.enable(this.glContext.DEPTH_TEST);\r\n  }\r\n\r\n  /**\r\n   * Draw the axis lines.\r\n   * @param tMV\r\n   * @param tProjection\r\n   * @param tMVn\r\n   * @param tMVP\r\n   */\r\n  protected drawAxis(tMV: mat4, tProjection: mat4, tMVn: mat3, tMVP: mat4) {\r\n    this.glContext.disable(this.glContext.DEPTH_TEST);\r\n\r\n    this.glContext.useProgram(this.axisShader);\r\n\r\n    // Set the shader uniforms.\r\n    this.setUniforms(this.axisUniforms, tMV, tProjection, tMVn, tMVP);\r\n\r\n    // Set the shader attributes.\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisVertexPositionBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.axisAttributes.vPosition as number,\r\n      this.vertexPositionBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisVertexColorBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.axisAttributes.vColor as number,\r\n      this.vertexColorBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    this.glContext.drawArrays(this.glContext.LINES, 0, 6);\r\n\r\n    // Draw the axis tips.\r\n    this.glContext.useProgram(this.pointShader);\r\n\r\n    // Set the shader uniforms.\r\n    this.setUniforms(this.pointUniforms, tMV, tProjection, tMVn, tMVP);\r\n\r\n    // Set the shader attributes.\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexPositionBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vPosition as number,\r\n      this.vertexPositionBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexSizeBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vSize as number,\r\n      this.vertexSizeBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n    this.glContext.bindBuffer(\r\n      this.glContext.ARRAY_BUFFER,\r\n      this.axisTipVertexColorBuffer\r\n    );\r\n    this.glContext.vertexAttribPointer(\r\n      this.pointAttributes.vColor as number,\r\n      this.vertexColorBufferItemSize,\r\n      this.glContext.FLOAT,\r\n      false,\r\n      0,\r\n      0\r\n    );\r\n\r\n    this.glContext.drawArrays(this.glContext.POINTS, 0, 3);\r\n\r\n    this.glContext.enable(this.glContext.DEPTH_TEST);\r\n  }\r\n\r\n  /**\r\n   * Set the uniforms for glContext.\r\n   * @param tMV\r\n   * @param tProjection\r\n   * @param tMVn\r\n   * @param tMVP\r\n   */\r\n  protected setUniforms(\r\n    uniforms: { [key: string]: WebGLUniformLocation | null },\r\n    tMV: mat4,\r\n    tProjection: mat4,\r\n    tMVn: mat3,\r\n    tMVP: mat4\r\n  ) {\r\n    this.glContext.uniformMatrix4fv(\r\n      uniforms.uMV as WebGLUniformLocation,\r\n      false,\r\n      tMV\r\n    );\r\n    this.glContext.uniformMatrix4fv(\r\n      uniforms.uP as WebGLUniformLocation,\r\n      false,\r\n      tProjection\r\n    );\r\n    this.glContext.uniformMatrix3fv(\r\n      uniforms.uMVn as WebGLUniformLocation,\r\n      false,\r\n      tMVn\r\n    );\r\n    this.glContext.uniformMatrix4fv(\r\n      uniforms.uMVP as WebGLUniformLocation,\r\n      false,\r\n      tMVP\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Compile the shader program and get the attribute and uniform locations.\r\n   * @param vertexSource vertex shader source code.\r\n   * @param fragmentSource fragment shader source code.\r\n   * @param attributes vertex attributes location dictionary.\r\n   * @param uniforms uniform location dictionary.\r\n   * @returns compiled shader program.\r\n   */\r\n  protected compileShader(\r\n    vertexSource: string,\r\n    fragmentSource: string,\r\n    attributes: { [key: string]: number },\r\n    uniforms: { [key: string]: WebGLUniformLocation | null }\r\n  ): WebGLProgram {\r\n    // Compile vertex shader.\r\n    const pointVertexShader = this.glContext.createShader(\r\n      this.glContext.VERTEX_SHADER\r\n    ) as WebGLShader;\r\n    if (!pointVertexShader) {\r\n      throw new Error(\"Failed to create point vertex shader.\");\r\n    }\r\n    this.glContext.shaderSource(pointVertexShader, vertexSource);\r\n    this.glContext.compileShader(pointVertexShader);\r\n    if (\r\n      !this.glContext.getShaderParameter(\r\n        pointVertexShader,\r\n        this.glContext.COMPILE_STATUS\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        this.glContext.getShaderInfoLog(pointVertexShader) as string\r\n      );\r\n    }\r\n\r\n    // Compile fragment shader.\r\n    const pointFragmentShader = this.glContext.createShader(\r\n      this.glContext.FRAGMENT_SHADER\r\n    ) as WebGLShader;\r\n    if (!pointFragmentShader) {\r\n      throw new Error(\"Failed to create point fragment shader.\");\r\n    }\r\n    this.glContext.shaderSource(pointFragmentShader, fragmentSource);\r\n    this.glContext.compileShader(pointFragmentShader);\r\n    if (\r\n      !this.glContext.getShaderParameter(\r\n        pointFragmentShader,\r\n        this.glContext.COMPILE_STATUS\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        this.glContext.getShaderInfoLog(pointFragmentShader) as string\r\n      );\r\n    }\r\n\r\n    // Compile and link shader program.\r\n    const shaderProgram = this.glContext.createProgram();\r\n    if (!shaderProgram) {\r\n      throw new Error(\"Failed to create point shader program.\");\r\n    }\r\n    this.glContext.attachShader(shaderProgram, pointVertexShader);\r\n    this.glContext.attachShader(shaderProgram, pointFragmentShader);\r\n    this.glContext.linkProgram(shaderProgram);\r\n    if (\r\n      !this.glContext.getProgramParameter(\r\n        shaderProgram,\r\n        this.glContext.LINK_STATUS\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        this.glContext.getProgramInfoLog(shaderProgram) as string\r\n      );\r\n    }\r\n\r\n    // Get the attribute and uniform locations.\r\n    for (const key in attributes) {\r\n      const location = this.glContext.getAttribLocation(shaderProgram, key);\r\n      attributes[key] = location;\r\n      this.glContext.enableVertexAttribArray(location);\r\n    }\r\n\r\n    for (const key in uniforms) {\r\n      const location = this.glContext.getUniformLocation(shaderProgram, key);\r\n      uniforms[key] = location;\r\n    }\r\n\r\n    return shaderProgram;\r\n  }\r\n}\r\n", "import { Attributes, Entity } from \"ecsy-wd\";\r\nimport { mat3, mat4, quat, vec2, vec3 } from \"gl-matrix\";\r\nimport { TransformData3D } from \"../../../Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { editorControlContext, EditorControl } from \"../../EditorContext\";\r\nimport { EditorViewPortWebGLSystem } from \"./EditorViewPortWebGLSystem\";\r\n\r\nconst moveControlThreshold = 10;\r\nconst rotateSensitive = 1;\r\n\r\nexport class EditorViewPortWebGLRotateSystem extends EditorViewPortWebGLSystem {\r\n  public init(attributes?: Attributes | undefined): void {\r\n    super.init(attributes);\r\n  }\r\n\r\n  public drawInspectEntity(\r\n    entity: Entity,\r\n    transform: TransformData3D,\r\n    tView: mat4,\r\n    tProjection: mat4\r\n  ): void {\r\n    // Check if currently in move mode.\r\n    if (editorControlContext.controlMode !== EditorControl.Rotate) {\r\n      return;\r\n    }\r\n\r\n    // Model matrix.\r\n    const tModel = this.getModelMatrix(transform, true);\r\n    // MV matrix.\r\n    const tMV = mat4.create();\r\n    mat4.multiply(tMV, tView, tModel);\r\n    // MVn matrix.\r\n    const tMVn = mat3.create();\r\n    mat3.normalFromMat4(tMVn, tMV);\r\n    // MVP matrix.\r\n    const tMVP = mat4.create();\r\n    mat4.multiply(tMVP, tProjection, tMV);\r\n\r\n    // Draw the transform point gizmo.\r\n    this.drawPoint(tMV, tProjection, tMVn, tMVP);\r\n    // Draw the transform axis gizmo.\r\n    this.drawAxis(tMV, tProjection, tMVn, tMVP);\r\n\r\n    // Get the NDC to viewport matrix.\r\n    const tNDCtoViewport = this.getNDCToViewportMatrix();\r\n\r\n    // Generate the transformation matrix from model space to Viewport space.\r\n    const tModelToViewport = mat4.create();\r\n    mat4.multiply(tModelToViewport, tNDCtoViewport, tMVP);\r\n\r\n    // Get the position of the entity in viewport space.\r\n    const startPoint = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 0, 0],\r\n      tModelToViewport\r\n    );\r\n    // Get the end points for the axis gizmo.\r\n    const endPointX = vec3.transformMat4(\r\n      vec3.create(),\r\n      [1, 0, 0],\r\n      tModelToViewport\r\n    );\r\n    const endPointY = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 1, 0],\r\n      tModelToViewport\r\n    );\r\n    const endPointZ = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 0, 1],\r\n      tModelToViewport\r\n    );\r\n\r\n    // If the mouse is in the canvas, get the closest axis.\r\n    if (this.mouseInCanvas) {\r\n      // Get the closest axis.\r\n      const xDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointX[0], endPointX[1])\r\n      );\r\n      const yDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointY[0], endPointY[1])\r\n      );\r\n      const zDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointZ[0], endPointZ[1])\r\n      );\r\n\r\n      const minDistance = Math.min(xDistance, yDistance, zDistance);\r\n\r\n      let axisTipSizes: Float32Array = new Float32Array([10, 10, 10]);\r\n      if (minDistance < moveControlThreshold) {\r\n        if (minDistance == xDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([20, 10, 10]);\r\n\r\n          this.highlightAxis = \"x\";\r\n        } else if (minDistance == yDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([10, 20, 10]);\r\n\r\n          this.highlightAxis = \"y\";\r\n        } else if (minDistance == zDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([10, 10, 20]);\r\n\r\n          this.highlightAxis = \"z\";\r\n        }\r\n      } else {\r\n        // Reset the axis size.\r\n        this.highlightAxis = null;\r\n      }\r\n\r\n      // Move the object.\r\n      if (this.movingAxis) {\r\n        switch (this.movingAxis) {\r\n          case \"x\":\r\n            this.rotateAxis(endPointX, startPoint, 0);\r\n            break;\r\n\r\n          case \"y\":\r\n            this.rotateAxis(endPointY, startPoint, 1);\r\n            break;\r\n\r\n          case \"z\":\r\n            this.rotateAxis(endPointZ, startPoint, 2);\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        this.axisTipVertexSizeBuffer\r\n      );\r\n      this.glContext.bufferData(\r\n        this.glContext.ARRAY_BUFFER,\r\n        axisTipSizes,\r\n        this.glContext.STATIC_DRAW\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move the object along the axis.\r\n   * @param axisEndPoint the end point of the axis.\r\n   * @param startPoint the start point of the axis.\r\n   */\r\n  private rotateAxis(axisEndPoint: vec3, startPoint: vec3, axisIndex: number) {\r\n    const axisDir = vec2.create();\r\n    vec2.sub(\r\n      axisDir,\r\n      vec2.fromValues(axisEndPoint[0], axisEndPoint[1]),\r\n      vec2.fromValues(startPoint[0], startPoint[1])\r\n    );\r\n    // Get the mouse move magnitude on the axis.\r\n    let axisMove = vec2.dot(\r\n      axisDir,\r\n      vec2.fromValues(this.mouseDelta[0], this.mouseDelta[1])\r\n    );\r\n    axisMove = (axisMove * rotateSensitive) / Math.pow(vec2.length(axisDir), 2);\r\n\r\n    // Move the object.\r\n    if (EditorViewPortWebGLSystem.inspectTransform) {\r\n      // Rotate the axis.\r\n      switch (axisIndex) {\r\n        case 0:\r\n          quat.rotateX(\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            axisMove\r\n          );\r\n          break;\r\n\r\n        case 1:\r\n          quat.rotateY(\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            axisMove\r\n          );\r\n          break;\r\n\r\n        case 2:\r\n          quat.rotateZ(\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            EditorViewPortWebGLSystem.inspectTransform.rotation.value,\r\n            axisMove\r\n          );\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      // Update the transform.\r\n      EditorViewPortWebGLSystem.inspectEntity?.getMutableComponent(\r\n        TransformData3D\r\n      );\r\n    }\r\n  }\r\n}\r\n", "import { Attributes, Entity } from \"ecsy-wd\";\r\nimport { TransformData3D } from \"../../../Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { EditorViewPortWebGLSystem } from \"./EditorViewPortWebGLSystem\";\r\nimport { mat3, mat4, quat, vec2, vec3 } from \"gl-matrix\";\r\nimport { EditorControl, editorControlContext } from \"../../EditorContext\";\r\n\r\nconst moveControlThreshold = 10;\r\n\r\nexport class EditorViewPortWebGLTransformSystem extends EditorViewPortWebGLSystem {\r\n  public init(attributes?: Attributes | undefined): void {\r\n    super.init(attributes);\r\n  }\r\n\r\n  public drawInspectEntity(\r\n    entity: Entity,\r\n    transform: TransformData3D,\r\n    tView: mat4,\r\n    tProjection: mat4\r\n  ): void {\r\n    // Check if currently in move mode.\r\n    if (editorControlContext.controlMode !== EditorControl.Move) {\r\n      return;\r\n    }\r\n\r\n    // Model matrix.\r\n    const tModel = this.getModelMatrix(transform, true);\r\n    // MV matrix.\r\n    const tMV = mat4.create();\r\n    mat4.multiply(tMV, tView, tModel);\r\n    // MVn matrix.\r\n    const tMVn = mat3.create();\r\n    mat3.normalFromMat4(tMVn, tMV);\r\n    // MVP matrix.\r\n    const tMVP = mat4.create();\r\n    mat4.multiply(tMVP, tProjection, tMV);\r\n\r\n    // Draw the transform point gizmo.\r\n    this.drawPoint(tMV, tProjection, tMVn, tMVP);\r\n    // Draw the transform axis gizmo.\r\n    this.drawAxis(tMV, tProjection, tMVn, tMVP);\r\n\r\n    // Get the NDC to viewport matrix.\r\n    const tNDCtoViewport = this.getNDCToViewportMatrix();\r\n\r\n    // Generate the transformation matrix from model space to Viewport space.\r\n    const tModelToViewport = mat4.create();\r\n    mat4.multiply(tModelToViewport, tNDCtoViewport, tMVP);\r\n\r\n    // Get the position of the entity in viewport space.\r\n    const startPoint = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 0, 0],\r\n      tModelToViewport\r\n    );\r\n    // Get the end points for the axis gizmo.\r\n    const endPointX = vec3.transformMat4(\r\n      vec3.create(),\r\n      [1, 0, 0],\r\n      tModelToViewport\r\n    );\r\n    const endPointY = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 1, 0],\r\n      tModelToViewport\r\n    );\r\n    const endPointZ = vec3.transformMat4(\r\n      vec3.create(),\r\n      [0, 0, 1],\r\n      tModelToViewport\r\n    );\r\n\r\n    // If the mouse is in the canvas, get the closest axis.\r\n    if (this.mouseInCanvas) {\r\n      // Get the closest axis.\r\n      const xDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointX[0], endPointX[1])\r\n      );\r\n      const yDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointY[0], endPointY[1])\r\n      );\r\n      const zDistance = vec2.distance(\r\n        this.mousePosition,\r\n        vec2.fromValues(endPointZ[0], endPointZ[1])\r\n      );\r\n\r\n      const minDistance = Math.min(xDistance, yDistance, zDistance);\r\n\r\n      let axisTipSizes: Float32Array = new Float32Array([10, 10, 10]);\r\n      if (minDistance < moveControlThreshold) {\r\n        if (minDistance == xDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([20, 10, 10]);\r\n\r\n          this.highlightAxis = \"x\";\r\n        } else if (minDistance == yDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([10, 20, 10]);\r\n\r\n          this.highlightAxis = \"y\";\r\n        } else if (minDistance == zDistance) {\r\n          // Highlight the axis.\r\n          axisTipSizes = new Float32Array([10, 10, 20]);\r\n\r\n          this.highlightAxis = \"z\";\r\n        }\r\n      } else {\r\n        // Reset the axis size.\r\n        this.highlightAxis = null;\r\n      }\r\n\r\n      // Move the object.\r\n      if (this.movingAxis) {\r\n        switch (this.movingAxis) {\r\n          case \"x\":\r\n            this.moveAxis(endPointX, startPoint, 0, transform.rotation.value);\r\n            break;\r\n\r\n          case \"y\":\r\n            this.moveAxis(endPointY, startPoint, 1, transform.rotation.value);\r\n            break;\r\n\r\n          case \"z\":\r\n            this.moveAxis(endPointZ, startPoint, 2, transform.rotation.value);\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      this.glContext.bindBuffer(\r\n        this.glContext.ARRAY_BUFFER,\r\n        this.axisTipVertexSizeBuffer\r\n      );\r\n      this.glContext.bufferData(\r\n        this.glContext.ARRAY_BUFFER,\r\n        axisTipSizes,\r\n        this.glContext.STATIC_DRAW\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move the object along the axis.\r\n   * @param axisEndPoint the end point of the axis.\r\n   * @param startPoint the start point of the axis.\r\n   */\r\n  private moveAxis(\r\n    axisEndPoint: vec3,\r\n    startPoint: vec3,\r\n    axisIndex: number,\r\n    rotation: quat\r\n  ) {\r\n    const axisDir = vec2.create();\r\n    vec2.sub(\r\n      axisDir,\r\n      vec2.fromValues(axisEndPoint[0], axisEndPoint[1]),\r\n      vec2.fromValues(startPoint[0], startPoint[1])\r\n    );\r\n    // Get the mouse move magnitude on the axis.\r\n    let axisMove = vec2.dot(\r\n      axisDir,\r\n      vec2.fromValues(this.mouseDelta[0], this.mouseDelta[1])\r\n    );\r\n    axisMove = axisMove / Math.pow(vec2.length(axisDir), 2);\r\n\r\n    // Move the object.\r\n    if (EditorViewPortWebGLSystem.inspectTransform) {\r\n      // Rotate the axis move.\r\n      const axisMoveVec = vec3.fromValues(0, 0, 0);\r\n      axisMoveVec[axisIndex] = axisMove;\r\n      vec3.transformQuat(axisMoveVec, axisMoveVec, rotation);\r\n\r\n      vec3.add(\r\n        EditorViewPortWebGLSystem.inspectTransform.position.value,\r\n        EditorViewPortWebGLSystem.inspectTransform.position.value,\r\n        axisMoveVec\r\n      );\r\n\r\n      // Update the transform.\r\n      EditorViewPortWebGLSystem.inspectEntity?.getMutableComponent(\r\n        TransformData3D\r\n      );\r\n    }\r\n  }\r\n}\r\n", "import { World } from \"ecsy-wd\";\r\nimport { IWorldRegister } from \"../Utils/IWorldRegister\";\r\nimport { Cam3DDragSystem } from \"../Utils/System/Cam3DDragSystem\";\r\nimport { EditorViewPort3DSystem } from \"./System/EditorViewPort3DSystem\";\r\nimport { EditorViewPortWebGLRotateSystem } from \"./System/EditorViewPortWebGlSystems/EditorViewPortWebGLRotateSystem\";\r\nimport { EditorViewPortWebGLTransformSystem } from \"./System/EditorViewPortWebGlSystems/EditorViewPortWebGLTransformSystem\";\r\n\r\nexport class EditorSystemWebGLRegister {\r\n  mainCanvas: HTMLCanvasElement;\r\n\r\n  constructor(mainCanvas: HTMLCanvasElement) {\r\n    this.mainCanvas = mainCanvas;\r\n  }\r\n\r\n  register: IWorldRegister = (world: World) => {\r\n    world.registerSystem(Cam3DDragSystem, {\r\n      mainCanvas: this.mainCanvas,\r\n    });\r\n\r\n    world\r\n      .registerSystem(EditorViewPortWebGLTransformSystem, {\r\n        mainCanvas: this.mainCanvas,\r\n      })\r\n      .registerSystem(EditorViewPortWebGLRotateSystem, {\r\n        mainCanvas: this.mainCanvas,\r\n      });\r\n  };\r\n}\r\n", "import { Attributes, System, SystemQueries } from \"ecsy-wd\";\r\nimport { MainCameraTag } from \"../../Core/Render/TagComponent/MainCameraTag\";\r\nimport { EditorSceneCamTag } from \"../TagComponent/EditorSceneCamTag\";\r\n\r\nexport class EditorCamTagAppendSystem extends System {\r\n  static queries: SystemQueries = {\r\n    mainCamera: {\r\n      components: [MainCameraTag],\r\n    },\r\n  };\r\n\r\n  init(attributes?: Attributes | undefined): void {\r\n    // Check if main camera exists.\r\n    if (this.queries.mainCamera.results.length === 0) {\r\n      throw new Error(\"Main camera not found.\");\r\n    }\r\n    // Check if there's more than one main camera.\r\n    else if (this.queries.mainCamera.results.length > 1) {\r\n      throw new Error(\"More than one main camera found.\");\r\n    }\r\n\r\n    // Append editor camera tag.\r\n    this.queries.mainCamera.results[0].addComponent(EditorSceneCamTag);\r\n  }\r\n\r\n  execute(delta: number, time: number): void {\r\n    // Do nothing.\r\n  }\r\n}\r\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "/**\r\n * Return the name of a component\r\n * @param {Component} Component\r\n * @private\r\n */\r\nexport function getName(Component) {\r\n  return Component.name;\r\n}\r\n\r\n/**\r\n * Return a valid property name for the Component\r\n * @param {Component} Component\r\n * @private\r\n */\r\nexport function componentPropertyName(Component) {\r\n  return getName(Component);\r\n}\r\n\r\n/**\r\n * Get a key from a list of components\r\n * @param {Array(Component)} Components Array of components to generate the key\r\n * @private\r\n */\r\nexport function queryKey(Components) {\r\n  var ids = [];\r\n  for (var n = 0; n < Components.length; n++) {\r\n    var T = Components[n];\r\n\r\n    if (!componentRegistered(T)) {\r\n      throw new Error(`Tried to create a query with an unregistered component`);\r\n    }\r\n\r\n    if (typeof T === \"object\") {\r\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\r\n      ids.push(operator + T.Component._typeId);\r\n    } else {\r\n      ids.push(T._typeId);\r\n    }\r\n  }\r\n\r\n  return ids.sort().join(\"-\");\r\n}\r\n\r\n// Detector for browser's \"window\"\r\nexport const hasWindow = typeof window !== \"undefined\";\r\n\r\n// performance.now() \"polyfill\"\r\nexport const now =\r\n  hasWindow && typeof window.performance !== \"undefined\"\r\n    ? performance.now.bind(performance)\r\n    : Date.now.bind(Date);\r\n\r\nexport function componentRegistered(T) {\r\n  return (\r\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\r\n    (T.isComponent && T._typeId !== undefined)\r\n  );\r\n}\r\n", "/**\r\n * @private\r\n * @class EventDispatcher\r\n */\r\nexport default class EventDispatcher {\r\n  constructor() {\r\n    this._listeners = {};\r\n    this.stats = {\r\n      fired: 0,\r\n      handled: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add an event listener\r\n   * @param {String} eventName Name of the event to listen\r\n   * @param {Function} listener Callback to trigger when the event is fired\r\n   */\r\n  addEventListener(eventName, listener) {\r\n    let listeners = this._listeners;\r\n    if (listeners[eventName] === undefined) {\r\n      listeners[eventName] = [];\r\n    }\r\n\r\n    if (listeners[eventName].indexOf(listener) === -1) {\r\n      listeners[eventName].push(listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if an event listener is already added to the list of listeners\r\n   * @param {String} eventName Name of the event to check\r\n   * @param {Function} listener Callback for the specified event\r\n   */\r\n  hasEventListener(eventName, listener) {\r\n    return (\r\n      this._listeners[eventName] !== undefined &&\r\n      this._listeners[eventName].indexOf(listener) !== -1\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener\r\n   * @param {String} eventName Name of the event to remove\r\n   * @param {Function} listener Callback for the specified event\r\n   */\r\n  removeEventListener(eventName, listener) {\r\n    var listenerArray = this._listeners[eventName];\r\n    if (listenerArray !== undefined) {\r\n      var index = listenerArray.indexOf(listener);\r\n      if (index !== -1) {\r\n        listenerArray.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispatch an event\r\n   * @param {String} eventName Name of the event to dispatch\r\n   * @param {Entity} entity (Optional) Entity to emit\r\n   * @param {Component} component\r\n   */\r\n  dispatchEvent(eventName, entity, component) {\r\n    this.stats.fired++;\r\n\r\n    var listenerArray = this._listeners[eventName];\r\n    if (listenerArray !== undefined) {\r\n      var array = listenerArray.slice(0);\r\n\r\n      for (var i = 0; i < array.length; i++) {\r\n        array[i].call(this, entity, component);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset stats counters\r\n   */\r\n  resetCounters() {\r\n    this.stats.fired = this.stats.handled = 0;\r\n  }\r\n}\r\n", "import EventDispatcher from \"./EventDispatcher.js\";\r\nimport { queryKey } from \"./Utils.js\";\r\n\r\nexport default class Query {\r\n  /**\r\n   * @param {Array(Component)} Components List of types of components to query\r\n   */\r\n  constructor(Components, manager) {\r\n    this.Components = [];\r\n    this.NotComponents = [];\r\n\r\n    Components.forEach((component) => {\r\n      if (typeof component === \"object\") {\r\n        this.NotComponents.push(component.Component);\r\n      } else {\r\n        this.Components.push(component);\r\n      }\r\n    });\r\n\r\n    if (this.Components.length === 0) {\r\n      throw new Error(\"Can't create a query without components\");\r\n    }\r\n\r\n    this.entities = [];\r\n\r\n    this.eventDispatcher = new EventDispatcher();\r\n\r\n    // This query is being used by a reactive system\r\n    this.reactive = false;\r\n\r\n    this.key = queryKey(Components);\r\n\r\n    // Fill the query with the existing entities\r\n    for (var i = 0; i < manager._entities.length; i++) {\r\n      var entity = manager._entities[i];\r\n      if (this.match(entity)) {\r\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\r\n        entity.queries.push(this);\r\n        this.entities.push(entity);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add entity to this query\r\n   * @param {Entity} entity\r\n   */\r\n  addEntity(entity) {\r\n    entity.queries.push(this);\r\n    this.entities.push(entity);\r\n\r\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\r\n  }\r\n\r\n  /**\r\n   * Remove entity from this query\r\n   * @param {Entity} entity\r\n   */\r\n  removeEntity(entity) {\r\n    let index = this.entities.indexOf(entity);\r\n    if (~index) {\r\n      this.entities.splice(index, 1);\r\n\r\n      index = entity.queries.indexOf(this);\r\n      entity.queries.splice(index, 1);\r\n\r\n      this.eventDispatcher.dispatchEvent(\r\n        Query.prototype.ENTITY_REMOVED,\r\n        entity\r\n      );\r\n    }\r\n  }\r\n\r\n  match(entity) {\r\n    return (\r\n      entity.hasAllComponents(this.Components) &&\r\n      !entity.hasAnyComponents(this.NotComponents)\r\n    );\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      key: this.key,\r\n      reactive: this.reactive,\r\n      components: {\r\n        included: this.Components.map((C) => C.name),\r\n        not: this.NotComponents.map((C) => C.name),\r\n      },\r\n      numEntities: this.entities.length,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return stats for this query\r\n   */\r\n  stats() {\r\n    return {\r\n      numComponents: this.Components.length,\r\n      numEntities: this.entities.length,\r\n    };\r\n  }\r\n}\r\n\r\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\r\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\r\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\r\n", "import EventEmitter from \"events\";\r\n\r\nexport class Component {\r\n  constructor(props) {\r\n    if (props !== false) {\r\n      const schema = this.constructor.schema;\r\n\r\n      for (const key in schema) {\r\n        if (props && props.hasOwnProperty(key)) {\r\n          this[key] = props[key];\r\n        } else {\r\n          const schemaProp = schema[key];\r\n          if (schemaProp.hasOwnProperty(\"default\")) {\r\n            this[key] = schemaProp.type.clone(schemaProp.default);\r\n          } else {\r\n            const type = schemaProp.type;\r\n            this[key] = type.clone(type.default);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\r\n        this.checkUndefinedAttributes(props);\r\n      }\r\n    }\r\n\r\n    this.eventEmitter = new EventEmitter();\r\n\r\n    this._pool = null;\r\n\r\n    this.onInspector = null;\r\n    this.useDefaultInspector = true;\r\n  }\r\n\r\n  copy(source) {\r\n    const schema = this.constructor.schema;\r\n\r\n    for (const key in schema) {\r\n      const prop = schema[key];\r\n\r\n      if (source.hasOwnProperty(key)) {\r\n        this[key] = prop.type.copy(source[key], this[key]);\r\n      }\r\n    }\r\n\r\n    // @DEBUG\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      this.checkUndefinedAttributes(source);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new this.constructor().copy(this);\r\n  }\r\n\r\n  reset() {\r\n    const schema = this.constructor.schema;\r\n\r\n    for (const key in schema) {\r\n      const schemaProp = schema[key];\r\n\r\n      if (schemaProp.hasOwnProperty(\"default\")) {\r\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\r\n      } else {\r\n        const type = schemaProp.type;\r\n        this[key] = type.copy(type.default, this[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    if (this._pool) {\r\n      this._pool.release(this);\r\n    }\r\n  }\r\n\r\n  getName() {\r\n    return this.constructor.getName();\r\n  }\r\n\r\n  checkUndefinedAttributes(src) {\r\n    const schema = this.constructor.schema;\r\n\r\n    // Check that the attributes defined in source are also defined in the schema\r\n    Object.keys(src).forEach((srcKey) => {\r\n      if (!schema.hasOwnProperty(srcKey)) {\r\n        console.warn(\r\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nComponent.schema = {};\r\nComponent.isComponent = true;\r\nComponent.getName = function () {\r\n  return this.displayName || this.name;\r\n};\r\n\r\nexport const COMPONENT_CHANGE_EVENT = \"COMPONENT_CHANGE_EVENT\";\r\n", "import { Component } from \"./Component.js\";\r\n\r\nexport class SystemStateComponent extends Component {}\r\n\r\nSystemStateComponent.isSystemStateComponent = true;\r\n", "import Query from \"./Query.js\";\r\nimport { componentRegistered } from \"./Utils.js\";\r\n\r\nexport class System {\r\n  canExecute() {\r\n    if (this._mandatoryQueries.length === 0) return true;\r\n\r\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\r\n      var query = this._mandatoryQueries[i];\r\n      if (query.entities.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  getName() {\r\n    return this.constructor.getName();\r\n  }\r\n\r\n  constructor(world, attributes) {\r\n    this.world = world;\r\n    this.enabled = true;\r\n\r\n    // @todo Better naming :)\r\n    this._queries = {};\r\n    this.queries = {};\r\n\r\n    this.priority = 0;\r\n\r\n    // Used for stats\r\n    this.executeTime = 0;\r\n\r\n    if (attributes && attributes.priority) {\r\n      this.priority = attributes.priority;\r\n    }\r\n\r\n    this._mandatoryQueries = [];\r\n\r\n    this.initialized = true;\r\n\r\n    if (this.constructor.queries) {\r\n      for (var queryName in this.constructor.queries) {\r\n        var queryConfig = this.constructor.queries[queryName];\r\n        var Components = queryConfig.components;\r\n        if (!Components || Components.length === 0) {\r\n          throw new Error(\"'components' attribute can't be empty in a query\");\r\n        }\r\n\r\n        // Detect if the components have already been registered\r\n        let unregisteredComponents = Components.filter(\r\n          (Component) => !componentRegistered(Component)\r\n        );\r\n\r\n        if (unregisteredComponents.length > 0) {\r\n          throw new Error(\r\n            `Tried to create a query '${\r\n              this.constructor.name\r\n            }.${queryName}' with unregistered components: [${unregisteredComponents\r\n              .map((c) => c.getName())\r\n              .join(\", \")}]`\r\n          );\r\n        }\r\n\r\n        var query = this.world.entityManager.queryComponents(Components);\r\n\r\n        this._queries[queryName] = query;\r\n        if (queryConfig.mandatory === true) {\r\n          this._mandatoryQueries.push(query);\r\n        }\r\n        this.queries[queryName] = {\r\n          results: query.entities,\r\n        };\r\n\r\n        // Reactive configuration added/removed/changed\r\n        var validEvents = [\"added\", \"removed\", \"changed\"];\r\n\r\n        const eventMapping = {\r\n          added: Query.prototype.ENTITY_ADDED,\r\n          removed: Query.prototype.ENTITY_REMOVED,\r\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\r\n        };\r\n\r\n        if (queryConfig.listen) {\r\n          validEvents.forEach((eventName) => {\r\n            if (!this.execute) {\r\n              console.warn(\r\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\r\n                  \", \"\r\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\r\n              );\r\n            }\r\n\r\n            // Is the event enabled on this system's query?\r\n            if (queryConfig.listen[eventName]) {\r\n              let event = queryConfig.listen[eventName];\r\n\r\n              if (eventName === \"changed\") {\r\n                query.reactive = true;\r\n                if (event === true) {\r\n                  // Any change on the entity from the components in the query\r\n                  let eventList = (this.queries[queryName][eventName] = []);\r\n                  query.eventDispatcher.addEventListener(\r\n                    Query.prototype.COMPONENT_CHANGED,\r\n                    (entity) => {\r\n                      // Avoid duplicates\r\n                      if (eventList.indexOf(entity) === -1) {\r\n                        eventList.push(entity);\r\n                      }\r\n                    }\r\n                  );\r\n                } else if (Array.isArray(event)) {\r\n                  let eventList = (this.queries[queryName][eventName] = []);\r\n                  query.eventDispatcher.addEventListener(\r\n                    Query.prototype.COMPONENT_CHANGED,\r\n                    (entity, changedComponent) => {\r\n                      // Avoid duplicates\r\n                      if (\r\n                        event.indexOf(changedComponent.constructor) !== -1 &&\r\n                        eventList.indexOf(entity) === -1\r\n                      ) {\r\n                        eventList.push(entity);\r\n                      }\r\n                    }\r\n                  );\r\n                } else {\r\n                  /*\r\n                  // Checking just specific components\r\n                  let changedList = (this.queries[queryName][eventName] = {});\r\n                  event.forEach(component => {\r\n                    let eventList = (changedList[\r\n                      componentPropertyName(component)\r\n                    ] = []);\r\n                    query.eventDispatcher.addEventListener(\r\n                      Query.prototype.COMPONENT_CHANGED,\r\n                      (entity, changedComponent) => {\r\n                        if (\r\n                          changedComponent.constructor === component &&\r\n                          eventList.indexOf(entity) === -1\r\n                        ) {\r\n                          eventList.push(entity);\r\n                        }\r\n                      }\r\n                    );\r\n                  });\r\n                  */\r\n                }\r\n              } else {\r\n                let eventList = (this.queries[queryName][eventName] = []);\r\n\r\n                query.eventDispatcher.addEventListener(\r\n                  eventMapping[eventName],\r\n                  (entity) => {\r\n                    // @fixme overhead?\r\n                    if (eventList.indexOf(entity) === -1)\r\n                      eventList.push(entity);\r\n                  }\r\n                );\r\n              }\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.executeTime = 0;\r\n    this.enabled = false;\r\n  }\r\n\r\n  play() {\r\n    this.enabled = true;\r\n  }\r\n\r\n  // @question rename to clear queues?\r\n  clearEvents() {\r\n    for (let queryName in this.queries) {\r\n      var query = this.queries[queryName];\r\n      if (query.added) {\r\n        query.added.length = 0;\r\n      }\r\n      if (query.removed) {\r\n        query.removed.length = 0;\r\n      }\r\n      if (query.changed) {\r\n        if (Array.isArray(query.changed)) {\r\n          query.changed.length = 0;\r\n        } else {\r\n          for (let name in query.changed) {\r\n            query.changed[name].length = 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    var json = {\r\n      name: this.getName(),\r\n      enabled: this.enabled,\r\n      executeTime: this.executeTime,\r\n      priority: this.priority,\r\n      queries: {},\r\n    };\r\n\r\n    if (this.constructor.queries) {\r\n      var queries = this.constructor.queries;\r\n      for (let queryName in queries) {\r\n        let query = this.queries[queryName];\r\n        let queryDefinition = queries[queryName];\r\n        let jsonQuery = (json.queries[queryName] = {\r\n          key: this._queries[queryName].key,\r\n        });\r\n\r\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\r\n        jsonQuery.reactive =\r\n          queryDefinition.listen &&\r\n          (queryDefinition.listen.added === true ||\r\n            queryDefinition.listen.removed === true ||\r\n            queryDefinition.listen.changed === true ||\r\n            Array.isArray(queryDefinition.listen.changed));\r\n\r\n        if (jsonQuery.reactive) {\r\n          jsonQuery.listen = {};\r\n\r\n          const methods = [\"added\", \"removed\", \"changed\"];\r\n          methods.forEach((method) => {\r\n            if (query[method]) {\r\n              jsonQuery.listen[method] = {\r\n                entities: query[method].length,\r\n              };\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return json;\r\n  }\r\n}\r\n\r\nSystem.isSystem = true;\r\nSystem.getName = function () {\r\n  return this.displayName || this.name;\r\n};\r\n\r\nexport function Not(Component) {\r\n  return {\r\n    operator: \"not\",\r\n    Component: Component,\r\n  };\r\n}\r\n", "import { Component } from \"./Component.js\";\r\n\r\nexport class TagComponent extends Component {\r\n  constructor() {\r\n    super(false);\r\n  }\r\n}\r\n\r\nTagComponent.isTagComponent = true;\r\n", "export const copyValue = (src) => src;\r\n\r\nexport const cloneValue = (src) => src;\r\n\r\nexport const copyArray = (src, dest) => {\r\n  if (!src) {\r\n    return src;\r\n  }\r\n\r\n  if (!dest) {\r\n    return src.slice();\r\n  }\r\n\r\n  dest.length = 0;\r\n\r\n  for (let i = 0; i < src.length; i++) {\r\n    dest.push(src[i]);\r\n  }\r\n\r\n  return dest;\r\n};\r\n\r\nexport const cloneArray = (src) => src && src.slice();\r\n\r\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\r\n\r\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\r\n\r\nexport const copyCopyable = (src, dest) => {\r\n  if (!src) {\r\n    return src;\r\n  }\r\n\r\n  if (!dest) {\r\n    return src.clone();\r\n  }\r\n\r\n  return dest.copy(src);\r\n};\r\n\r\nexport const cloneClonable = (src) => src && src.clone();\r\n\r\nexport function createType(typeDefinition) {\r\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\r\n\r\n  var undefinedProperties = mandatoryProperties.filter((p) => {\r\n    return !typeDefinition.hasOwnProperty(p);\r\n  });\r\n\r\n  if (undefinedProperties.length > 0) {\r\n    throw new Error(\r\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\r\n        \", \"\r\n      )}`\r\n    );\r\n  }\r\n\r\n  typeDefinition.isType = true;\r\n\r\n  return typeDefinition;\r\n}\r\n\r\n/**\r\n * Standard types\r\n */\r\nexport const Types = {\r\n  Number: createType({\r\n    name: \"Number\",\r\n    default: 0,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  Boolean: createType({\r\n    name: \"Boolean\",\r\n    default: false,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  String: createType({\r\n    name: \"String\",\r\n    default: \"\",\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  Array: createType({\r\n    name: \"Array\",\r\n    default: [],\r\n    copy: copyArray,\r\n    clone: cloneArray,\r\n  }),\r\n\r\n  Ref: createType({\r\n    name: \"Ref\",\r\n    default: undefined,\r\n    copy: copyValue,\r\n    clone: cloneValue,\r\n  }),\r\n\r\n  JSON: createType({\r\n    name: \"JSON\",\r\n    default: null,\r\n    copy: copyJSON,\r\n    clone: cloneJSON,\r\n  }),\r\n};\r\n", "export function generateId(length) {\r\n  var result = \"\";\r\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function injectScript(src, onLoad) {\r\n  var script = document.createElement(\"script\");\r\n  // @todo Use link to the ecsy-devtools repo?\r\n  script.src = src;\r\n  script.onload = onLoad;\r\n  (document.head || document.documentElement).appendChild(script);\r\n}\r\n", "/* global Peer */\r\nimport { injectScript, generateId } from \"./utils.js\";\r\nimport { hasWindow } from \"../Utils.js\";\r\n\r\nfunction hookConsoleAndErrors(connection) {\r\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\r\n  wrapFunctions.forEach((key) => {\r\n    if (typeof console[key] === \"function\") {\r\n      var fn = console[key].bind(console);\r\n      console[key] = (...args) => {\r\n        connection.send({\r\n          method: \"console\",\r\n          type: key,\r\n          args: JSON.stringify(args),\r\n        });\r\n        return fn.apply(null, args);\r\n      };\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"error\", (error) => {\r\n    connection.send({\r\n      method: \"error\",\r\n      error: JSON.stringify({\r\n        message: error.error.message,\r\n        stack: error.error.stack,\r\n      }),\r\n    });\r\n  });\r\n}\r\n\r\nfunction includeRemoteIdHTML(remoteId) {\r\n  let infoDiv = document.createElement(\"div\");\r\n  infoDiv.style.cssText = `\r\n    align-items: center;\r\n    background-color: #333;\r\n    color: #aaa;\r\n    display:flex;\r\n    font-family: Arial;\r\n    font-size: 1.1em;\r\n    height: 40px;\r\n    justify-content: center;\r\n    left: 0;\r\n    opacity: 0.9;\r\n    position: absolute;\r\n    right: 0;\r\n    text-align: center;\r\n    top: 0;\r\n  `;\r\n\r\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\r\n  document.body.appendChild(infoDiv);\r\n\r\n  return infoDiv;\r\n}\r\n\r\nexport function enableRemoteDevtools(remoteId) {\r\n  if (!hasWindow) {\r\n    console.warn(\"Remote devtools not available outside the browser\");\r\n    return;\r\n  }\r\n\r\n  window.generateNewCode = () => {\r\n    window.localStorage.clear();\r\n    remoteId = generateId(6);\r\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\r\n  if (!remoteId) {\r\n    remoteId = generateId(6);\r\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\r\n  }\r\n\r\n  let infoDiv = includeRemoteIdHTML(remoteId);\r\n\r\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\r\n  window.__ECSY_REMOTE_DEVTOOLS = {};\r\n\r\n  let Version = \"\";\r\n\r\n  // This is used to collect the worlds created before the communication is being established\r\n  let worldsBeforeLoading = [];\r\n  let onWorldCreated = (e) => {\r\n    var world = e.detail.world;\r\n    Version = e.detail.version;\r\n    worldsBeforeLoading.push(world);\r\n  };\r\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\r\n\r\n  let onLoaded = () => {\r\n    // var peer = new Peer(remoteId);\r\n    var peer = new Peer(remoteId, {\r\n      host: \"peerjs.ecsy.io\",\r\n      secure: true,\r\n      port: 443,\r\n      config: {\r\n        iceServers: [\r\n          { url: \"stun:stun.l.google.com:19302\" },\r\n          { url: \"stun:stun1.l.google.com:19302\" },\r\n          { url: \"stun:stun2.l.google.com:19302\" },\r\n          { url: \"stun:stun3.l.google.com:19302\" },\r\n          { url: \"stun:stun4.l.google.com:19302\" },\r\n        ],\r\n      },\r\n      debug: 3,\r\n    });\r\n\r\n    peer.on(\"open\", (/* id */) => {\r\n      peer.on(\"connection\", (connection) => {\r\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\r\n        connection.on(\"open\", function () {\r\n          // infoDiv.style.visibility = \"hidden\";\r\n          infoDiv.innerHTML = \"Connected\";\r\n\r\n          // Receive messages\r\n          connection.on(\"data\", function (data) {\r\n            if (data.type === \"init\") {\r\n              var script = document.createElement(\"script\");\r\n              script.setAttribute(\"type\", \"text/javascript\");\r\n              script.onload = () => {\r\n                script.parentNode.removeChild(script);\r\n\r\n                // Once the script is injected we don't need to listen\r\n                window.removeEventListener(\r\n                  \"ecsy-world-created\",\r\n                  onWorldCreated\r\n                );\r\n                worldsBeforeLoading.forEach((world) => {\r\n                  var event = new CustomEvent(\"ecsy-world-created\", {\r\n                    detail: { world: world, version: Version },\r\n                  });\r\n                  window.dispatchEvent(event);\r\n                });\r\n              };\r\n              script.innerHTML = data.script;\r\n              (document.head || document.documentElement).appendChild(script);\r\n              script.onload();\r\n\r\n              hookConsoleAndErrors(connection);\r\n            } else if (data.type === \"executeScript\") {\r\n              let value = eval(data.script);\r\n              if (data.returnEval) {\r\n                connection.send({\r\n                  method: \"evalReturn\",\r\n                  value: value,\r\n                });\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  // Inject PeerJS script\r\n  injectScript(\r\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\r\n    onLoaded\r\n  );\r\n}\r\n\r\nif (hasWindow) {\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n\r\n  // @todo Provide a way to disable it if needed\r\n  if (urlParams.has(\"enable-remote-devtools\")) {\r\n    enableRemoteDevtools();\r\n  }\r\n}\r\n", "import { Component, ComponentSchema, Types } from \"white-dwarf/ecsy\";\r\nimport { IComponent } from \"white-dwarf/src/Core/ComponentRegistry\";\r\n\r\n@IComponent.register\r\nexport class SunLightSpinData extends Component<SunLightSpinData> {\r\n  static schema: ComponentSchema = {\r\n    speed: {\r\n      type: Types.Number,\r\n      default: 0.01,\r\n    },\r\n  };\r\n\r\n  speed: number = 0.01;\r\n}\r\n", "import { quat } from \"gl-matrix\";\r\nimport { System, SystemQueries } from \"white-dwarf/ecsy\";\r\nimport { TransformData3D } from \"white-dwarf/src/Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { SunLightSpinData } from \"../DataComponent/SunLightSpinData\";\r\n\r\nexport class SunLightSpinSystem extends System {\r\n  static queries: SystemQueries = {\r\n    sunLightEntities: {\r\n      components: [TransformData3D, SunLightSpinData],\r\n    },\r\n  };\r\n\r\n  execute(delta: number, time: number): void {\r\n    this.queries.sunLightEntities.results.forEach((entity) => {\r\n      const transformData = entity.getMutableComponent(\r\n        TransformData3D\r\n      ) as TransformData3D;\r\n      const sunLightSpinData = entity.getComponent(\r\n        SunLightSpinData\r\n      ) as SunLightSpinData;\r\n\r\n      const spinQuat = quat.rotateY(\r\n        quat.create(),\r\n        quat.create(),\r\n        sunLightSpinData.speed * delta\r\n      );\r\n      quat.multiply(\r\n        transformData.rotation.value,\r\n        transformData.rotation.value,\r\n        spinQuat\r\n      );\r\n    });\r\n  }\r\n}\r\n", "import { mainWorld } from \"white-dwarf\";\r\nimport { coreRenderContext } from \"white-dwarf/src/Core/Context/RenderContext\";\r\nimport { CoreStartProps } from \"white-dwarf/src/Core/Context/SystemContext\";\r\nimport { systemContext } from \"white-dwarf/src/Core/CoreSetup\";\r\nimport { TransformData3D } from \"white-dwarf/src/Core/Locomotion/DataComponent/TransformData3D\";\r\nimport { IcosphereMeshGeneratorData } from \"white-dwarf/src/Core/Render/DataComponent/MeshGenerator/IcosphereMeshGeneratorData\";\r\nimport { MeshRenderData3D } from \"white-dwarf/src/Core/Render/DataComponent/MeshRenderData3D\";\r\nimport { PerspectiveCameraData3D } from \"white-dwarf/src/Core/Render/DataComponent/PerspectiveCameraData3D\";\r\nimport { MaterialDescriptor } from \"white-dwarf/src/Core/Render/Material\";\r\nimport { MainCameraInitSystem } from \"white-dwarf/src/Core/Render/System/MainCameraInitSystem\";\r\nimport { MainCameraTag } from \"white-dwarf/src/Core/Render/TagComponent/MainCameraTag\";\r\nimport { WebGLRenderPipelineRegister } from \"white-dwarf/src/Core/Render/WebGLRenderPipelineRegister\";\r\nimport {\r\n  WorldSerializer,\r\n  IWorldObject,\r\n} from \"white-dwarf/src/Core/Serialization/WorldSerializer\";\r\nimport {\r\n  EditorControl,\r\n  editorControlContext,\r\n} from \"white-dwarf/src/Editor/EditorContext\";\r\nimport { EditorSystemWebGLRegister } from \"white-dwarf/src/Editor/EditorSystemWebGLRegister\";\r\nimport { EditorCamTagAppendSystem } from \"white-dwarf/src/Editor/System/EditorCamTagAppendSystem\";\r\nimport { Vector3 } from \"white-dwarf/src/Mathematics/Vector3\";\r\nimport { Cam3DDragSystem } from \"white-dwarf/src/Utils/System/Cam3DDragSystem\";\r\nimport { SunLightSpinSystem } from \"./Systems/SunLightSpinSystem\";\r\n\r\nexport const main = () => {\r\n  systemContext.coreSetup = () => {\r\n    if (coreRenderContext.mainCanvas) {\r\n      new WebGLRenderPipelineRegister(coreRenderContext.mainCanvas).register(\r\n        mainWorld\r\n      );\r\n    }\r\n  };\r\n\r\n  systemContext.coreStart = async (props: CoreStartProps) => {\r\n    // If in editor mode, deserialize the world.\r\n    if (props.worldObject) {\r\n      WorldSerializer.deserializeWorld(mainWorld, props.worldObject);\r\n    } else {\r\n      // Read world.json.\r\n      const worldObject = (await fetch(\"world.json\").then((response) =>\r\n        response.json()\r\n      )) as IWorldObject;\r\n      // Deserialize the world.\r\n      WorldSerializer.deserializeWorld(mainWorld, worldObject);\r\n    }\r\n\r\n    // Change the control mode to view.\r\n    editorControlContext.setControlMode(EditorControl.View);\r\n\r\n    // Add a camera init system.\r\n    mainWorld.registerSystem(MainCameraInitSystem);\r\n\r\n    // Game play systems.\r\n    mainWorld\r\n      .registerSystem(Cam3DDragSystem, {\r\n        mainCanvas: coreRenderContext.mainCanvas,\r\n      })\r\n      .registerSystem(SunLightSpinSystem);\r\n  };\r\n\r\n  systemContext.editorStart = () => {\r\n    // Add a editor cam.\r\n    mainWorld\r\n      .createEntity(\"Editor Main Camera\")\r\n      .addComponent(TransformData3D, {\r\n        position: new Vector3(0, 0, -10),\r\n      })\r\n      .addComponent(PerspectiveCameraData3D, {\r\n        fov: Math.PI / 2,\r\n      })\r\n      .addComponent(MainCameraTag);\r\n\r\n    // Register Editor System.\r\n    if (coreRenderContext.mainCanvas) {\r\n      new EditorSystemWebGLRegister(coreRenderContext.mainCanvas).register(\r\n        mainWorld\r\n      );\r\n    }\r\n\r\n    // Setup editor scene camera.\r\n    try {\r\n      mainWorld.registerSystem(EditorCamTagAppendSystem);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n", "import { releaseInit } from \"white-dwarf\";\r\nimport { coreRenderContext } from \"white-dwarf/src/Core/Context/RenderContext\";\r\nimport { main } from \".\";\r\n\r\nwindow.onload = () => {\r\n  // Setup main canvas.\r\n  coreRenderContext.mainCanvas = document.getElementById(\r\n    \"mainCanvas\"\r\n  ) as HTMLCanvasElement;\r\n\r\n  // Disable right click.\r\n  coreRenderContext.mainCanvas.oncontextmenu = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Resize main canvas.\r\n  coreRenderContext.mainCanvas.width = coreRenderContext.mainCanvas.clientWidth;\r\n  coreRenderContext.mainCanvas.height =\r\n    coreRenderContext.mainCanvas.clientHeight;\r\n\r\n  // Development main.\r\n  main();\r\n\r\n  // White Dwarf Main\r\n  releaseInit();\r\n};\r\n\r\nwindow.onresize = () => {\r\n  // Resize main canvas.\r\n  if (coreRenderContext.mainCanvas) {\r\n    coreRenderContext.mainCanvas.width =\r\n      coreRenderContext.mainCanvas.clientWidth;\r\n    coreRenderContext.mainCanvas.height =\r\n      coreRenderContext.mainCanvas.clientHeight;\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "value", "EventEmitter", "len", "once", "copy", "clone", "Component", "EventEmitter", "clone", "Component", "Component", "Version", "Component", "Version", "Component", "System", "Component", "length", "script", "connection", "remoteId", "infoDiv", "IComponent", "scale", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "create", "clone", "copy", "fromValues", "set", "identity", "transpose", "invert", "adjoint", "determinant", "multiply", "translate", "scale", "rotate", "len", "fromTranslation", "fromScaling", "fromRotation", "fromQuat", "str", "frob", "add", "subtract", "multiplyScalar", "multiplyScalarAndAdd", "exactEquals", "equals", "mul", "sub", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "create", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "equals", "forEach", "create", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat3", "transformMat4", "rotate", "angle", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "value", "value", "perspective", "angle", "component", "import_events", "EventEmitter", "rotateSensitive", "moveControlThreshold", "EPSILON", "ARRAY_TYPE", "RANDOM", "degree", "create", "ARRAY_TYPE", "quat_exports", "add", "calculateW", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "exp", "fromEuler", "fromMat3", "fromValues", "getAngle", "getAxisAngle", "identity", "invert", "len", "length", "lerp", "ln", "mul", "multiply", "normalize", "pow", "random", "rotateX", "rotateY", "rotateZ", "rotationTo", "scale", "set", "setAxes", "setAxisAngle", "slerp", "sqlerp", "sqrLen", "squaredLength", "str", "create", "ARRAY_TYPE", "length", "fromValues", "ARRAY_TYPE", "normalize", "len", "dot", "cross", "len", "length", "forEach", "create", "create", "ARRAY_TYPE", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "equals", "EPSILON", "forEach", "create", "create", "ARRAY_TYPE", "identity", "setAxisAngle", "getAxisAngle", "EPSILON", "getAngle", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "calculateW", "exp", "ln", "pow", "scale", "slerp", "random", "RANDOM", "invert", "conjugate", "fromMat3", "fromEuler", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "rotationTo", "cross", "sqlerp", "setAxes", "queryKey", "componentRegistered", "hasWindow", "now", "EventDispatcher", "Query", "EventDispatcher", "queryKey", "import_events", "Component", "EventEmitter", "SystemStateComponent", "Component", "System", "Component", "componentRegistered", "Query", "TagComponent", "Component", "copyValue", "cloneValue", "copyArray", "cloneArray", "copyJSON", "cloneJSON", "createType", "Types", "copyValue", "cloneValue", "copyArray", "cloneArray", "copyJSON", "cloneJSON", "generateId", "length", "injectScript", "script", "hookConsoleAndErrors", "connection", "includeRemoteIdHTML", "remoteId", "infoDiv", "enableRemoteDevtools", "hasWindow", "generateId", "injectScript", "Component", "Types", "System", "quat_exports"]
}
